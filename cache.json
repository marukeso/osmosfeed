{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "JSer.info",
      "feedUrl": "http://jser.info/rss",
      "siteUrl": "https://jser.info/",
      "articles": [
        {
          "id": "https://jser.info/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/",
          "author": null,
          "description": "JSer.info #554 - MDNなどが利用するブラウザ実装の互換データを管理している @mdn/browser-compat-data 4.0.0がリリースされました。\nRelease v4.0.0 · mdn/browser-compat-data\n互換リストにDenoのデータが追加されています。\nDeno on MDN | Deno Blog\nスキーマにpreviewとaccepts_flagsの追加、XPathとXSLTのデータが不完全であるため削除などの変更も含まれています・\nThe State Of Mobile First and Desktop First - Ahmad Shadeedという記事では、CSSを書くときにMobileとDesktop向けのどちらを先に書くかについて書かれています。\nMobileとDesktopのどちらかを先に書いて、もう一方をMedia Queryで上書きしたときのコード量や拡張性の違いについて比較しています。\nFrom Create-React-App to Next | Kitty Giraudelという記事ではCreate React App(CRA)からNext.jsへの移行をどのようにしたかについて書かれています。\n<head>やスタイリングなどの項目ごとに、CRAからNext.jsにどのように移植したのかが書かれています。\n<Link>以外はどちらの環境でも実行できたため、移行の動作確認として両方の環境で動かしてテストする方法についても書かれています。\nヘッドライン\nAnnouncing React Native 0.65 · React Native\nreactnative.dev/blog/2021/08/17/version-065\nReact iOS Android\n\n\nReact Native 0.…",
          "link": "https://jser.info/2021/08/25/browser-compat-datadeno-mobile-first-and-desktop-first-create-react-appnext.js/",
          "publishedOn": "2021-08-25T02:44:57.000Z",
          "wordCount": 458,
          "title": "2021-08-25のJS: browser-compat-dataにDenoを追加、Mobile First and Desktop First、create-react-appからNext.jsに移行"
        },
        {
          "id": "https://jser.info/2021/08/17/next.js-11.1-rails-7import-mapsjs/",
          "author": null,
          "description": "JSer.info #553 - Next.js 11.1 がリリースされました。\nBlog - Next.js 11.1 | Next.js\nオープンリダイレクタの脆弱性が修正されています。\nexperimental.esmExternalsオプションでNode.jsのESMをサポートしています。\nnode-fetchのkeepAliveをデフォルトで有効化、Source Map/ESLint/next/imageの改善なども含まれています。\nまた、Rust製のJS/TS Compiler/BundlerであるSWCの作者であるDongYoon KangがVercelに入り、Next.jsでのコンパイルにSWCを利用できるように開発中とのことです。\nRails 7.0では、現在のwebpacker(webpack)ではなく、Import mapsベースのJavaScriptライブラリをデフォルトする方針が提案されています。\nModern web apps without JavaScript bundling or transpiling\nReplace webpack with importmapped Hotwire as default js by dhh · Pull Request #42999 · rails/rails\nImport mapsはES Modulesでimportする際に、importするモジュールの名前解決を定義するウェブ標準です。\n<script type=\"importmap\">\n{\n  \"imports\": {\n    \"app\": \"./src/app.js\",\n    \"md5\": \"https://cdn.skypack.dev/md5\"\n  }\n}\n</script>\n\n\nImport mapsはChromeのみがサポートしてい…",
          "link": "https://jser.info/2021/08/17/next.js-11.1-rails-7import-mapsjs/",
          "publishedOn": "2021-08-16T23:06:44.000Z",
          "wordCount": 523,
          "title": "2021-08-17のJS: Next.js 11.1、Rails 7で予定されているimport mapsベースのJSライブラリの利用"
        },
        {
          "id": "https://jser.info/2021/08/10/pnpm-6.12.0-webpack-5.49.0import-http-resource-vue-3.2/",
          "author": null,
          "description": "JSer.info #552 - パッケージマネージャであるpnpm 6.12.9がリリースされました。\nRelease v6.12.0 · pnpm/pnpm\npnpm 6.12.0ではpnpm env use --global 16.5.0のように、Node.jsをインストールするコマンドが追加されています。\nsingle binaryとして配布した場合に、Node.jsがグローバルにインストールされていない環境でもpnpmが利用できるようになります。\npnpm envが追加されています。\nUsing pnpm as a Node.js version manager · Discussion #3434 · pnpm/pnpm\nwebpack 5.49.0がリリースされました。\nRelease v5.49.0 · webpack/webpack\n試験的な機能としてexperiments.buildHttpというオプションで、リモートのリソースをimportできるようになっています。次のようにimport文でhttpなURLを指定すると、そのリソースをダウンロードして、bundleできます。\nimport pMap1 from \"https://cdn.skypack.dev/p-map\";\n\n\nダウンロードしたリソースは、<name>.webpack.lock.dataディレクトリに保存され、リソースのロックファイルが<name>.webpack.lockに保存されます。\nDenoに近いものとなっています。\nwebpack/examples/build-http at main · webpack/webpack\nadd experiments.buildHttp by sokra · Pull Request #13925 · webpack/webpack\nExp…",
          "link": "https://jser.info/2021/08/10/pnpm-6.12.0-webpack-5.49.0import-http-resource-vue-3.2/",
          "publishedOn": "2021-08-10T03:10:09.000Z",
          "wordCount": 422,
          "title": "2021-08-10のJS: pnpm 6.12.0、webpack 5.49.0(import http resource)、Vue 3.2"
        },
        {
          "id": "https://jser.info/2021/08/03/yarn3-chrome93-beta-deprecate-alert/",
          "author": null,
          "description": "JSer.info #551 - Yarn 3.0がリリースされました。\nYarn 3.0 🚀🤖 Performances, ESBuild, Better Patches, ... - DEV Community 👩‍💻👨‍💻\nberry/CHANGELOG.md at master · yarnpkg/berry\nNode.js 10のサポート終了、.pnp.cjsにリネーム、@yarnpkg/pnpifyを3つのパッケージに分解などの変更を含んでいます。\n@yarnpkg/sdks: Editor SDKs\n@yarnpkg/pnpify: PnPと互換性のないツールを実行するツール\n@yarnpkg/nm: node_modules linker\nまた、 exportsフィールドのサポート、pnpmライクなハードリンクのサポート、シェル構文のサポート改善、 ESBuildでのbundleをサポートする@yarnpkg/esbuild-plugin-pnpの追加なども含まれています。\nChrome 93 betaがリリースされました。\nChromium Blog: Chrome 93: Multi-Screen Window Placement, PWAs as URL Handlers, and More\nOrigin TrialとしてCOEPの導入をより手軽にするためのCross-Origin-Embedder-Policy：credentialless、URL Handlersの追加などが含まれています。\nAbortSignal.abort()メソッドのサポート、Stage 3のError causeとObject.hasOwnのサポートも含まれています。\nダークモード対応などではCSSのprefers-color-scheme media quer…",
          "link": "https://jser.info/2021/08/03/yarn3-chrome93-beta-deprecate-alert/",
          "publishedOn": "2021-08-03T03:38:52.000Z",
          "wordCount": 574,
          "title": "2021-08-03のJS: Yarn 3.0、Chrome 93 beta、cross origin iframeでのalert/prompt/confirmを削除"
        }
      ]
    },
    {
      "title": "Zennの「Next.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nextjs/feed",
      "siteUrl": "https://zenn.dev/topics/nextjs",
      "articles": [
        {
          "id": "https://zenn.dev/peg/articles/1878a6d6661295",
          "author": "ぺい",
          "description": "Next.jsにExpressを使うという記事を見かけて???となったので調べた。\nまずこの記事をコピペしてやってみた。\nhttps://www.forcia.com/blog/001559.html\n\nNext.jsはデフォルトではパスと一致するpagesディレクトリ配下の各ファイルにルーティングされます。 このルーティングに独自実装を組み込みたい場合にカスタムサーバを利用します。 例えば、特定のパスの場合のCookie操作やリダイレクト処理の実装などが挙げられます。\n参考: https://nextjs-ja-translation-docs.vercel.app/docs/adva...",
          "link": "https://zenn.dev/peg/articles/1878a6d6661295",
          "publishedOn": "2021-08-30T08:06:42.000Z",
          "wordCount": 563,
          "title": "Next.js BFFとかExpress記事",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q79fDVk6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BA%25E3%2581%2584%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520BFF%25E3%2581%25A8%25E3%2581%258BExpress%25E8%25A8%2598%25E4%25BA%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjU2OGRmNDg3OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/otanu/articles/f0a0b2bd0d9c44",
          "author": "otanu",
          "description": "先日、Next.js 11.1がリリースされました。\nhttps://nextjs.org/blog/next-11-1\nStorybookの最新版インストールを試してみたのですが、中々うまくいかなかったりしたので、環境の整理ついでにボイラープレートとしてまとめてみました。\n構成は以下のようになっています。\n\nyarn\nNext.js v11.1.0\nESLint v7.32.0(Next.js v11.1から含まれるように)\nTypeScript v4.4.2\nTailwind v2.2.8\nStorybook v6.3\nPrettier v2.3.2\nJest v27.1.0\n\nコー...",
          "link": "https://zenn.dev/otanu/articles/f0a0b2bd0d9c44",
          "publishedOn": "2021-08-29T10:19:30.000Z",
          "wordCount": 540,
          "title": "Next.js(v11.1)+TypeScript+Tailwind+SASS+Storybook+Jestのボイラープレート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yxWEstlL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:otanu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2528v11.1%2529%252BTypeScript%252BTailwind%252BSASS%252BStorybook%252BJest%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25A4%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzM0ZjNjYTg5OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/crea7/articles/5b2fde4be6b6f3",
          "author": "Crea7",
          "description": "以前Crea7というタイムラインとブログ機能を持ったサイトを作成した時に、Next.js + microCMS + Tailwind CSSで実装を行いました。\n\n 問題点\n記事の詳細画面では、microCMSのリッチエディタで作成した記事を、HTML形式で取得しinnerHTMLで表示を行なっています。\n\n      \n        \n        <div\nclassName=\"text-black pt-7\"\ndangerouslySetInnerHTML={{ __html: `${article.body}` }}\n></div>\n\n\n      \n...",
          "link": "https://zenn.dev/crea7/articles/5b2fde4be6b6f3",
          "publishedOn": "2021-08-29T09:57:18.000Z",
          "wordCount": 80,
          "title": "microCMS + TailwindCSSでのHTMLコンテンツに対するスタイル適用",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EPjxoynv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Crea7%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:microCMS%2520%252B%2520TailwindCSS%25E3%2581%25A7%25E3%2581%25AEHTML%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AB%25E9%2581%25A9%25E7%2594%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGU2MjZkZDdmNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/peg/articles/bca7b0ba13bce3",
          "author": "ぺい",
          "description": "https://qiita.com/G-awa/items/639f4f83aa4d97bc1f0d\nこちらのサンプルプロジェクトを利用。\nserveパッケージで静的ファイルをホスティングするローカルサーバーを立ち上げる。\n\n      \n        \n        yarn add -D serve\n\n\n      \n      \nhttps://qiita.com/Nossa/items/bdc6a9705e89ea8fc250\nhttps://rennnosukesann.hatenablog.com/entry/2018/03/19/233245\n\nexport, serv...",
          "link": "https://zenn.dev/peg/articles/bca7b0ba13bce3",
          "publishedOn": "2021-08-28T14:20:08.000Z",
          "wordCount": 470,
          "title": "NextJSでSSR/SSGの挙動を確認する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zepKBlqG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BA%25E3%2581%2584%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:NextJS%25E3%2581%25A7SSR%252FSSG%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjU2OGRmNDg3OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/thirosue/books/13ac92fc34ae22",
          "author": "Thirosue",
          "description": "Next.jsで管理画面のボイラーテンプレートを作成してみました。\n本書では、利用した技術などを紹介していきます。\n\n1. はじめに\n2. プロジェクトセットアップ\n3. 自動デプロイ（CI/CD）\n4. バックエンドの準備\n5. コンポーネント作成（Atomic Design）\n6. 共通処理\n7. 入力フォーム\n8. 状態管理\n9. 非同期処理（react-query）\n10. レンダリングオプション（CSR/SSG/SSR/ISR）\n11. 単体テスト",
          "link": "https://zenn.dev/thirosue/books/13ac92fc34ae22",
          "publishedOn": "2021-08-28T12:44:02.000Z",
          "wordCount": 38,
          "title": "Next.jsで作成する管理画面作成チュートリアル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2s_F8f3P--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9mNDkxYzEwMGQxLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          }
        },
        {
          "id": "https://zenn.dev/shuri/articles/d63c5d242859d9",
          "author": "ヴィジュアル系エンジニア",
          "description": "問題\nNext.js初心者です\nyarn dev後、Google Chromeで Next.jsの開発サーバーを動かしていると、\n\n      \n        \n        ・ リンクを押しても動作しない\n・ リロードすると永遠にページの読み込み中になる\n・ HMRも動いてない\n\n\n      \n      の問題が起きてました\n\n 解決方法\n\n      \n        \n        ・ Google chromeで chrome://serviceworker-internals/ を開く\n・ Scope: localhost:3000 の記載があるサービスワーカーを...",
          "link": "https://zenn.dev/shuri/articles/d63c5d242859d9",
          "publishedOn": "2021-08-28T07:49:22.000Z",
          "wordCount": 47,
          "title": "Next.jsの開発サーバー（dev server）が動かなくなる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rKs1YUzq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25B4%25E3%2582%25A3%25E3%2582%25B8%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%25AB%25E7%25B3%25BB%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25EF%25BC%2588dev%2520server%25EF%25BC%2589%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTAyYmE5M2RlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kijikunnn/articles/0d58e86c3ce0c9",
          "author": "きじくん",
          "description": "はじめに\n普段はPython、React、Next.js等を中心に勉強していますが、個人的に今最も注目しているフレームワークであるBlitz.jsの勉強も最近始めました。ここでは私がBlitz.jsを学んでいく過程で、自身の学習記録兼日本語ドキュメント感覚で今後書いていこうと思っています。\n\n 1. blitz generate\n\n      \n        \n        blitz generate [type] [model]\n\n\n      \n      もしくは\n\n      \n        \n        blitz g [type] [model]\n\n\n    ...",
          "link": "https://zenn.dev/kijikunnn/articles/0d58e86c3ce0c9",
          "publishedOn": "2021-08-27T14:59:06.000Z",
          "wordCount": 323,
          "title": "Blitz.js 学習記録 #1 - blitz generate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WW2Gwpwr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2581%2598%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blitz.js%2520%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%2520%25231%2520-%2520blitz%2520generate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjliOTM3ZWExNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/rabbit/articles/e7376c9fce90db",
          "author": "hanetsuki",
          "description": "Next.jsの環境でEmotionのcss関数でスタイリングを行う際に少し手間取ったのでその忘備録。\n\n 設定する\n\n emotionを追加\n\n      \n        \n        yarn add @emotion/react\n\n\n      \n      https://emotion.sh/docs/@emotion/react\ntsconfig.jsonにjsxImportSourceパラメーターを追加する。\n※ これが設定できていないとcss属性をpropできないので詰む。\n\n      \n        \n        {\n  \"compilerOptions\"...",
          "link": "https://zenn.dev/rabbit/articles/e7376c9fce90db",
          "publishedOn": "2021-08-27T14:02:12.000Z",
          "wordCount": 135,
          "title": "Next.js + Emotion(css関数) でスタイリングする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WQ_WyzHV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hanetsuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%252B%2520Emotion%2528css%25E9%2596%25A2%25E6%2595%25B0%2529%2520%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqcUw3akdtc1E3STZUTUtMcDBzUXVhd0FNUzNvcHBWNFVCRGZzPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/5b031d682d3fe2",
          "author": "空雲",
          "description": "Web-WorkerとWeb-Assemblyの連携に関して\nWeb-Workerを使えば、並列化による恩恵で総合的な動作速度の向上が見込めます\n対してWeb-Assemblyを使えば、演算速度のような直列的な向上が見込めます\nならば「二つを合わせれば、さらなるパフォーマンスアップが見込める」というのは誰でも思うことでしょう\nしかしこの二つの技術、いざ使おうとするとそれなりに面倒で敷居が高く感じます\nその辺りを簡単に実現するための方法を紹介します\n\n サンプル置き場\nhttps://github.com/SoraKumo001/next-worker3\nhttps://next-wo...",
          "link": "https://zenn.dev/sora_kumo/articles/5b031d682d3fe2",
          "publishedOn": "2021-08-27T12:32:02.000Z",
          "wordCount": 391,
          "title": "Next.jsでWeb-WorkerからWeb-Assembly呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---mG3_wf---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7Web-Worker%25E3%2581%258B%25E3%2582%2589Web-Assembly%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/catnose99/articles/49c12f84182bdf",
          "author": "CatNose",
          "description": "前提: TypeScript + Next.js + svgrでSVGをインポートする\n自分の関わっているNext.js製アプリケーションでは、svgrを導入することによりSVGを他のReactコンポーネントと同じ形でimportできるようにしています。\nこの記事の本筋からそれますが、svgrは以下のようにNext.jsへの導入できます。\n↓ インストール\n\n      \n        \n        $ npm install --save-dev @svgr/webpack\n\n\n      \n      ↓ @svgr/webpackをWebpackのloaderとして設定し...",
          "link": "https://zenn.dev/catnose99/articles/49c12f84182bdf",
          "publishedOn": "2021-08-27T06:12:13.000Z",
          "wordCount": 225,
          "title": "Next.js + TypeScriptでimportしたSVGの型がanyになってしまう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--s4l7BZUT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:CatNose%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%2520%252B%2520TypeScript%25E3%2581%25A7import%25E3%2581%2597%25E3%2581%259FSVG%25E3%2581%25AE%25E5%259E%258B%25E3%2581%258Cany%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzZjNjE0YTFmYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kijikunnn/articles/0c06902611964d",
          "author": "きじくん",
          "description": "はじめに\n初投稿です。勉強したことをアウトプットして残していきたいと思い、投稿を始めました。\n普段は学生でPythonによる機械学習で研究をしている一方で、プライベートではReactやNext.jsを勉強しています。\n今回は、ReactのフルスタックフレームワークであるBlitz.jsが先日、v1.0に向けた大きな修正が終了したと発信していたことを機に、久しぶりに触れてみました。\n\n過去にチュートリアルだけやったことはあったのですが、その時はデータベースがローカル環境のSQLiteもしくはPostgreSQLの2択だったため、「開発時だったら良いかもしれないけれど、実際にデプロイした...",
          "link": "https://zenn.dev/kijikunnn/articles/0c06902611964d",
          "publishedOn": "2021-08-26T15:48:36.000Z",
          "wordCount": 185,
          "title": "Blitz.jsでSupabaseのデータベースに接続する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5_4Z5kyO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2581%2598%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blitz.js%25E3%2581%25A7Supabase%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjliOTM3ZWExNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uttk/articles/f48fc75120f018",
          "author": "uttk",
          "description": "この記事について\nFirebase AuthenticationとNext.jsのgetServerSideProps()を使って、Cookieを使ったセッション管理方法を、この場を借りて共有したいと思います💪\nまた、この記事の内容は基本的に以下の記事の内容を踏襲したものとなっています。そのため、内容やソースコードに引用などが含まれますので、予めご了承ください🙇‍♂️\nhttps://firebase.google.com/docs/auth/admin/manage-cookies?hl=ja\nそれでは行きましょう🛴\n\n 環境構築\n\nこの記事ではFirebaseの環境構築については...",
          "link": "https://zenn.dev/uttk/articles/f48fc75120f018",
          "publishedOn": "2021-08-26T08:41:39.000Z",
          "wordCount": 1088,
          "title": "Next.jsとFirebaseでCookieを使った認証処理を実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1XXPVF4i--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uttk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A8Firebase%25E3%2581%25A7Cookie%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%25AA%258D%25E8%25A8%25BC%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzdkM2Q1NTAxNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/soberhiko/articles/aed491ed167bad",
          "author": "eyama",
          "description": "概要\nNext.js のアプリケーションで、CMS などから取得したコンテンツによって動的に生成される URL と、静的な URL の両方がある場合に、サイトマップをどのように自動生成させるかについての記事です。\nZenn に投稿されている記事など、先行事例も見られますが、以下の要件を満たすサイトマップの生成方法については見当たらなかったため、その共有を目的としています。\n\n対象 URL は Next.js の動的/静的ルーティングの両方を含む\n\n動的 URL のページはコンテンツ追加のタイミングでビルドが走らない\n\n\nサイトマップファイルはいくつかに分割し、インデックスファイルも生...",
          "link": "https://zenn.dev/soberhiko/articles/aed491ed167bad",
          "publishedOn": "2021-08-24T05:47:46.000Z",
          "wordCount": 524,
          "title": "Next.js で動的/静的ルーティングのサイトマップを生成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Em8s-QYB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25E3%2581%25A7%25E5%258B%2595%25E7%259A%2584%252F%25E9%259D%2599%25E7%259A%2584%25E3%2583%25AB%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2583%259E%25E3%2583%2583%25E3%2583%2597%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDIyMGM3YmU0MC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shimotaroo/articles/c8f2e751cd7877",
          "author": "ゆーたろー",
          "description": "概要\n以下の記事でNext.jsにESlint（JSのコードが正しいか検証してくれるツール）を導入した時に\n\n      \n        \n        Parsing error: Cannot find module 'next/babel'\n\n\n      \n      が出たので解決方法を残しておきます。\nhttps://fwywd.com/tech/next-eslint-prettier\n上記エラー出力が確認できたのは以下のファイル（Tailwind CSSを導入済み）\n\nnext.config.js\ntailwind.config.js\npostcss.config...",
          "link": "https://zenn.dev/shimotaroo/articles/c8f2e751cd7877",
          "publishedOn": "2021-08-23T09:44:44.000Z",
          "wordCount": 51,
          "title": "【Next.js】Parsing error: Cannot find module 'next/babel'の解決",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZJJdyzyf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2586%25E3%2583%25BC%25E3%2581%259F%25E3%2582%258D%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Next.js%25E3%2580%2591Parsing%2520error%253A%2520Cannot%2520find%2520module%2520%2527next%252Fbabel%2527%25E3%2581%25AE%25E8%25A7%25A3%25E6%25B1%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pMR2wxeDJfQXlDeXh5aHBSS3pRREFYc3pSeEZqeTc5cFNwZTRRbmc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/takepepe/articles/testing-with-nextjs",
          "author": "Takepepe",
          "description": "先日、Next.js で開発するアプリケーションテスト手法について、公式ドキュメントが追加され話題になりました。\nhttps://twitter.com/delba_oliveira/status/1427307677709967362\n取り上げられている 2 者はよく知られており、いずれかに触れたことがある方も多いかと思います。この公式ドキュメントページでは「何を使って」を紹介しているのみなので、どちらを選ぶべきか悩んだ方もいるのではないでしょうか？\n\nCypress\nJest & React Testing Library\n\nこの判断についてはドキュメントに書かれていなかった...",
          "link": "https://zenn.dev/takepepe/articles/testing-with-nextjs",
          "publishedOn": "2021-08-22T13:29:53.000Z",
          "wordCount": 355,
          "title": "Testing with Next.js",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6o_elqxP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takepepe%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Testing%2520with%2520Next.js%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dpejh1QmdoVHJXUHhiRlRFdm9IVHJ5WDNhRkdmdlJCLUtVVTl6SUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kyo9bo/articles/e02fdaa36fa322",
          "author": "kyo9bo",
          "description": "クエリが取得できない\nNextのメリットの一つとしてdynamic routingが挙げられると思います。しかし、paramを取得する際に一点気になる部分が存在します。\n\nPages that are statically optimized by Automatic Static Optimization will be hydrated without their route parameters provided, i.e query will be an empty object ({}).\n\n\nAfter hydration, Next.js will trigger an...",
          "link": "https://zenn.dev/kyo9bo/articles/e02fdaa36fa322",
          "publishedOn": "2021-08-22T06:03:00.000Z",
          "wordCount": 103,
          "title": "【Next.js】dynamic routingで、paramsがundefinedになる問題解決方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ptVOH9Uu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kyo9bo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Next.js%25E3%2580%2591dynamic%2520routing%25E3%2581%25A7%25E3%2580%2581params%25E3%2581%258Cundefined%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E5%2595%258F%25E9%25A1%258C%25E8%25A7%25A3%25E6%25B1%25BA%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjc5YjJkN2JmNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/bb10104c12080e",
          "author": "空雲",
          "description": "Next.jsでWeb-Workerを簡単に使うには\n前回の記事で書きましたが、Next.jsには最初からWeb-Workerを読み込むためのWebPack設定が入っているので、そのまま利用することが可能です\nしかしWeb-Workerとして書いたスクリプトを読み込む設定が入っているだけで、それ以外のサポートはありません\n機能を利用するには、コード上でそれなりに面倒な手順を記述する必要があります\n\n 前回の記事\nNext.jsでWeb-Workerを呼び出す\n\n サンプル置き場\nhttps://github.com/SoraKumo001/next-worker2\nhttps://n...",
          "link": "https://zenn.dev/sora_kumo/articles/bb10104c12080e",
          "publishedOn": "2021-08-22T04:16:21.000Z",
          "wordCount": 519,
          "title": "Next.jsでお手軽にWeb-Workerを呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GigYvxg5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25ABWeb-Worker%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yknight/articles/f0167dc5b0cceb",
          "author": "y_Knight",
          "description": "フロントエンド環境に実装をしたStorybookに、Sassを導入する\nStorybookへのSassの導入でcss-loaderでエラーにはまり、手順の記事を書きました。\n原因はWebpack4と５で破壊的な変更（更新）からPKGをインストールして解決できました。（めでたし）\nでも、フロントエンド開発に必要そうなベーシックな環境構築を、「ざーーっと、まとめたかった」ことが、個人的には一番の記事の動機です。\n\n 実装リスト\n\ndocker\nNext.js/TypeScript\nSass\nStorybook\njest\nAtomic design\n\n※導入は個人の責任でおねがいします。（...",
          "link": "https://zenn.dev/yknight/articles/f0167dc5b0cceb",
          "publishedOn": "2021-08-19T18:54:15.000Z",
          "wordCount": 600,
          "title": "【2021-8】 Next.js + TypeScript + Storybook(Atomic Design) + Sass + jest",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9TfjLDht--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:y_Knight%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%25902021-8%25E3%2580%2591%2520Next.js%2520%252B%2520TypeScript%2520%252B%2520Storybook%2528Atomic%2520Design%2529%2520%252B%2520Sass%2520%252B%2520jest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjk2NzljOWNhZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shimapon3/articles/90b32eb39acc50",
          "author": "shimapon",
          "description": "はじめに\nNext.jsでYouTube Data APIに触ってみたいと思います。\n下のように任意のチャンネルの情報を表示するまでの手順を記載します。\n\n表示例\n\n ドキュメント\nYoutube Data API Channels：　https://developers.google.com/youtube/v3/docs/channels\n\n 環境\n\nmacOS Big Sur\t (v11.2.1)\nNode.js (v16.3.0)\n\n\n API Keyを取得する\nまずは、YouTube Data APIでプロジェクトを作成し、API keyを取得しましょう。\n\n\nGoogle...",
          "link": "https://zenn.dev/shimapon3/articles/90b32eb39acc50",
          "publishedOn": "2021-08-19T10:50:07.000Z",
          "wordCount": 278,
          "title": "Next.js + YouTube Data API でchannelの情報を取得し表示してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--riyTOQsl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimapon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%2520%252B%2520YouTube%2520Data%2520API%2520%25E3%2581%25A7channel%25E3%2581%25AE%25E6%2583%2585%25E5%25A0%25B1%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/65420761a0bec2",
          "author": "空雲",
          "description": "Next.jsとWeb-Worker\nNext.jsは様々な機能を無設定で行えるように開発されています\nWeb-Workerに関しても同様で、next.config.jsに一切手を入れずに動かすことが出来ます\nどのぐらい手軽に利用可能か、試してみたいと思います\n\n 初期作業\n\n      \n        \n        yarn add next react react-dom\nyarn add -D typescript @types/node @types/react\n\n\n      \n      \n ソースコード\n\nsrc/libs/sums.ts\n\n1からcountで与え...",
          "link": "https://zenn.dev/sora_kumo/articles/65420761a0bec2",
          "publishedOn": "2021-08-18T12:58:21.000Z",
          "wordCount": 185,
          "title": "Next.jsでWeb-Workerを呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qqkuF2EI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7Web-Worker%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/byanbyan/articles/baa0b53f8cef4d",
          "author": "ゆゆゆ",
          "description": "Next.jsのnext/imageは、画質をコンポーネントごとに設定できる。\n詳しくは公式を！\nhttps://nextjs.org/docs/api-reference/next/image\n実際どんなもんか気になったので調べてみた。\n\n コードの書き方\nquality={}に値を設定する。\n1〜100の間で設定する（100が最高画質）\nデフォルトは75\n\n      \n        \n        import Image from 'next/image'\n\n<Image src=\"...\" quality={1} width={900} height={500} /&...",
          "link": "https://zenn.dev/byanbyan/articles/baa0b53f8cef4d",
          "publishedOn": "2021-08-16T06:53:01.000Z",
          "wordCount": 143,
          "title": "Nextjs 🐕 next/imageのqualityの数値いじってみた！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sJ42cDmR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2586%25E3%2582%2586%25E3%2582%2586%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nextjs%2520%2520%2520next%252Fimage%25E3%2581%25AEquality%25E3%2581%25AE%25E6%2595%25B0%25E5%2580%25A4%25E3%2581%2584%25E3%2581%2598%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fN2U3NDQzNzU4NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/snowwshiro/articles/e0386f9cb6743f",
          "author": "snowwshiro中の人",
          "description": "私が開発・運営しているスノーアクティビティイベントマッチングサービス「snowwshiro」に、Next.js × Relayを使ったGraphQLフロントエンド環境を構築しようとしたところ、かなり手間取りましたので、記事にしました。\n最終的なコードについては、以下にて公開しています。\nhttps://github.com/snowwshiro/nextjs-relay-demo\n\n 前提\n現在snowwshiroは、フロントエンド・バックエンド共にRuby on Railsにて開発しています。\n一方、私自身は現在他プロジェクトでフロントエンドはReact・Next.js、バックエンドは...",
          "link": "https://zenn.dev/snowwshiro/articles/e0386f9cb6743f",
          "publishedOn": "2021-08-16T05:04:17.000Z",
          "wordCount": 603,
          "title": "Next.js × Relay でGraphQLフロントエンド環境を構築してGitHub APIにアクセスする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Mj0iOwJd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:snowwshiro%25E4%25B8%25AD%25E3%2581%25AE%25E4%25BA%25BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%2520%25C3%2597%2520Relay%2520%25E3%2581%25A7GraphQL%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2597%25E3%2581%25A6GitHub%2520API%25E3%2581%25AB%25E3%2582%25A2%25E3%2582%25AF%25E3%2582%25BB%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTIzNjc5OTk4YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/maztak/articles/023ff810071d17",
          "author": "Takuya Matsuda",
          "description": "まず Bing Search Services は Cognitive Services Bing Custom Search に移行中であるが、いずれの Bing Custom Search API（Bing Web Search API と混同しないように）のドキュメントにも非推奨となっているjsライブラリrequestによる記法しか書いてない（2021年8月16日現在）。\nhttps://docs.microsoft.com/ja-jp/bing/search-apis/bing-custom-search/quickstarts/rest/nodejs\n今回はNext.js（R...",
          "link": "https://zenn.dev/maztak/articles/023ff810071d17",
          "publishedOn": "2021-08-16T03:39:44.000Z",
          "wordCount": 118,
          "title": "fetch による Bing Custom Search API の叩き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y1DMit1K--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takuya%2520Matsuda%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:fetch%2520%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%2520Bing%2520Custom%2520Search%2520API%2520%25E3%2581%25AE%25E5%258F%25A9%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pneVNwNkxqcEZSMEVzVXhmb2pzTVZHblBjYUVSNnRKRVhuY1NzNXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/thetalemon/articles/20b1e5e11be545",
          "author": "まなさす",
          "description": "概要\n\nNext.js(ts) + Node.js(ts) + apollo + graphql-code-generatorでスキーマファーストなGraphQL環境を構築していくよ！\n\n完成物\n\n\n対象: ざっくりGraphQLでスキーマファーストな環境を構築する方法を知りたい人\n説明しないこと: .graphqlファイルの書き方とかGraphQLの設計とか、具体的なこと\n\n\n GraphQLとは何か\n\nAPIにクエリを投げてFE側から返却するレスポンスを制限できるAPIの形式\n有名どころだとNetflixとかで利用されていて、APIの返却をFEで制御できるので『画面やデバイスによ...",
          "link": "https://zenn.dev/thetalemon/articles/20b1e5e11be545",
          "publishedOn": "2021-08-15T14:32:16.000Z",
          "wordCount": 648,
          "title": "Next.jsとNode.jsでスキーマファーストなGraphQLの環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8NLQcjjD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25BE%25E3%2581%25AA%25E3%2581%2595%25E3%2581%2599%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25E3%2581%25A8Node.js%25E3%2581%25A7%25E3%2582%25B9%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2595%25E3%2582%25A1%25E3%2583%25BC%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AAGraphQL%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTYzY2I2MWY4MC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/maztak/articles/6dba8e02771c29",
          "author": "Takuya Matsuda",
          "description": "Next.js x TypeScript x TailwindCss の構成で開発をする人も増えていますよね。TailwindCssはBootStrapと違ってTemplateを与えるものではなくCSSコーディングを不要にモダンなWebサイトを作るCSSフレームワークと理解しています。そう入ってもTemplateが欲しいしなるべく公式っぽいものを使いたいので、公式ドキュメントでも推奨されている Tailwind UI を使います。\nhttps://tailwindui.com/preview\n\n HTMLではなくReactに切り替えてコードをコピーしよう\n\nこれのHeader Nav ...",
          "link": "https://zenn.dev/maztak/articles/6dba8e02771c29",
          "publishedOn": "2021-08-15T04:54:28.000Z",
          "wordCount": 45,
          "title": "Next.js で Tailwind UI を使用するときにハマった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--SdOBMz9c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Takuya%2520Matsuda%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25E3%2581%25A7%2520Tailwind%2520UI%2520%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E3%2583%258F%25E3%2583%259E%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pneVNwNkxqcEZSMEVzVXhmb2pzTVZHblBjYUVSNnRKRVhuY1NzNXc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuyakato/articles/688efbc128eff6",
          "author": "Yuya Kato",
          "description": "目次\n\nInsightFaceとFastAPIで顔検出サーバを作ってみた\nInsightFaceの顔検出結果をNext.jsで可視化してみた\nInsightFaceで顔認証（特徴量抽出、比較）してみた\nInsightFaceをGPUで動かしてみた\nInsightFaceを使って動画から顔検出してみた\nInsightFaceの顔検出結果をブラウザ上で動画にオーバーレイ表示してみた（本記事）\n\n\n 初めに\n前回の記事では、InsightFaceによる顔検出の結果をOpenCVを使って可視化（オーバーレイ表示）し、動画ファイルとして出力しました。\n今回は、ウェブブラウザ上で動画にオーバーレ...",
          "link": "https://zenn.dev/yuyakato/articles/688efbc128eff6",
          "publishedOn": "2021-08-14T12:53:20.000Z",
          "wordCount": 126,
          "title": "InsightFaceの顔検出結果をブラウザ上で動画にオーバーレイ表示してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--20exEA0j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:InsightFace%25E3%2581%25AE%25E9%25A1%2594%25E6%25A4%259C%25E5%2587%25BA%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E4%25B8%258A%25E3%2581%25A7%25E5%258B%2595%25E7%2594%25BB%25E3%2581%25AB%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2590%25E3%2583%25BC%25E3%2583%25AC%25E3%2582%25A4%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSUhmX2JGaE1tcVp0aDNYQUI2NFY0aGRnNlJWbE5CbjVhZmQzdXc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yosket/articles/a4402ffa2a12e4",
          "author": "Yosuke Tanaka",
          "description": "何を作ったか\n2021年7月にQiitaに投稿された『エンジニア・プログラマにしか使えないSNSを作ってみた話』という記事で紹介されているSNSのウェブクライアントを、7月の4連休を使って作ってみました。\nhttps://sofeap.vercel.app/\n\n 『エンジニア・プログラマにしか使えないSNS』とは\nhttps://qiita.com/HawkClaws/items/599d7666f55e79ef7f56\n\n本当のエンジニア・プログラマしか使えないSNSを作ってみました！\nつまり、WebApi提供のみのSNSです\n一般ピープルが使うようなフロントエンドなんてありません...",
          "link": "https://zenn.dev/yosket/articles/a4402ffa2a12e4",
          "publishedOn": "2021-08-14T12:34:23.000Z",
          "wordCount": 143,
          "title": "『エンジニア・プログラマにしか使えないSNSを作ってみた話』のクライアントを作ってみた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xK4AT_rS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosuke%2520Tanaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%258E%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AB%25E3%2581%2597%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584SNS%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%258F%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTRmMjNhMmNjNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/09a1369e53e5d0",
          "author": "空雲",
          "description": "Next.jsの11.1系統からswc導入のアナウンス\nNext.jsの11.1系統からビルドにswcを導入するというアナウンスがありました\nこのswcはネイティブアプリケーションなので、JavaScript製のビルドツールより高速に動作します\nところが開発途上のものだけあって、実際にどうやって使うのかはアナウンス上に何も書かれていません\nネット界隈でもアナウンスをそのまま垂れ流すだけで、実際に試してみる人がさっぱり見つかりませんでした\nということで、実際に使ってみたいと思います\n\n Next.jsのインストール\n\n      \n        \n        yarn add n...",
          "link": "https://zenn.dev/sora_kumo/articles/09a1369e53e5d0",
          "publishedOn": "2021-08-14T06:08:03.000Z",
          "wordCount": 71,
          "title": "Next.jsでビルドにswcを使う(2021/8/14版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KCGgURP9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25ABswc%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25282021%252F8%252F14%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoya_kuma/articles/fda80ba103ac41",
          "author": "Naoya Kumasegawa",
          "description": "表題の通りですが、Next.jsでShopifyのストアフロントをつくってみました。\nもともと業務でShopifyを使っていて、技術的にSSRやSSG・ISRなどの様々なレンダリング方法に対応したNext.jsに興味があったので、その二つを合わせるような形でストアを構築してみました。\nデザインはShopifyのデフォルトテーマであったDebutテーマ(いまはDawnになりましたね)を参考にしています。\n(gif貼ろうとしたけど重いのか失敗...)\n\n\n 使用技術など\nストア: https://nextjs-shopify-store.vercel.app\nリポジトリ: https://g...",
          "link": "https://zenn.dev/naoya_kuma/articles/fda80ba103ac41",
          "publishedOn": "2021-08-13T10:24:43.000Z",
          "wordCount": 229,
          "title": "Next.jsでShopifyのストアフロントをつくってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CojtjyF5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Naoya%2520Kumasegawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7Shopify%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDhhNmU1MmY4Zi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/95fa80e1489c28",
          "author": "空雲",
          "description": "Next.jsのインストール\n\n      \n        \n        yarn add next@11.1.1-canary.6\n\n\n      \n      \n Next.jsの設定\n\nnext.config.js\n\n\n      \n        \n        const config = {\n    experimental: { swcLoader: true }\n};\nmodule.exports = config;\n\n\n      \n      \n ビルド\n\n      \n        \n        yarn next build\n\n\n      \n ...",
          "link": "https://zenn.dev/sora_kumo/articles/95fa80e1489c28",
          "publishedOn": "2021-08-13T09:43:12.000Z",
          "wordCount": 33,
          "title": "Next.jsでビルドにswcを使う(2021/8/13版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yRfrrLUE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E3%2583%2593%25E3%2583%25AB%25E3%2583%2589%25E3%2581%25ABswc%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25282021%252F8%252F13%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hirockysan/articles/c10deae91a0a18",
          "author": "ひろっきー",
          "description": "こんにちは。ひろっきーです。\n現在ITエンジニア転職を目指して現在、独学９ヶ月目で日々学習、現在はNext.js、TypeScript などを学習しており、ポートフォリオとしてSNSアプリケーションを作成しています。\n今回はこのSNSアプリの認証ページを作成するにあたって非同期処理で詰まった部分を共有したいと思います。\n\n 使用技術\n\nReact\nNext.js\nTypescript\nTailwindCSS\nFirebase Authentication\nMaterial UI\nReact-redux-toolkit\n...etc\n\n\n 実際のコード（長いので一部抜粋）\n\n      \n...",
          "link": "https://zenn.dev/hirockysan/articles/c10deae91a0a18",
          "publishedOn": "2021-08-13T06:30:39.000Z",
          "wordCount": 317,
          "title": "Next.jsで非同期処理が走らなくて困った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rCAIRL7I--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B2%25E3%2582%258D%25E3%2581%25A3%25E3%2581%258D%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%258C%25E8%25B5%25B0%25E3%2582%2589%25E3%2581%25AA%25E3%2581%258F%25E3%2581%25A6%25E5%259B%25B0%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liZVZOYWZFUW1TcFIzZWhsWDdUVzZCV0ZsekJnTFpsRExFQ0NhUmc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nononono/articles/0255311126f88f",
          "author": "ノノ",
          "description": "どうもこんにちはノノです。\n今回は、僕がフロントエンドを独学する際に使用した教材を紹介していきたいと思います。\n最近のフロントエンドは技術の移り変わりが激しくて大変ですよね。\n特に初学者の方はどの教材を選べばいいか分からないですよね。\n（僕は分かりませんでした😇）\n少しでも参考になれば幸いです。\n前半に「使用した教材一覧」\n後半に「おすすめの教材」を紹介します。\n\nHTML,CSSの基礎知識はありました。\n\n\n 使用した教材一覧\n\n 本\n\nりあクト！ TypeScriptで始めるつらくないReact開発 第3.1版【Ⅰ. 言語・環境編】\nりあクト！ TypeScriptで始めるつらくない...",
          "link": "https://zenn.dev/nononono/articles/0255311126f88f",
          "publishedOn": "2021-08-12T07:26:17.000Z",
          "wordCount": 171,
          "title": "【2021年8月】フロントエンドの学習に使用した教材一覧（React, TypeScript, NEXT.js, Firebase）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--72Nu41ZM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%258E%25E3%2583%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%25902021%25E5%25B9%25B48%25E6%259C%2588%25E3%2580%2591%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%2595%2599%25E6%259D%2590%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2588React%252C%2520TypeScript%252C%2520NEXT.js%252C%2520Firebase%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjVlNzg1YzFjNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/meijin/articles/nextjs-linaria-cache-error",
          "author": "Meijin",
          "description": "Vercel上でNext.jsとlinariaを動かしているとき、ある時点を境に以下のようなエラーが表示されるようになってしまいました。\n\n      \n        \n        18:40:11.531  \tFailed to compile.\n18:40:11.531  \tModuleNotFoundError: Module not found: Error: Can't resolve '../.linaria-cache/pages/404.linaria.module.css' in '/vercel/path0/pages'\n18:40:11.532  \t> ...",
          "link": "https://zenn.dev/meijin/articles/nextjs-linaria-cache-error",
          "publishedOn": "2021-08-11T12:08:16.000Z",
          "wordCount": 90,
          "title": "Next.js × linariaでビルド時にキャッシュが見つからないエラーが出るときの対処法【暫定？】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8huWqDbb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Meijin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%2520%25C3%2597%2520linariaw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pPWmtyWk1nS3djRXl5a2w1X2lVTFZFVmtVVUpkNzkzcjlfejhERjRzPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/byanbyan/articles/0e7d4c1e0d9fa4",
          "author": "ゆゆゆ",
          "description": "Supabase（オープンソースのBaaS）のExample projectsのメモ\nこれは学習メモです！\n基本的にはREADME.mdを読めば良い。\n必要なコマンドなどまとめておきます。\nhttps://zenn.dev/uhyo/articles/technical-articles\n\n Exampleprojectsのソースコード\nhttps://github.com/supabase/supabase/tree/master/examples/nextjs-todo-list\n\n Supabase の JavaScript ⽤クライアントインストール\nhttps://supaba...",
          "link": "https://zenn.dev/byanbyan/articles/0e7d4c1e0d9fa4",
          "publishedOn": "2021-08-11T02:58:50.000Z",
          "wordCount": 672,
          "title": "Supabase × Next.js　TodoAPP　学習メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9bYVn8NS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2586%25E3%2582%2586%25E3%2582%2586%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Supabase%2520%25C3%2597%2520Next.js%25E3%2580%2580TodoAPP%25E3%2580%2580%25E5%25AD%25A6%25E7%25BF%2592%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fN2U3NDQzNzU4NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ojin/articles/cecb2ac822f134",
          "author": "ofa-chan",
          "description": "はじめに\n日々答えがないものをGitHubをあさりながらやっている系のエンジニアです。好きなものはひぐらしとTypeScriptです。\nアカウントは、 https://zenn.dev/ojin です。\n何かおかしい所などありましたら遠慮なくコメントしていただければ幸いです。\n\n 環境\n\nreact, react-dom v17.0.2\nnext v11.0.1\ntypescript v4.3.5\nsass v1.35.2\n\n\n この記事では、Componentを作る時に自分が意識していることを書いておこうと思います。\nこの記事では、Componentを自分が作る時に気をつけているこ...",
          "link": "https://zenn.dev/ojin/articles/cecb2ac822f134",
          "publishedOn": "2021-08-11T01:54:01.000Z",
          "wordCount": 238,
          "title": "Reactで最初に作るTypographyのComponentの作り方をちょっと丁寧に説明してみる。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2e-AkJcl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ofa-chan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%25E3%2581%25A7%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258BTypography%25E3%2581%25AEComponent%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2FkZDc5NWZiNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukishinonome/articles/0784517bff279b",
          "author": "東雲",
          "description": "はじめに\nオリジナルな要素があまり多くないので記事にするか迷ったのですが、next/imageをモックする方法について日本語で書いてあるものがほとんどなかったので記事にしました。Next.js関連は新しい技術なので、日本語のドキュメントも少ないですし、僕のような駆け出しエンジニアには日本語のドキュメントが少しでも多くあるととても助かるのでちょっとしたことでも書いていきたいですね。\n\n モックする方法を調べていて困ったこと\nnext/imageをJestでモックして使う方法は英語ドキュメントでちらほら見つかったのですが、それらをStorybookに対しても使うと、悲しいことにnext/...",
          "link": "https://zenn.dev/yukishinonome/articles/0784517bff279b",
          "publishedOn": "2021-08-10T09:55:14.000Z",
          "wordCount": 137,
          "title": "next/imageをJestとStorybookで使うためにモックする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yJ38iYnY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E6%259D%25B1%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:next%252Fimage%25E3%2582%2592Jest%25E3%2581%25A8Storybook%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%2583%25E3%2582%25AF%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmVmNGY0M2IwMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/komisan19/articles/26ed97dd1dd068",
          "author": "komisan19",
          "description": "皆さんはこのページを知っていますか？\nhttps://stopcovid19.metro.tokyo.lg.jp/\n\n      \n        \n        この度、東京都は、新型コロナウイルス感染症対策に関する様々な情報やデータをワンストップで閲覧できるサイトを開設しました。\n\n\n      \n      ＊prtimes参照\nこのような目的で作成されたようです。\nもちろん東京以外にもこのページから派生したものが多くあります。\nhttps://github.com/tokyo-metropolitan-gov/covid19/blob/development/FORKED_SI...",
          "link": "https://zenn.dev/komisan19/articles/26ed97dd1dd068",
          "publishedOn": "2021-08-09T15:59:46.000Z",
          "wordCount": 82,
          "title": "新型コロナウイルス感染症対策サイトのステータスを確認できるサイトを作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L0nEYNnc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:komisan19%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2596%25B0%25E5%259E%258B%25E3%2582%25B3%25E3%2583%25AD%25E3%2583%258A%25E3%2582%25A6%25E3%2582%25A4%25E3%2583%25AB%25E3%2582%25B9%25E6%2584%259F%25E6%259F%2593%25E7%2597%2587%25E5%25AF%25BE%25E7%25AD%2596%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25BC%25E3%2582%25BF%25E3%2582%25B9%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOGNjMGQ3ZmQwOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/terrierscript/articles/2021-08-09-nextjs-node-pureimage-js",
          "author": "terrierscript",
          "description": "nextjsで動的画像生成をしたくなり、node-canvasだとnode以外の依存関係がちょっと困るケースがあったので、PureJSで実行できるnode-pureimageでなんとかならないか色々やってみた\n\n 出来た結果\n\n      \n        \n        // /api/image/sample\n\nimport { NextApiHandler, NextApiResponse } from \"next\"\n\n// @ts-ignore\nimport { make, encodePNGToStream } from \"pureimage\"\n\nimport getStre...",
          "link": "https://zenn.dev/terrierscript/articles/2021-08-09-nextjs-node-pureimage-js",
          "publishedOn": "2021-08-09T14:13:27.000Z",
          "wordCount": 179,
          "title": "nextjsでnode-pureimageを使ったJSオンリーな動的画像生成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kZYOPiIT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:terrierscript%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:nextjs%25E3%2581%25A7node-pureimage%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259FJS%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25AA%25E3%2583%25BC%25E3%2581%25AA%25E5%258B%2595%25E7%259A%2584%25E7%2594%25BB%25E5%2583%258F%25E7%2594%259F%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTQwYmE4ZjQ3ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hideokamoto/articles/5a4b6992a1c8e6",
          "author": "hidetaka okamoto",
          "description": "できれば公式のExampleに持っていきたいので、PRたててリクエスト中。\nhttps://github.com/serverless-nextjs/serverless-next.js/pull/1522\nマージされたらそっちベースにちゃんとした記事書き直す予定。\n\n Serverless Next.jsでAWS CDK\nServerless Next.jsといえば、Serverless Componentを使う印象でした。が、最近CDK版も出たみたいです。\n\n 定義イメージ\n\n      \n        \n        import * as cdk from '@aws-cdk...",
          "link": "https://zenn.dev/hideokamoto/articles/5a4b6992a1c8e6",
          "publishedOn": "2021-08-09T13:23:35.000Z",
          "wordCount": 117,
          "title": "Serverless Next.jsをAWS CDKで立ち上げるサンプル",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ev1CdzSY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hidetaka%2520okamoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Serverless%2520Next.js%25E3%2582%2592AWS%2520CDK%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pBNDNNV05WYlQ5Y2ZKeDJTRElqbDMxZGZGV1RDa252NnI5dm11ZWpvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mongolyy/articles/b701d6c6184bb5",
          "author": "mongolyy",
          "description": "はじめに\n最近、Next.js + Auth0の組み合わせでアプリケーションを開発することが多いのですが、\n要認証の非公開ページもあるため、withPageAuthRequiredやwithAPIAuthRequiredを使用しています。\nその場合のテストの実装について、公式ではSDKのインスタンスを作成する方法が紹介されているわけですが、単にwithPageAuthRequired withAPIAuthRequiredの中の挙動を確認したいだけならwithPageAuthRequired withAPIAuthRequiredをspy化して、テストを実装すればいいのでは？と、考え...",
          "link": "https://zenn.dev/mongolyy/articles/b701d6c6184bb5",
          "publishedOn": "2021-08-09T04:04:14.000Z",
          "wordCount": 524,
          "title": "nextjs-auth0を使用時の、privateなページに対する簡単なテストの実装方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--jRSc2TwS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mongolyy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:nextjs-auth0%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E6%2599%2582%25E3%2581%25AE%25E3%2580%2581private%25E3%2581%25AA%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%25E5%25AF%25BE%25E3%2581%2599%25E3%2582%258B%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AA%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hveUpld0pWaGhieEtrZUMtWWFxN1d6X1BQdHBkTWxnSEkwZlBXPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gosutesu/books/a8b6320a9247a3",
          "author": "渡部良輝",
          "description": "自己学習用のNext.jsに関連するものをまとめるもの",
          "link": "https://zenn.dev/gosutesu/books/a8b6320a9247a3",
          "publishedOn": "2021-08-09T00:36:55.000Z",
          "wordCount": 3,
          "title": "Next.js関連",
          "enclosure": {
            "url": "https://zenn.dev/images/logo-only-dark.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tomi/articles/2021-08-08-next-issue",
          "author": "Tomiaki Matsumura",
          "description": "next.jsで新しいプロジェクトを作っている際にハマってしまった問題に関しての解決策です。\nこの問題に関しては、バージョンに起因すると思われますので、2021年8月時点での話であり、新しいバージョンが出ている場合は、解決しているかもしれません。\nそれまでの参考までにご活用ください。\n\n 問題\nnext.jsをreact-markdownを使ってマークダウンからブログ記事を書くような利用は多いということは、関連記事の多さからも異論はないと思います。\n私も１年前からこの組み合わせでブログ書いたりしています。最近マークダウンを使用する別のサイトのプロジェクトを作成し、react-markdo...",
          "link": "https://zenn.dev/tomi/articles/2021-08-08-next-issue",
          "publishedOn": "2021-08-08T13:49:23.000Z",
          "wordCount": 192,
          "title": "react-markdownで詰まったのでメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_P0MedXt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tomiaki%2520Matsumura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:react-markdown%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kxWmcwYWVJT0piX0hZNV9ISnJYMlpuU2FEY3BfaXBZM3BhMlZ3blE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/a_da_chi/articles/2128cecc29635a",
          "author": "adachi",
          "description": "はじめに\n※この記事は下記記事の延長です。下記記事を読まなくても問題ないように書いていますが、ご興味ありましたらご一読ください。\nhttps://zenn.dev/a_da_chi/articles/181ea4ccc39580#スナップショットテスト導入\n今回はNext.js+Chakra UIプロジェクトにStorybookを導入する手順を書いていきたい思います。\n\n 導入手順\n\n\nnpx sb initを実行\n設定ファイルを修正\nStoryを追加\n\n\n npx sb initを実行\n\n      \n        \n        npx sb init\n\n\n      \n  ...",
          "link": "https://zenn.dev/a_da_chi/articles/2128cecc29635a",
          "publishedOn": "2021-08-08T08:28:51.000Z",
          "wordCount": 298,
          "title": "Next.js+Chakra UIプロジェクトにStorybookを導入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--45_Is1GM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:adachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%252BChakra%2520UI%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABStorybook%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hvU1F2dTVtTFZ2WUdOVUt1bE5kVE9Gd2Q5Z3VlTFhCaWJ3LTRHS2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ptpadan/articles/serverless-next-isr",
          "author": "yasushi.kobayashi",
          "description": "メディアを Next.js/Headless CMS でメディアを開発を行っているので、の技術選定やハマりどころをまとめていきます。\n使用している技術の概要は下記です。\n\nNext.js は Serverless Framework を使用して AWS 上にデプロイ\nHeadless CMS は、Prismic を使用\n\n\n Serverless frameworkの選定理由\nAWS からインフラを分離したくない事情があったため、Vercel や Firebase Hosting 等は選択肢外でした。\n別のプロダクトでは ecs を使用しているのですが、メディアはメインプロダクトではない...",
          "link": "https://zenn.dev/ptpadan/articles/serverless-next-isr",
          "publishedOn": "2021-08-08T05:17:42.000Z",
          "wordCount": 439,
          "title": "Next.js/Serverless Frameworkでisr対応サイトを立ち上げる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3bTzd2wg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yasushi.kobayashi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252FServerless%2520Framework%25E3%2581%25A7isr%25E5%25AF%25BE%25E5%25BF%259C%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E7%25AB%258B%25E3%2581%25A1%25E4%25B8%258A%25E3%2581%2592%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2paSXpCVVZFUTgtTXY4VG4xMzBoYXR4RmN6TXYzV1A3dWhzRFlka19RPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/021c1b0fc2ec35",
          "author": "dl10yr",
          "description": "最重要なこと\nGA4ではなくユニバーサルアナリティクスのプロパティ（UA-始まりのID）を使うこと！ (2021年8月4日現在、私調べ）\n\n      \n        \n        [AmpAnalytics <unknown id>] No triggers were found in the config. No analytics data will be sent.\n\n\n      \n      GA4のIDでは動きませんでした...\nhttps://github.com/ampproject/amphtml/issues/30903\n\n 実装方針\nAMP対...",
          "link": "https://zenn.dev/dl10yr/articles/021c1b0fc2ec35",
          "publishedOn": "2021-08-05T12:11:57.000Z",
          "wordCount": 349,
          "title": "Nextjs AMPモードで Google Analyticsを動かしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--icwAepSq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nextjs%2520AMP%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%2520Google%2520Analytics%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuyakato/articles/d35b185d36a33b",
          "author": "Yuya Kato",
          "description": "目次\n\nInsightFaceとFastAPIで顔検出サーバを作ってみた\nInsightFaceの顔検出結果をNext.jsで可視化してみた\nInsightFaceで顔認証（特徴量抽出、比較）してみた（本記事）\n\n\n 初めに\n前回、前々回と、InsightFaceを使った顔検出の例を紹介しました。\n今回は、InsightFaceを使って顔認証（Face Recognition）を試してみたいと思います。\n\n 顔認証とは\n顔認証とは:\n\n提示された画像に含まれている顔が、事前に登録されているどの顔に一番近いか？\n2つの顔画像、顔Aと顔Bはどれだけ類似しているか？\n\nみたいなことを調べる...",
          "link": "https://zenn.dev/yuyakato/articles/d35b185d36a33b",
          "publishedOn": "2021-08-03T13:48:56.000Z",
          "wordCount": 185,
          "title": "InsightFaceで顔認証（特徴量抽出、比較）してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRi6u_dX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:InsightFace%25E3%2581%25A7%25E9%25A1%2594%25E8%25AA%258D%25E8%25A8%25BC%25EF%25BC%2588%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E6%258A%25BD%25E5%2587%25BA%25E3%2580%2581%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSUhmX2JGaE1tcVp0aDNYQUI2NFY0aGRnNlJWbE5CbjVhZmQzdXc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/laiso/articles/8c619c38bd7b7b",
          "author": "laiso",
          "description": "AWS Amplify ConsoleでNext.jsのプロジェクトをデプロイすると Serverless Next.js Component のインテグレーションによってAWS Lambda リソースが最大4つ作成される(ソースコードはエクスポートできる)\n\nDefault Lambda@Edge for Next CloudFront distribution\nAPI Lambda@Edge for Next CloudFront distribution\nImage Lambda@Edge for Next CloudFront distribution\nNext.js Regen...",
          "link": "https://zenn.dev/laiso/articles/8c619c38bd7b7b",
          "publishedOn": "2021-08-02T15:13:59.000Z",
          "wordCount": 130,
          "title": "Serverless Next.js Component のISR実装を読み解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oGF5KW1F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:laiso%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Serverless%2520Next.js%2520Component%2520%25E3%2581%25AEISR%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDhlOThiNTFhNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "author": "KenT",
          "description": "今回作ったもの\n作品はこちら\nコードはこちら\n\n 作った経緯\nContextAPIを使ってみたかった為\n\n コードの解説\n\n コンポーネントをAppContextに接続する\n\n      \n        \n        import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n\tconst { budget } = useContext(AppContext);\n\treturn (\n\t\t<d...",
          "link": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "publishedOn": "2021-08-02T08:31:47.000Z",
          "wordCount": 206,
          "title": "Next.js+Typescript+ContextAPIで予算トラッカーを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q6GyqDpi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252BTypescript%252BContextAPI%25E3%2581%25A7%25E4%25BA%2588%25E7%25AE%2597%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjg4ZDAyMTI0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Nuxt.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nuxtjs/feed",
      "siteUrl": "https://zenn.dev/topics/nuxtjs",
      "articles": [
        {
          "id": "https://zenn.dev/sengosha/articles/95f3ec0d62fba8",
          "author": "ユウ",
          "description": "Nuxt2.15.x以降のコンポーネントimportに関して\n\n\n@nuxt/components はバージョン 2 が使えるようになります\nコンポーネント名にディレクトリ名を付与したタグを使うことができるようになり、コンポーネントの import や宣言などの記述を省略することができます (記述の省略は 2.14 でも可能でしたが 2.15 で先の記述の使用が可能となりました)\n\n\n ディレクト名付きのコンポーネント名\n例えば下記のフォルダー構造\n\n      \n        \n        | components/\n---| my/\n------| form/\n------...",
          "link": "https://zenn.dev/sengosha/articles/95f3ec0d62fba8",
          "publishedOn": "2021-08-24T08:37:01.000Z",
          "wordCount": 223,
          "title": "アトミックデザインにおけるコンポーネントのAuto importの問題について色々と調査した件",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LfcdNoL3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A6%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2582%25A2%25E3%2583%2588%25E3%2583%259F%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AEAuto%2520import%25E3%2581%25AE%25E5%2595%258F%25E9%25A1%258C%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E8%2589%25B2%25E3%2580%2585%25E3%2581%25A8%25E8%25AA%25BF%25E6%259F%25BB%25E3%2581%2597%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sengosha/articles/54ec4c57194626",
          "author": "ユウ",
          "description": "サードパーティ製Javascriptを読み込ませる方法\nNuxtにサードパーティ製Javascript(以下外部ライブラリと称します）を読み込む方法は三つあります、headメソッドやnuxt.config.jsでの設定とpluginで読み込ませる方法です。\n今回は開発中に外部ライブラリの導入にあたってheadメソッドとnuxt.config.jsで設定する方法を試していくつかの問題が起きてしまいまして、最後はpluginで読み込ませる方法を選ぶ経緯をまとめました。\n\n 方法１ headメソッド\n特定なページに外部ライブラリを読み込ませるには一番手軽な方法です。\nこんな感じで書けば外部...",
          "link": "https://zenn.dev/sengosha/articles/54ec4c57194626",
          "publishedOn": "2021-08-21T14:06:58.000Z",
          "wordCount": 263,
          "title": "Nuxtのサードパーティ製Javascriptの読み込む方法を色々試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wMLNG7kr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A6%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nuxt%25E3%2581%25AE%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2591%25E3%2583%25BC%25E3%2583%2586%25E3%2582%25A3%25E8%25A3%25BDJavascript%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%25E3%2582%2592%25E8%2589%25B2%25E3%2580%2585%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryuji_cre8ive/articles/2c998bc7010975",
          "author": "ryuji_cre8ive",
          "description": "結論\nwatchを使用してstoreのloginを監視して変更があった段階でリンクを書き換える。\n\n 具体的に\n\n      \n        \n        computed: {\n    islogin(){\n      return this.$store.state.login.islogin\n    }\n  },\n  watch: {\n    islogin() {\n      this.$nextTick(() => {\n        this.items[0].link = `/${this.islogin.id}/top`;\n        this.ite...",
          "link": "https://zenn.dev/ryuji_cre8ive/articles/2c998bc7010975",
          "publishedOn": "2021-08-14T06:45:35.000Z",
          "wordCount": 46,
          "title": "nuxtでログイン処理後の動的リンク作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AHWh0rTR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuji_cre8ive%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:nuxt%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%25E5%25BE%258C%25E3%2581%25AE%25E5%258B%2595%25E7%259A%2584%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hKUHROdS15cGNUUERTNUdxMnB0M09YeXpDbDZmdVlBMmF4bjFoTnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/umatoma/articles/a819fd622d4743",
          "author": "umatoma",
          "description": "flutter-study.dev\n「Flutterで始めるアプリ開発」というWebサイトを公開している。\nもともとはGatsbyでSSGしていたが、Vueを使う必要が出てきたので、勉強がてらNuxtJSへと移行してみた。\nhttps://www.flutter-study.dev/\n\n Markdownで記事を書く\nGatsbyの時は@rocketseat/gatsby-theme-docsを使っていて、Markdownで各記事を書いていた。\nhttps://github.com/Rocketseat/gatsby-themes/tree/main/@rocketseat/gats...",
          "link": "https://zenn.dev/umatoma/articles/a819fd622d4743",
          "publishedOn": "2021-08-11T15:08:33.000Z",
          "wordCount": 206,
          "title": "GatsbyからNuxtJSに移行してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zb42cUsd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:umatoma%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Gatsby%25E3%2581%258B%25E3%2582%2589NuxtJS%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNVVdLY3dwaGFRMV91eUlQWWEwcy1udE1qeFVYQTNZYWFlLW5XPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tanoken729/articles/6a96bff90b8e12",
          "author": "tanoken",
          "description": "成功\nstore/musicFiles.js\n\n      \n        \n        export const state = () => ({\n  musicFileData: [],\n})\n\nexport const getters = {\n  musicFileData: state => state.musicFileData\n}\n\nexport const mutations = {\n  setMusicFileDataMutations(state, musicFileData) {\n    // console.log(musicFileData)\n ...",
          "link": "https://zenn.dev/tanoken729/articles/6a96bff90b8e12",
          "publishedOn": "2021-08-03T15:32:50.000Z",
          "wordCount": 155,
          "title": "wip 【音楽ファイル詳細表示機能】storeをモジュール化して、getterを参照したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qVmDL7ti--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tanoken%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:wip%2520%25E3%2580%2590%25E9%259F%25B3%25E6%25A5%25BD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A9%25B3%25E7%25B4%25B0%25E8%25A1%25A8%25E7%25A4%25BA%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2591store%25E3%2582%2592%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581getter%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dzSWFrN3BqZU13dW9saWduTXdqRHpoeFI5NTQyb2Fvb0w5cVJ1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 391,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「TypeScript」のフィード",
      "feedUrl": "https://zenn.dev/topics/typescript/feed",
      "siteUrl": "https://zenn.dev/topics/typescript",
      "articles": [
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/82871052dad5ff",
          "author": "ryo_kawamata",
          "description": "最近公開した Chrome 拡張の紹介と技術的なポイントの解説です。\n\n ✨ 何を作った？\n実際の挙手と Google Meet 上の挙手ボタンが連動する Chrome 拡張を作りました。\nhttps://twitter.com/KawamataRyo/status/1430730469260234756\nhttps://chrome.google.com/webstore/detail/sync-raise-hand/pimhkdcdgmedijjnjeagagnnddgbcnkm\n大人数のミーティングで挙手ボタンを使う機会があるのですが、ボタンを押すという動作が億劫 & 挙手...",
          "link": "https://zenn.dev/ryo_kawamata/articles/82871052dad5ff",
          "publishedOn": "2021-08-30T03:16:03.000Z",
          "wordCount": 407,
          "title": "実際の挙手と Google Meet 上の挙手ボタンが連動する Chrome 拡張を作ったのでコード全公開&解説",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iM60Uquc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E5%25AE%259F%25E9%259A%259B%25E3%2581%25AE%25E6%258C%2599%25E6%2589%258B%25E3%2581%25A8%2520Google%2520Meet%2520%25E4%25B8%258A%25E3%2581%25AE%25E6%258C%2599%25E6%2589%258B%25E3%2583%259C%25E3%2582%25BF%25E3%2583%25B3%25E3%2581%258C%25E9%2580%25A3%25E5%258B%2595%25E3%2581%2599%25E3%2582%258B%2520Chrome%2520%25E6%258B%25A1%25E5%25BC%25B5%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E5%2585%25A8%25E5%2585%25AC%25E9%2596%258B%2526%25E8%25A7%25A3%25E8%25AA%25AC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eagle/articles/ts-maybe-introduction",
          "author": "eagle",
          "description": "本記事はこの記事の続きです。\nhttps://zenn.dev/eagle/articles/ts-coproduct-introduction\n実用性の観点から割愛したMaybeを改めて紹介します。\n代数的データ型をコードで表現するために次のコード群を使用します。\n\n      \n        \n        type Coproduct<T> = {\n  [K in keyof T]: Record<\"type\", K> & T[K];\n}[keyof T];\n\ntype Individual<TCoproduct extends Recor...",
          "link": "https://zenn.dev/eagle/articles/ts-maybe-introduction",
          "publishedOn": "2021-08-29T10:42:49.000Z",
          "wordCount": 1906,
          "title": "TypeScriptで学ぶ古典的ADT - Maybe",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mfDKKF2c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eagle%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E5%258F%25A4%25E5%2585%25B8%25E7%259A%2584ADT%2520-%2520Maybe%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTFmZjAxNGQyZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/otanu/articles/f0a0b2bd0d9c44",
          "author": "otanu",
          "description": "先日、Next.js 11.1がリリースされました。\nhttps://nextjs.org/blog/next-11-1\nStorybookの最新版インストールを試してみたのですが、中々うまくいかなかったりしたので、環境の整理ついでにボイラープレートとしてまとめてみました。\n構成は以下のようになっています。\n\nyarn\nNext.js v11.1.0\nESLint v7.32.0(Next.js v11.1から含まれるように)\nTypeScript v4.4.2\nTailwind v2.2.8\nStorybook v6.3\nPrettier v2.3.2\nJest v27.1.0\n\nコー...",
          "link": "https://zenn.dev/otanu/articles/f0a0b2bd0d9c44",
          "publishedOn": "2021-08-29T10:19:30.000Z",
          "wordCount": 540,
          "title": "Next.js(v11.1)+TypeScript+Tailwind+SASS+Storybook+Jestのボイラープレート",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--yxWEstlL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:otanu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2528v11.1%2529%252BTypeScript%252BTailwind%252BSASS%252BStorybook%252BJest%25E3%2581%25AE%25E3%2583%259C%25E3%2582%25A4%25E3%2583%25A9%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzM0ZjNjYTg5OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shimapon3/articles/13e3d4b147742c",
          "author": "shimapon",
          "description": "はじめに\n初めて記事のようなものを書きます．よろしくお願いします．\n今回は2020年のインターンシップ選考で私が開発した，都道府県ごとの人口を表示するアプリについて開発した手順を書いていきたいと思います．\n至らない点があれば、遠慮なくご指摘いただければとも思います。\n\n Demo\n県名にチェックを入れると，その県の人口推移が表示されます．\n複数選択すると、まとめて表示されます。\n\nhttps://react-highcharts-resas.web.app/\n\n 環境\n\nmacOS Catalina (v10.15.6)\nNode.js (v14.8.0)\n\n\n 使用技術\n\nReac...",
          "link": "https://zenn.dev/shimapon3/articles/13e3d4b147742c",
          "publishedOn": "2021-08-28T23:43:44.000Z",
          "wordCount": 684,
          "title": "React + Highcharts で都道府県の人口をグラフで表示するアプリ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fwDS_XM2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shimapon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%2520%252B%2520Highcharts%2520%25E3%2581%25A7%25E9%2583%25BD%25E9%2581%2593%25E5%25BA%259C%25E7%259C%258C%25E3%2581%25AE%25E4%25BA%25BA%25E5%258F%25A3%25E3%2582%2592%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%2595%25E3%2581%25A7%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/arark/articles/0ee7d75dd200db",
          "author": "arark",
          "description": "firebaseってtypescriptと相性わるいな～～～～～～～～～とまじで思ってたので超型安全firestore作ってみたらできました。パスまで型安全でやってくれます。これです。\nhttps://github.com/Hagihara-A/fire-fuse\nnpm i firefuse\nで使えます\nfirestore-v9を想定しています。\n\n 特徴/出来ること\n\nただのユーティリティパッケージなので、一切の独自実装がない。ただし型安全。\nパスの型付け\nパスを解析してReferenceを型付けできる\n\n\n なにができるか\n\n      \n        \n        // /...",
          "link": "https://zenn.dev/arark/articles/0ee7d75dd200db",
          "publishedOn": "2021-08-28T16:04:02.000Z",
          "wordCount": 447,
          "title": "超型安全firestoreができた(更新)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4-HrrYUM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:arark%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25B6%2585%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8firestore%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%2528%25E6%259B%25B4%25E6%2596%25B0%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNWQ5ODQ2MjJmOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/rince/articles/4e35e52e0e158d",
          "author": "rince",
          "description": "バリデーション用ライブラリ Yup で、配列内のオブジェクトのプロパティが重複していないことを検証する方法。\nREADMEには重複チェックについて書かれていなかったのでまとめておく。\n例えば、url と caption を持つオブジェクトの配列で url がユニークであることを検証する場合、こんな感じに書ける。\n\n      \n        \n        import * as yup from \"yup\";\n\nconst objectSchema = yup.object().shape({\n  url: yup.string().url(),\n  caption: yup.st...",
          "link": "https://zenn.dev/rince/articles/4e35e52e0e158d",
          "publishedOn": "2021-08-28T01:49:17.000Z",
          "wordCount": 132,
          "title": "Yupで配列内のオブジェクトのプロパティがユニークであることを検証する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mft3pgOn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:rince%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Yup%25E3%2581%25A7%25E9%2585%258D%25E5%2588%2597%25E5%2586%2585%25E3%2581%25AE%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2581%258C%25E3%2583%25A6%25E3%2583%258B%25E3%2583%25BC%25E3%2582%25AF%25E3%2581%25A7%25E3%2581%2582%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjk1Y2E5ZjgzNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/arark/articles/60927323db8697",
          "author": "arark",
          "description": "先日ついにfirebase v9が リリースされました\n知っている限り、v9ではモジュール式(ESM?)になっただけで、バンドルサイズの最適化以外の機能はないのですが、updateに関しては型定義での更新があったので紹介します。\n\n v9の使い方\n少しv9の使い方を紹介します。v8までのようにクラスで実装するとtree shakeしづらいので、全て関数になりました。\n\n      \n        \n        import { initializeApp } from \"firebase/app\";\nconst app = initializeApp({ projectId: \"....",
          "link": "https://zenn.dev/arark/articles/60927323db8697",
          "publishedOn": "2021-08-27T16:05:00.000Z",
          "wordCount": 216,
          "title": "firebase v9でupdateが(少し)型安全になりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--7i_j1ByG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:arark%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:firebase%2520v9%25E3%2581%25A7update%25E3%2581%258C%2528%25E5%25B0%2591%25E3%2581%2597%2529%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNWQ5ODQ2MjJmOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kijikunnn/articles/0d58e86c3ce0c9",
          "author": "きじくん",
          "description": "はじめに\n普段はPython、React、Next.js等を中心に勉強していますが、個人的に今最も注目しているフレームワークであるBlitz.jsの勉強も最近始めました。ここでは私がBlitz.jsを学んでいく過程で、自身の学習記録兼日本語ドキュメント感覚で今後書いていこうと思っています。\n\n 1. blitz generate\n\n      \n        \n        blitz generate [type] [model]\n\n\n      \n      もしくは\n\n      \n        \n        blitz g [type] [model]\n\n\n    ...",
          "link": "https://zenn.dev/kijikunnn/articles/0d58e86c3ce0c9",
          "publishedOn": "2021-08-27T14:59:06.000Z",
          "wordCount": 323,
          "title": "Blitz.js 学習記録 #1 - blitz generate",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--WW2Gwpwr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2581%2598%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blitz.js%2520%25E5%25AD%25A6%25E7%25BF%2592%25E8%25A8%2598%25E9%258C%25B2%2520%25231%2520-%2520blitz%2520generate%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjliOTM3ZWExNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/5b031d682d3fe2",
          "author": "空雲",
          "description": "Web-WorkerとWeb-Assemblyの連携に関して\nWeb-Workerを使えば、並列化による恩恵で総合的な動作速度の向上が見込めます\n対してWeb-Assemblyを使えば、演算速度のような直列的な向上が見込めます\nならば「二つを合わせれば、さらなるパフォーマンスアップが見込める」というのは誰でも思うことでしょう\nしかしこの二つの技術、いざ使おうとするとそれなりに面倒で敷居が高く感じます\nその辺りを簡単に実現するための方法を紹介します\n\n サンプル置き場\nhttps://github.com/SoraKumo001/next-worker3\nhttps://next-wo...",
          "link": "https://zenn.dev/sora_kumo/articles/5b031d682d3fe2",
          "publishedOn": "2021-08-27T12:32:02.000Z",
          "wordCount": 391,
          "title": "Next.jsでWeb-WorkerからWeb-Assembly呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---mG3_wf---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7Web-Worker%25E3%2581%258B%25E3%2582%2589Web-Assembly%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kijikunnn/articles/0c06902611964d",
          "author": "きじくん",
          "description": "はじめに\n初投稿です。勉強したことをアウトプットして残していきたいと思い、投稿を始めました。\n普段は学生でPythonによる機械学習で研究をしている一方で、プライベートではReactやNext.jsを勉強しています。\n今回は、ReactのフルスタックフレームワークであるBlitz.jsが先日、v1.0に向けた大きな修正が終了したと発信していたことを機に、久しぶりに触れてみました。\n\n過去にチュートリアルだけやったことはあったのですが、その時はデータベースがローカル環境のSQLiteもしくはPostgreSQLの2択だったため、「開発時だったら良いかもしれないけれど、実際にデプロイした...",
          "link": "https://zenn.dev/kijikunnn/articles/0c06902611964d",
          "publishedOn": "2021-08-26T15:48:36.000Z",
          "wordCount": 185,
          "title": "Blitz.jsでSupabaseのデータベースに接続する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5_4Z5kyO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258D%25E3%2581%2598%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blitz.js%25E3%2581%25A7Supabase%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%25AB%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjliOTM3ZWExNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sqer/articles/d9d51bbd4b410418cde3",
          "author": "sqer",
          "description": "目次\n\n目次\n\nはじめに\n\nany使っていませんか？\n対象読者\n今回の目標\n\n\nElementについて\nEventについて\n\n実践！TypeScriptで型付けする\n\ntyped-query-selectorを使う\ntarget.valueに型をつける\n\n\nまとめ\nリンク\n\n\n はじめに\n\n any使っていませんか？\n\nidが\"xxx\"のinput要素に入力された値を取得してみてください。\n\nこの要件を w3schools のサンプルコードをコピペして実装しようとすると、\n\n      \n        \n        document.getElementById(\"xxx\")....",
          "link": "https://zenn.dev/sqer/articles/d9d51bbd4b410418cde3",
          "publishedOn": "2021-08-26T12:03:15.000Z",
          "wordCount": 232,
          "title": "ElementやEventに型をつけよう",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XBmn78hR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sqer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Element%25E3%2582%2584Event%25E3%2581%25AB%25E5%259E%258B%25E3%2582%2592%25E3%2581%25A4%25E3%2581%2591%25E3%2582%2588%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWZmNzNmM2U4NS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uttk/articles/f48fc75120f018",
          "author": "uttk",
          "description": "この記事について\nFirebase AuthenticationとNext.jsのgetServerSideProps()を使って、Cookieを使ったセッション管理方法を、この場を借りて共有したいと思います💪\nまた、この記事の内容は基本的に以下の記事の内容を踏襲したものとなっています。そのため、内容やソースコードに引用などが含まれますので、予めご了承ください🙇‍♂️\nhttps://firebase.google.com/docs/auth/admin/manage-cookies?hl=ja\nそれでは行きましょう🛴\n\n 環境構築\n\nこの記事ではFirebaseの環境構築については...",
          "link": "https://zenn.dev/uttk/articles/f48fc75120f018",
          "publishedOn": "2021-08-26T08:41:39.000Z",
          "wordCount": 1088,
          "title": "Next.jsとFirebaseでCookieを使った認証処理を実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1XXPVF4i--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uttk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A8Firebase%25E3%2581%25A7Cookie%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E8%25AA%258D%25E8%25A8%25BC%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzdkM2Q1NTAxNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nitaking/articles/16a90535f3d535",
          "author": "nitaking",
          "description": "Answer\n\n      \n        \n        var str = 'apple_mango_banana';\nvar arr = ['apple','banana'];\n\nvar isEvery = arr.every(item => str.includes(item));\n\nconsole.log(isEvery);\n\n\n      \n      \n Refs\nhttps://stackoverflow.com/a/40649736/8023331",
          "link": "https://zenn.dev/nitaking/articles/16a90535f3d535",
          "publishedOn": "2021-08-26T07:55:52.000Z",
          "wordCount": 23,
          "title": "１つの文字列に、配列の文字列が全て含まれているか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Zb2vPNrl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nitaking%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25EF%25BC%2591%25E3%2581%25A4%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%25AB%25E3%2580%2581%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AE%25E6%2596%2587%25E5%25AD%2597%25E5%2588%2597%25E3%2581%258C%25E5%2585%25A8%25E3%2581%25A6%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDTWQ2V3JtNEFxOTluQ2xBTXQ1NHVJZTBPdnVYX05Fd1BZNElLUnc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ichigo_dev/articles/540ebe464a6463674ea0",
          "author": "ichigo",
          "description": "Node.jsにおけるモジュールシステム\nモジュールシステムとは外部ファイル（モジュール）を読み込むときの仕様である。\nNode.jsで使えるモジュールシステムとして、CJSとESMがある、現在はCJSがデフォルトになっている。\n拡張子が.cjsのものはCJS。\n拡張子が.mjsのものはECM。\n拡張子が.jsのファイルは、package.jsonのtypeフィールドの値によって判断される。\n具体的にはtypeがmoduleであれば.jsファイルがECMとして扱われる。commonjsにするとCJSとして扱われる。記述しない場合もCJSとして扱われる。\n\n TypeScript\nts...",
          "link": "https://zenn.dev/ichigo_dev/articles/540ebe464a6463674ea0",
          "publishedOn": "2021-08-26T02:23:05.000Z",
          "wordCount": 104,
          "title": "Node.jsにおけるモジュールシステム",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PHEr3aVJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ichigo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Node.js%25E3%2581%25AB%25E3%2581%258A%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dJbjVqVFhfRGlKc2tiUjVzUkxXVnNUby03dFRWTkpCcUFvMWlLPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mo_ri_regen/articles/nodejs-with-typescript",
          "author": "モーリー",
          "description": "TypeScript で書かれている場合、一度 JS に変換(トランスパイル)してから 実行する必要があります。\n\n 実行方法\n\n\nTypeScript のインストール\n\n      \n        \n        # npm\nnpm i -D typescript\n\n# yarn\nyarn add typescript --dev\n\n\n      \n      \n\nコンパイル\n下記コマンドを入力することで(エラーがなければ) hoge.js が生成されます。\n\n      \n        \n        tsc hoge.ts\n\n\n      \n      \n\n実行\nhoge....",
          "link": "https://zenn.dev/mo_ri_regen/articles/nodejs-with-typescript",
          "publishedOn": "2021-08-25T23:45:47.000Z",
          "wordCount": 60,
          "title": "TypeScriptで書かれたJSをNode.js上で実行する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--D0B0UNIM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%258B%25E3%2582%258C%25E3%2581%259FJS%25E3%2582%2592Node.js%25E4%25B8%258A%25E3%2581%25A7%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTE4MDU3NTdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/okoha/articles/1f909a3af0ee0244fe40",
          "author": "夕暮おこは",
          "description": "はじめに\ncomposition apiの登場でVueもようやくテストしやすい感じになってきました。\nとはいえ実際AJAXが絡んだコンポーネントのテストをやろうとするとあれをモックしてこれもモックしてとなんだかんだ大量のモッキングが必要になって色々めんどくさい感じになりがちですし、ほとんどモックされてて実際のところどこがテストできてるのかわけがわからない感じになりがちです。\n前回の記事ではOASを利用することでスタブサーバーが用意できることを紹介しました。\nこの記事ではそのスタブサーバーを利用して、フロントで再現性のあるAJAXテストを簡単に行える方法がないか模索してみます。\nスタブ...",
          "link": "https://zenn.dev/okoha/articles/1f909a3af0ee0244fe40",
          "publishedOn": "2021-08-23T17:12:50.000Z",
          "wordCount": 777,
          "title": "OAS使ってなるべく楽にNuxtのテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BrPMlQCA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25A4%2595%25E6%259A%25AE%25E3%2581%258A%25E3%2581%2593%25E3%2581%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:OAS%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25AA%25E3%2582%258B%25E3%2581%25B9%25E3%2581%258F%25E6%25A5%25BD%25E3%2581%25ABNuxt%25E3%2581%25AE%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTE0MjdiMjZmMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/alea12/articles/15d73282c3aacc",
          "author": "alea12",
          "description": "TLDR\n\nPrisma が検討できる場合: Prisma の findUnique を使う\nそれ以外の場合: DataLoader を実装する。ライブラリを使えばそんなに大変ではない\n\nJOIN での解決は GraphQL の道を踏み外している(ように感じる)\n\n\n GraphQL における N+1 問題\nGraphQL で 1:N のデータ構造をクエリすると、すぐに N+1 問題に行き当たります。User と Post が 1:N の関係となる、以下の例を見てみましょう。\n\n      \n        \n        type User {\n  id: Int!\n  name...",
          "link": "https://zenn.dev/alea12/articles/15d73282c3aacc",
          "publishedOn": "2021-08-23T14:37:01.000Z",
          "wordCount": 889,
          "title": "GraphQL で N+1 問題を解決する 4 つのアプローチ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VdTPotwC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:alea12%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GraphQL%2520%25E3%2581%25A7%2520N%252B1%2520%25E5%2595%258F%25E9%25A1%258C%25E3%2582%2592%25E8%25A7%25A3%25E6%25B1%25BA%25E3%2581%2599%25E3%2582%258B%25204%2520%25E3%2581%25A4%25E3%2581%25AE%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p0Vk5jcWlPWjVXZTFMTlFkLXpxWTc5NVIxMUJuTmZNT1p5NXVhPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ezryow/articles/1639171ddb994a",
          "author": "EZ.Ryow",
          "description": "今回、リリースしたアプリケーション\n\nhttps://www.autof2f.io/\n\n皆さん、SNSでこんな経験ありませんか？\n「この人の投稿面白いな、でも勝手にフォローしても失礼じゃないかな？？？」\n今回リリースしたアプリケーションは、**「無言でフォローしまっていいのか問題」**をプログラムで自動的に解決しようという目的をもとに開発されました。\n一言でどのように解決するか説明すると、\n匿名掲示板上のユーザAの書き込みを『いいね』し、その『いいね』が一定の値を超えると自動的にユーザAがフォローに追加されるというものです。\n\n AutoF2Fの名前の由来\nこのアプリケーションを開発する...",
          "link": "https://zenn.dev/ezryow/articles/1639171ddb994a",
          "publishedOn": "2021-08-23T07:27:26.000Z",
          "wordCount": 70,
          "title": "【個人開発】大学生が『友達が半自動的に追加される新感覚SNS モドキ`AutoF2F`』 をリリースしました 🎉🎉🎉",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--18iGO1sW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:EZ.Ryow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2580%2591%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%258C%25E3%2580%258E%25E5%258F%258B%25E9%2581%2594%25E3%2581%258C%25E5%258D%258A%25E8%2587%25AA%25E5%258B%2595%25E7%259A%2584%25E3%2581%25AB%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E6%2596%25B0%25E6%2584%259F%25E8%25A6%259ASNS%2520%25E3%2583%25A2%25E3%2583%2589%25E3%2582%25AD%2560AutoF2F%2560%25E3%2580%258F%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2520%2520%2520%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzVkYzllOWQ1NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dozo/articles/0b5940f1994a6c",
          "author": "dozo",
          "description": "@wasm-tool/rollup-plugin-rustの使い方\n関連記事:\nRustが征くシリーズ過去記事\n\nWSL2で作るWindows開発環境: Rustが征く(1)\nwasmerでWebAssemblyの門を叩く: Rustが征く(2)\nJavaScriptからWebAssemblyの関数を呼び出す: Rustが征く(3)\nTypeScriptとRollupでWebassemblyを稼働させる: Rustが征く(4) ← イマココ\n\n\n------------------- ↓ 前書はここから ↓-------------------\n前回はコマンドを駆使して、\nブラウザ上...",
          "link": "https://zenn.dev/dozo/articles/0b5940f1994a6c",
          "publishedOn": "2021-08-22T21:20:21.000Z",
          "wordCount": 327,
          "title": "TypeScriptとRollupでWebassemblyを稼働させる: Rustが征く(4)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Y5w9ST9r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dozo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:TypeScript%25E3%2581%25A8Rollup%25E3%2581%25A7Webassembly%25E3%2582%2592%25E7%25A8%25BC%25E5%2583%258D%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%253A%2520Rust%25E3%2581%258C%25E5%25BE%2581%25E3%2581%258F%25284%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/daisukesasaki/articles/9620f7fd0ca348",
          "author": "daisuke sasaki",
          "description": "前回のbackend編からの続きです\nbackend編\n正直、フロント側はさっぱりセンスが無い＋忘れまくってたりしたのでめちゃくちゃ調べ直した。\nあらためて両方できる皆さんすごいわぁ、、（ちなみに僕はバックエンド側もセンスないです）\nfrontend側に入る前に前回やった内容がちょっと半端だったのでまずはそこをサクッと修正してしまおうと思います。\n\n crud.py\n\n      \n        \n        # project/backend/app/api/crud.py\nfrom app.models.pydantic import SummaryPayloadSchem...",
          "link": "https://zenn.dev/daisukesasaki/articles/9620f7fd0ca348",
          "publishedOn": "2021-08-22T14:14:08.000Z",
          "wordCount": 1254,
          "title": "Docker×FastAPI×React(TypeScript) on AWS ECS【frontend】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oBhPaJmk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:daisuke%2520sasaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Docker%25C3%2597FastAPI%25C3%2597React%2528TypeScript%2529%2520on%2520AWS%2520ECS%25E3%2580%2590frontend%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYWZiMjI1NmFmZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/bb10104c12080e",
          "author": "空雲",
          "description": "Next.jsでWeb-Workerを簡単に使うには\n前回の記事で書きましたが、Next.jsには最初からWeb-Workerを読み込むためのWebPack設定が入っているので、そのまま利用することが可能です\nしかしWeb-Workerとして書いたスクリプトを読み込む設定が入っているだけで、それ以外のサポートはありません\n機能を利用するには、コード上でそれなりに面倒な手順を記述する必要があります\n\n 前回の記事\nNext.jsでWeb-Workerを呼び出す\n\n サンプル置き場\nhttps://github.com/SoraKumo001/next-worker2\nhttps://n...",
          "link": "https://zenn.dev/sora_kumo/articles/bb10104c12080e",
          "publishedOn": "2021-08-22T04:16:21.000Z",
          "wordCount": 519,
          "title": "Next.jsでお手軽にWeb-Workerを呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GigYvxg5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2581%25ABWeb-Worker%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kinjosan/articles/26cff4f92b9453",
          "author": "kinjo yuya",
          "description": "Github Actions 上で Typescript を実行して、その計算内容を Github Actions 上で使用したい時とかありますよね🎅\n\n TL;DR\n\nGithub Actions で Typescript 実行\n@actions/core の setOutput を使用\n\n\n 例\n毎朝 10 時に aws のコストを取得して、aws のコストはドルなので、円に直して slack に通知\n※細かい取得方法はテーマではないので省略してます\n\n      \n        \n        const awsCost = 100; // ドル\nconst rate = 10...",
          "link": "https://zenn.dev/kinjosan/articles/26cff4f92b9453",
          "publishedOn": "2021-08-21T08:25:26.000Z",
          "wordCount": 216,
          "title": "Typescriptで計算した結果をGithub Actionsに渡して使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--C0KaPzn0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinjo%2520yuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Typescript%25E3%2581%25A7%25E8%25A8%2588%25E7%25AE%2597%25E3%2581%2597%25E3%2581%259F%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592Github%2520Actions%25E3%2581%25AB%25E6%25B8%25A1%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNYmlWVVpNSVV6b1ZfRnhNSWxzWGllQTJPalQ1SGZFNE9BdnNMY25jPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kinjosan/articles/04287460d854e4",
          "author": "kinjo yuya",
          "description": "toStringを使う\n\n      \n        \n        const numToString = (num: number): string => num.toString();\n\nnumToString(1234)\n// \"1234\"\n\n\n      \n      \n String関数を使用する\n\n      \n        \n        const numToString = (num: number): string => String(num);\nnumToString(1234)\n// \"1234\"\n\n\n      \n      undef...",
          "link": "https://zenn.dev/kinjosan/articles/04287460d854e4",
          "publishedOn": "2021-08-21T08:20:08.000Z",
          "wordCount": 71,
          "title": "Javascriptで数字 → 文字に変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HVPd-MJP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kinjo%2520yuya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Javascript%25E3%2581%25A7%25E6%2595%25B0%25E5%25AD%2597%2520%25E2%2586%2592%2520%25E6%2596%2587%25E5%25AD%2597%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pNYmlWVVpNSVV6b1ZfRnhNSWxzWGllQTJPalQ1SGZFNE9BdnNMY25jPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kota_yata/articles/89b10ac8c93b92",
          "author": "kota-yata",
          "description": "TypeScriptでBase64を自作します。Denoの場合標準ライブラリにBase64が実装されていますので実際に利用する際はそちらを使ってください。\n\n 完成品\n一応Denoパッケージとしても公開しています。\nhttps://github.com/kota-yata/ky_base64\n\n 処理の流れ\n\n エンコーダー\nBase64エンコードの大まかな流れは、\n\n文字列のバイナリーを6bitsで区切る\n余ったビットは末尾に0を加えて6bitsにする\n予め定められている変換表に対応する文字に変換する\n文字数が4の整数倍に満たない場合は=で埋め合わせる\n\nという、割と単純なアルゴリズム...",
          "link": "https://zenn.dev/kota_yata/articles/89b10ac8c93b92",
          "publishedOn": "2021-08-21T05:29:11.000Z",
          "wordCount": 379,
          "title": "UTF-8対応のBase64を自作する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--3GCe4mhI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kota-yata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:UTF-8%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%25AEBase64%25E3%2582%2592%25E8%2587%25AA%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTdmNTY4NmQyOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yknight/articles/f0167dc5b0cceb",
          "author": "y_Knight",
          "description": "フロントエンド環境に実装をしたStorybookに、Sassを導入する\nStorybookへのSassの導入でcss-loaderでエラーにはまり、手順の記事を書きました。\n原因はWebpack4と５で破壊的な変更（更新）からPKGをインストールして解決できました。（めでたし）\nでも、フロントエンド開発に必要そうなベーシックな環境構築を、「ざーーっと、まとめたかった」ことが、個人的には一番の記事の動機です。\n\n 実装リスト\n\ndocker\nNext.js/TypeScript\nSass\nStorybook\njest\nAtomic design\n\n※導入は個人の責任でおねがいします。（...",
          "link": "https://zenn.dev/yknight/articles/f0167dc5b0cceb",
          "publishedOn": "2021-08-19T18:54:15.000Z",
          "wordCount": 600,
          "title": "【2021-8】 Next.js + TypeScript + Storybook(Atomic Design) + Sass + jest",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9TfjLDht--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:y_Knight%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%25902021-8%25E3%2580%2591%2520Next.js%2520%252B%2520TypeScript%2520%252B%2520Storybook%2528Atomic%2520Design%2529%2520%252B%2520Sass%2520%252B%2520jest%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjk2NzljOWNhZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kingu/articles/c32dfd9ca28fe8",
          "author": "kingu",
          "description": "開発中だから見られたくない、特定の人にだけ見せたいなどで簡単に認証かけたいとなるとBasic認証である。\nFirebase HostingでもCloud Functionsと連携すれば実現できる。\n\n ググるといっぱい出てくるが...\nhttps://www.google.com/search?q=firebase+hosting+basic認証\nなぜかCloud FunctionsはJavaScriptベースしか出てこなかった。\nTypeScriptでやろうとしてちょっとハマったので共有していく。\n\n見つけられなかっただけかも...\n\n\n 手順\nとは言え特別にやることはない。\n\nFir...",
          "link": "https://zenn.dev/kingu/articles/c32dfd9ca28fe8",
          "publishedOn": "2021-08-19T09:32:59.000Z",
          "wordCount": 165,
          "title": "Firebase HostingでBasic認証をかける ~TypeScript編~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fOehZxye--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kingu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Firebase%2520Hosting%25E3%2581%25A7Basic%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%2592%25E3%2581%258B%25E3%2581%2591%25E3%2582%258B%2520%7ETypeScript%25E7%25B7%25A8%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2l4VkhrM2JzdjU3U1RPdmF0QXlHUm84WmJvZTFhbzktM1ZpTVAwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/bonfireman/articles/1baea537219738",
          "author": "Shota Nakano",
          "description": "Strategyとは？\nGoF（Gang of Four）デザインパターンの一つであり、さまざまなビジネスルールやアルゴリズムの変更が発生した際に、使用する側には意識させる事なく、柔軟に変更を可能にするためのパターンです。\n\n コードを書いてみよう\n今回は、以下のようなにネットで購入できる「写真」があったとします。\n写真のサイズには「L」「2L」「DL（ダウンロード）」の３種類があり、それぞれの定価があります。\n\n Strategyを使わない場合\n\n      \n        \n        class Photo {\n// 種類\n  private _size: 'L' | '...",
          "link": "https://zenn.dev/bonfireman/articles/1baea537219738",
          "publishedOn": "2021-08-18T15:12:00.000Z",
          "wordCount": 142,
          "title": "デザインパターン ~Strategyパターン~",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8v68AlNz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nakano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2520%7EStrategy%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%7E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0c0tkOE1YUGFDbkJuNmdBY3Y3cWNwbzduYVE5T2ZabUZoUUR4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/1f7df8f2beb6b6",
          "author": "chida",
          "description": "DIとは\nDI（Dependency Injection）とは、日本語訳で依存性の注入です。依存性の注入と聞くと、依存性という抽象的な概念を何かに注入するような印象を与えますが、依存性という言葉自体は依存対象を表します。\nDIにおける依存対象は、オブジェクトのインスタンスです。つまり、Dependencyはオブジェクトのインスタンスを指します。そして、Injectionは外部から挿入するという意味を持つため、DIはオブジェクトのインスタンスを外部から挿入するという事になります。\n\n DIのコード\nDIの対応前後のサンプルコードで比較を確認します。次のコードは、ブラウザのコンソールに「...",
          "link": "https://zenn.dev/chida/articles/1f7df8f2beb6b6",
          "publishedOn": "2021-08-18T15:04:41.000Z",
          "wordCount": 600,
          "title": "TypeScriptでのDIと、Tsyringeについて",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OOgbteQp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E3%2581%25AEDI%25E3%2581%25A8%25E3%2580%2581Tsyringe%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sora_kumo/articles/65420761a0bec2",
          "author": "空雲",
          "description": "Next.jsとWeb-Worker\nNext.jsは様々な機能を無設定で行えるように開発されています\nWeb-Workerに関しても同様で、next.config.jsに一切手を入れずに動かすことが出来ます\nどのぐらい手軽に利用可能か、試してみたいと思います\n\n 初期作業\n\n      \n        \n        yarn add next react react-dom\nyarn add -D typescript @types/node @types/react\n\n\n      \n      \n ソースコード\n\nsrc/libs/sums.ts\n\n1からcountで与え...",
          "link": "https://zenn.dev/sora_kumo/articles/65420761a0bec2",
          "publishedOn": "2021-08-18T12:58:21.000Z",
          "wordCount": 185,
          "title": "Next.jsでWeb-Workerを呼び出す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qqkuF2EI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25A9%25BA%25E9%259B%25B2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7Web-Worker%25E3%2582%2592%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWVlODMwNjIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/amay077/articles/77b08c940decbe",
          "author": "amay077",
          "description": "AWS AppSync というと、私は「Google Firestore 対抗のオフライン対応リアルタイムデータベース、ただし API は GraphQL」という認識だったのですが、もう少し機能をブレークダウンしていくと、「単なるマネージドな WebSocket 的サービス」としても使えるな、と気付きまして、試しにチャットっぽいアプリを作ってみました。\nこんなやつ↓\n\n\n AppSync 側の設定\nデータソースは使用しません（＝ローカルリゾルバーを使用）。\nこれによりデータは永続化されずただの 「WebSocket的サーバー」 として動作します。\nデータを永続化したい場合は、Dynamo...",
          "link": "https://zenn.dev/amay077/articles/77b08c940decbe",
          "publishedOn": "2021-08-18T03:03:02.000Z",
          "wordCount": 414,
          "title": "AWS AppSync + Local Resolver でチャットっぽいものを作ってみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--weTmIUpy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:amay077%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:AWS%2520AppSync%2520%252B%2520Local%2520Resolver%2520%25E3%2581%25A7%25E3%2583%2581%25E3%2583%25A3%25E3%2583%2583%25E3%2583%2588%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjc1ZGNhOGM5Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dozo/articles/54f697ff41f100",
          "author": "dozo",
          "description": "rollup-plugin-esbuildでそれぞれのいいとこ取り\n------------------- ↓ 前書はここから ↓-------------------\nWebpack嫌いには光の速さで消えて欲しい筆者にとって、\nバンドラーはもっぱらrollup.jsだった。\nプラグインの豊富さからありとあらゆる場面で活用していたのだが、\n最近バンドラーのトレンドにビルド速度というのがあり、\nちょっと気になる今日この頃。\nesbuildやswcのようにGoやRustのようなハードウェアレイヤーの言語を使って、\nビルド実行をしてしまうアプローチ。\n(緩募: 低レベル言語に変わる用語)\n...",
          "link": "https://zenn.dev/dozo/articles/54f697ff41f100",
          "publishedOn": "2021-08-17T20:41:28.000Z",
          "wordCount": 173,
          "title": "rollup.jsに爆速esbuildを組み込む方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--CZVRE7f---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dozo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:rollup.js%25E3%2581%25AB%25E7%2588%2586%25E9%2580%259Fesbuild%25E3%2582%2592%25E7%25B5%2584%25E3%2581%25BF%25E8%25BE%25BC%25E3%2582%2580%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eagle/articles/where-is-simple-rpc-for-js",
          "author": "eagle",
          "description": "前提\n昔から、個人が思いつくようなことは\n\n既に方法が確立されている。自分が発見できていないだけ。\n既に試してみた先人たちがいるが、上手くいかないことが分かり頓挫したプロジェクトである。\n\nの2択だとよく言われます。\n私が今探しているのは超シンプルなWebサーバーとクライアント間のRPCです。\n特に、バックエンドはNodeJS限定とします。\nこれにより言語が統一されるのでバックエンドとフロントエンドでコード共有ができます。\nC#のMagicOnionのように、APIのインターフェースとその実装、および少々のコンフィギュレーションを定義するだけで済むはずです。\n超お手軽です。\n\n 現実...",
          "link": "https://zenn.dev/eagle/articles/where-is-simple-rpc-for-js",
          "publishedOn": "2021-08-17T13:09:08.000Z",
          "wordCount": 616,
          "title": "TypeScriptを使ってNode.jsとブラウザ間のRPC（情報求む）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fZ1tKFHe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eagle%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6Node.js%25E3%2581%25A8%25E3%2583%2596%25E3%2583%25A9%25E3%2582%25A6%25E3%2582%25B6%25E9%2596%2593%25E3%2581%25AERPC%25EF%25BC%2588%25E6%2583%2585%25E5%25A0%25B1%25E6%25B1%2582%25E3%2582%2580%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTFmZjAxNGQyZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/6a9cf3989aa443",
          "author": "KenT",
          "description": "コード全体\n\n      \n        \n        import type { NextPage } from 'next'\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\n\ntype Inputs = {\n  name: string;\n  phone_number: number;\n}\n\nconst Home: NextPage = () => {\n  const {\n    regis...",
          "link": "https://zenn.dev/kenta0313/articles/6a9cf3989aa443",
          "publishedOn": "2021-08-17T03:30:35.000Z",
          "wordCount": 175,
          "title": "React-Hook-Formがシンプルで使いやすい👍",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--NNzo0tr6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React-Hook-Form%25E3%2581%258C%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2584%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%2520%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3OWM0YjhkZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/wok/articles/0018_reduce-transfered-data-amazon-chime-sdk",
          "author": "wok",
          "description": "この記事は、こちらの記事を改変したものになります。\nhttps://cloud.flect.co.jp/entry/2021/08/17/064854\n\nこんにちは。\n前回の記事では、Amazon Chime SDK for javascript(Amazon Chime SDK JS)を用いて、\"Among usをAuto Muteする機能\"と\"ゲーム画面を配信する機能\"を持つゲーム実況システムを構築する方法についてご紹介しました。\n前回のシステムでは、最大15名のユーザのゲーム画面をリアルタイムに配信します。このため、映像を受信する側にはそれなりのネットワーク帯域が前提とされます。...",
          "link": "https://zenn.dev/wok/articles/0018_reduce-transfered-data-amazon-chime-sdk",
          "publishedOn": "2021-08-16T21:55:13.000Z",
          "wordCount": 145,
          "title": "Amazon Chime SDKアプリで映像データ転送量を削減するアイデア -Among Us Auto Mute-",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EKGNDn3c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:wok%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Amazon%2520Chime%2520SDK%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25A7%25E6%2598%25A0%25E5%2583%258F%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E8%25BB%25A2%25E9%2580%2581%25E9%2587%258F%25E3%2582%2592%25E5%2589%258A%25E6%25B8%259B%25E3%2581%2599%25E3%2582%258B%25E3%2582%25A2%25E3%2582%25A4%25E3%2583%2587%25E3%2582%25A2%2520-Among%2520Us%2520Auto%2520Mute-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZemxmeFk4WFJDTHJzM1VvRWI2YmI0cEVhem1kTDg5ejFXQnFZdVE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dyoshikawa/articles/b9b92d358f8f04",
          "author": "d yoshikawa",
          "description": "GraphQL入門としてAppSyncを触ってみました。\nAppSyncのデータソースとしてLambdaを選択した場合、\n\nLambda関数へ入力値はどんなふうに渡るのか\nどのような値を返せば良いのか\n\nについてイメージしづらかったため、実際に試してみました。\n\n 環境\n\n(端末の)node 15.11.0\naws-cdk 1.117.0\ntypescript 4.3.5\n@types/aws-lambda 8.10.81\n\n\n schema.graphql\n\n      \n        \n        type user {\n  id: String!\n  name: String...",
          "link": "https://zenn.dev/dyoshikawa/articles/b9b92d358f8f04",
          "publishedOn": "2021-08-16T16:12:19.000Z",
          "wordCount": 238,
          "title": "AWS AppSyncでLambdaをDataSoruceとした場合のLambda関数の入出力",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--j1-A5pmZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:d%2520yoshikawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:AWS%2520AppSync%25E3%2581%25A7Lambda%25E3%2582%2592DataSoruce%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E5%25A0%25B4%25E5%2590%2588%25E3%2581%25AELambda%25E9%2596%25A2%25E6%2595%25B0%25E3%2581%25AE%25E5%2585%25A5%25E5%2587%25BA%25E5%258A%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p1RUdBX0VEUzhuc2ExaDRCMldXUWVhcHE2OU5FRUFTcVRxbi1kSkE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/merutin/articles/16397b8a7f25f3",
          "author": "merutin",
          "description": "undefinedな値が入る可能性がある配列がある場合、filterを使ってnullableなものを排除しますが、typescriptではそのままではうまく認識されません。\n\n      \n        \n        const item = ['a', undefined, 'b', 'c', 'd'];\n\nconst ret = item.filter(i => i !==  undefined && i !== null);\n// const ret: (string | undefined)[]\n\n\n      \n      TypeScript Pl...",
          "link": "https://zenn.dev/merutin/articles/16397b8a7f25f3",
          "publishedOn": "2021-08-16T08:20:30.000Z",
          "wordCount": 95,
          "title": "TypeScriptの配列でnullableなものを外す",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xcJCQ0OH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:merutin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25AE%25E9%2585%258D%25E5%2588%2597%25E3%2581%25A7nullable%25E3%2581%25AA%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E5%25A4%2596%25E3%2581%2599%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYmM4YmUzYmM5Ny5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/azukiazusa/articles/c89d4bdc7dacf2",
          "author": "azukiazusa",
          "description": "普段からTypeScriptで開発されている方ならば、TypeScriptの恩恵を十分に堪能されていることと思います。\n特に私はVS Codeのインテリセンスには頼りっぱなしでこれがなければまともにコーディングができない体になってしまいました。\nしかし時には、TypeScriptという概念が存在しない退屈な世界で開発を行わなけらばならない状況はあるでしょう。私はもはやキーボードでタイピングすることすらままなりません。\nそんなJavaScriptしか利用できない状況で代替手段となるのが、JSDocです。JSDocのアノテーションによって型を付与することによって最低限の支援を受けることができ...",
          "link": "https://zenn.dev/azukiazusa/articles/c89d4bdc7dacf2",
          "publishedOn": "2021-08-15T22:08:09.000Z",
          "wordCount": 634,
          "title": "JSDocで型を定義してTypeScriptの恩恵を受ける",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Gd-9xjxd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:azukiazusa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:JSDoc%25E3%2581%25A7%25E5%259E%258B%25E3%2582%2592%25E5%25AE%259A%25E7%25BE%25A9%25E3%2581%2597%25E3%2581%25A6TypeScript%25E3%2581%25AE%25E6%2581%25A9%25E6%2581%25B5%25E3%2582%2592%25E5%258F%2597%25E3%2581%2591%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjgzYWY0MzVjZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hunbari_front/articles/5b7bce2a2f8cde",
          "author": "ふんばりフロントエンジニア",
          "description": "はじめに\ncreate-react-app（以下、cra）めちゃくちゃ便利ですよね。\nまた、TypeScriptでもサクッとテンプレートを作成できるのがグッドです。\nで、craでwebpackの設定いじりたいなーって時に私は「craco」というライブラリを使います。\nhttps://www.npmjs.com/package/@craco/craco\n今回はこのcracoを使って、上記のaliasの設定をしていきます。（厳密にはwebpackに定義するわけではないのですが...）\n\n 普通にaliasを設定する\nまず、cracoをVanillaなJSテンプレートで使う場合の、webp...",
          "link": "https://zenn.dev/hunbari_front/articles/5b7bce2a2f8cde",
          "publishedOn": "2021-08-15T13:30:18.000Z",
          "wordCount": 190,
          "title": "【create-react-app】webpackのaliasをTypeScriptでも有効にする方法は",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IqiBRLH4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B5%25E3%2582%2593%25E3%2581%25B0%25E3%2582%258A%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590create-react-app%25E3%2580%2591webpack%25E3%2581%25AEalias%25E3%2582%2592TypeScript%25E3%2581%25A7%25E3%2582%2582%25E6%259C%2589%25E5%258A%25B9%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMmRjMDE3NmI1OC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/b6f679bfe11261",
          "author": "ryo_kawamata",
          "description": "先日初めて真面目に自分のコードを OSS として公開する機会があり、色々試行錯誤したのでまとめます。\n\n「真面目に」の基準は過去に自分が公開したリポジトリに比べてです 🙏\n\n\n 何を公開した？\nVue Word Highlighter という Vue.js のコンポーネントライブラリを公開しました。\n機能はとても単純で、文字列と検索クエリを渡すと検索クエリに合致した文字をハイライトする（<mark>タグ又は任意のタグ囲む）というものです。\nhttps://github.com/kawamataryo/vue-word-highlighter\n自分なりに良い感じに使えるコンポー...",
          "link": "https://zenn.dev/ryo_kawamata/articles/b6f679bfe11261",
          "publishedOn": "2021-08-15T11:16:02.000Z",
          "wordCount": 279,
          "title": "真面目にOSSを公開する際にやってみたこと・意識したこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpAp0yXP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%259C%259F%25E9%259D%25A2%25E7%259B%25AE%25E3%2581%25ABOSS%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2583%25BB%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/altech/articles/3c868c41e64f94",
          "author": "Altech",
          "description": "Firebase と React の勉強を兼ねて、愛用しているタスク管理アプリ Todoist のクローンを作ってみた。途中で色々試行錯誤したのだが、「最初から最短の手順で作るならこういう手順になる」というのを備忘と Firebase の紹介も兼ねてまとめてみようと思う。\n\nアプリケーション: https://altech-todoist.web.app/\nソースコード： https://github.com/Altech/todoist-clone\n\n 0. はじめに\n\n 技術スタック\n\n言語： TypeScript\nUIライブラリ： React 17\nバックエンド：Firebase ...",
          "link": "https://zenn.dev/altech/articles/3c868c41e64f94",
          "publishedOn": "2021-08-15T03:23:25.000Z",
          "wordCount": 1337,
          "title": "Firebase + React で Todoist のクローンを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--PYEr3HS6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Altech%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%2520%252B%2520React%2520%25E3%2581%25A7%2520Todoist%2520%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lwM1lJX0QtdzRRWVpUamg0WHhFV2FNaE01SHgzcHdjRXhucG15PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gebo/articles/react-ts-cat-1",
          "author": "gebo",
          "description": "フロントエンドのお勉強をしています。\nとりあえず React をやってみてるのですが react-redux、redux-thunk がめっちゃ難しくて全然理解できないということで簡単なコードを書いて実行しながら勉強したメモです。\nハンズオンぽく書いてます。\n結果だけ興味のある方は コチラ からどうぞ。\n\n はじめに\n\n 環境\n\nOS : macOS Big Sur\nエディタ : VSCODE\n言語 : React & TypeScript\nブラウザ : Chrome\n\n\n キーワード\n以下の内容を雰囲気レベルで使っています。\n\nReact Router( react-route...",
          "link": "https://zenn.dev/gebo/articles/react-ts-cat-1",
          "publishedOn": "2021-08-15T02:06:45.000Z",
          "wordCount": 1328,
          "title": "React&TypeScriptでのreact-redux、redux-thunkお勉強メモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5mcIuEFO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gebo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%2526TypeScript%25E3%2581%25A7%25E3%2581%25AEreact-redux%25E3%2580%2581redux-thunk%25E3%2581%258A%25E5%258B%2589%25E5%25BC%25B7%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzRjMDUyZDE0OC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/4ea4219cf69225",
          "author": "kawarimidoll",
          "description": "先日、Deno標準ライブラリのバージョン0.104.0が公開されました。\nhttps://github.com/denoland/deno_std/releases/tag/0.104.0\nこちらで増強されたcollectionsというモジュールを紹介します。\nhttps://deno.land/std@0.104.0/collections\nその名の通り、集合の扱いを支援してくれるモジュールです。\n本記事では0.104.0のリリースで追加された関数を紹介します。\n既存のものはバージョン0.102.0の時点での記事で解説していますので、あわせてご覧ください。\nhttps://zenn.d...",
          "link": "https://zenn.dev/kawarimidoll/articles/4ea4219cf69225",
          "publishedOn": "2021-08-14T12:59:52.000Z",
          "wordCount": 660,
          "title": "Deno標準ライブラリ0.104.0で増強されたcollectionsの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KFwAFqVd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA0.104.0%25E3%2581%25A7%25E5%25A2%2597%25E5%25BC%25B7%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fcollections%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yosket/articles/a4402ffa2a12e4",
          "author": "Yosuke Tanaka",
          "description": "何を作ったか\n2021年7月にQiitaに投稿された『エンジニア・プログラマにしか使えないSNSを作ってみた話』という記事で紹介されているSNSのウェブクライアントを、7月の4連休を使って作ってみました。\nhttps://sofeap.vercel.app/\n\n 『エンジニア・プログラマにしか使えないSNS』とは\nhttps://qiita.com/HawkClaws/items/599d7666f55e79ef7f56\n\n本当のエンジニア・プログラマしか使えないSNSを作ってみました！\nつまり、WebApi提供のみのSNSです\n一般ピープルが使うようなフロントエンドなんてありません...",
          "link": "https://zenn.dev/yosket/articles/a4402ffa2a12e4",
          "publishedOn": "2021-08-14T12:34:23.000Z",
          "wordCount": 143,
          "title": "『エンジニア・プログラマにしか使えないSNSを作ってみた話』のクライアントを作ってみた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xK4AT_rS--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yosuke%2520Tanaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%258E%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A2%25E3%2583%25BB%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259E%25E3%2581%25AB%25E3%2581%2597%25E3%2581%258B%25E4%25BD%25BF%25E3%2581%2588%25E3%2581%25AA%25E3%2581%2584SNS%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%25E3%2580%258F%25E3%2581%25AE%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25A4%25E3%2582%25A2%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTRmMjNhMmNjNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eagle/articles/ts-coproduct-introduction",
          "author": "eagle",
          "description": "代数的データ型とはなにか\n代数的データ型とは、要素の個数の足し算と掛け算のアナロジーで語ることができる型のことを指すというふわっとしたコンセンサスがありますが、\n厳密に「これが代数的データ型である」という定義はおそらくありません[1]。\nまた、代数的データ型はいわゆる関数型言語で実装されることが多い言語機能であり、\n代数的データ型を重用するプログラミングスタイルは関数型の一派としてみなされる傾向がある[2]と思っています。\n本記事では数学的な説明やアナロジーは用いず、なるべく具体的なコードを提示します。\nそして、代数的データ型という言葉を「かつ」と「または」を表すことができる型として...",
          "link": "https://zenn.dev/eagle/articles/ts-coproduct-introduction",
          "publishedOn": "2021-08-14T11:38:08.000Z",
          "wordCount": 1719,
          "title": "TypeScriptで学ぶ代数的データ型",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--KpEjgwH5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eagle%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E5%25AD%25A6%25E3%2581%25B6%25E4%25BB%25A3%25E6%2595%25B0%25E7%259A%2584%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTFmZjAxNGQyZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/himorishige/articles/de9593a77863e8",
          "author": "Hi MORISHIGE",
          "description": "はじめに\nReduxにはながーい歴史の中、非同期処理についてはいろいろと語られてきましたが、、🙈\nRedux Toolkit v1.6.0からは新たな非同期処理であるRTK Queryが組み込まれました。\nRTK Queryはswrやreact-queryと同じようなキャッシュ戦略を駆使したRedux Toolkitチーム謹製のQueryツールとなっています。\nhttps://redux-toolkit.js.org/rtk-query/overview\nいくつかのプロジェクトでも使い始めていたところですが、ちょうどRedux Thunk -> createSyncThunk ...",
          "link": "https://zenn.dev/himorishige/articles/de9593a77863e8",
          "publishedOn": "2021-08-13T10:00:01.000Z",
          "wordCount": 746,
          "title": "Redux Toolkit の非同期処理の変遷を試してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fTC1txNK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hi%2520MORISHIGE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Redux%2520Toolkit%2520%25E3%2581%25AE%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25AE%25E5%25A4%2589%25E9%2581%25B7%25E3%2582%2592%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTVmZmRmNGJjNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/38f7a866799414",
          "author": "ryo_kawamata",
          "description": "先日リリースした個人開発のアプリについて感想や技術スタックなど色々書きます。\n\n どんなアプリを公開した？\n以下ツイートで紹介している、 Slack の絵文字スタンプ用のアニ GIF を簡単につくれるアプリを公開しました。\nhttps://twitter.com/KawamataRyo/status/1425292135356682248\nタイミングが良かったのか数多く Retweet してもらえ、 Twitter を初めて初のバズの波動を感じました。アプリ自体はこちらです。とても簡単に試せるのでぜひ使ってもらえると嬉しいです。\nhttps://www.animated-emoji-ge...",
          "link": "https://zenn.dev/ryo_kawamata/articles/38f7a866799414",
          "publishedOn": "2021-08-13T08:35:22.000Z",
          "wordCount": 390,
          "title": "Vue3 で「動く」Slack絵文字ジェネレーターを作って公開した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--iEV2x0Nc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue3%2520%25E3%2581%25A7%25E3%2580%258C%25E5%258B%2595%25E3%2581%258F%25E3%2580%258DSlack%25E7%25B5%25B5%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B8%25E3%2582%25A7%25E3%2583%258D%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/beeeyan/articles/8493cfe83f775f",
          "author": "beeeyan",
          "description": "前回に引き続きTheme UIの話です。\n\n はじめに ~ Presetのデザインとは？ ~\nPresetとは「設定値などを前もって調整すること」であり、\nTheme UIではパッケージとしてあらかじめ用意されたデザイン（色など）の規定値が存在しています。\nたとえば、公式サイト右上のボタンは、Presetの種類を意味していて、\nこのボタンを押すことで、デザインを瞬時に変更できるようになっています。\nLightの場合（公式サイトのスクショ）\n\ndarkの場合（公式サイトのスクショ）\n\n今回の記事は、この「Preset」をどうやって導入するかって話になります！\n\n Presetの確認方法\n公...",
          "link": "https://zenn.dev/beeeyan/articles/8493cfe83f775f",
          "publishedOn": "2021-08-13T07:30:15.000Z",
          "wordCount": 186,
          "title": "Theme UIのPresetのデザインの導入方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--xfznHFId--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:beeeyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Theme%2520UI%25E3%2581%25AEPreset%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%25AE%25E5%25B0%258E%25E5%2585%25A5%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTg0NTA1OGQzYi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/himorishige/articles/cfd7aedacc3083",
          "author": "Hi MORISHIGE",
          "description": "はじめに\n個人的には最近のバックエンドはサーバレスにNestJSが一択になりつつあります。明日の自分のために、NestJS v8でnest new直後に行っている開発前の下準備の備忘録になります。\nhttps://nestjs.com/\nhttps://github.com/himorishige/nestjs-template\n\n 1.NestJSのプロジェクトを作成\nCLIをまだ未インストールの場合はNestJSのCLIをグローバルにインストールします。\n\n      \n        \n        $ npm i -g @nestjs/cli\n\n\n      \n      ...",
          "link": "https://zenn.dev/himorishige/articles/cfd7aedacc3083",
          "publishedOn": "2021-08-13T07:04:03.000Z",
          "wordCount": 306,
          "title": "NestJSで新規プロジェクトを作るときの備忘録",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5PPo_g3q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hi%2520MORISHIGE%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:NestJS%25E3%2581%25A7%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%2582%2599%25E5%25BF%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTVmZmRmNGJjNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kondo_script/articles/a61aebbcd6d4a8",
          "author": "kondo_script",
          "description": "誰向けの記事?\n\nreact-nativeやexpo使って小さなアプリを作りたいけどバックエンド組むのは面倒くさい人\nredux toolkitってぶっちゃけどうなん？ というのが知りたい人\nexpo + redux-toolkit + redux-persist のボイラープレートが欲しい人\n\n黙って動くボイラープレートよこせや、っていう人はこちら\n\nおれはそういう素直な人好きだよ\n\n\n\n\n\n\n いきさつ\n\n何につけてもやる気が出なかったのでやる気を永続化させようと思った\nやる気がないのでexpoで楽して作りたかった\nやる気がないのでバックエンドは作りたくなかった\n\nAsyncSt...",
          "link": "https://zenn.dev/kondo_script/articles/a61aebbcd6d4a8",
          "publishedOn": "2021-08-12T18:31:54.000Z",
          "wordCount": 81,
          "title": "expo + redux-toolkit + redux-persistでAsyncStorageにやる気を永続化させるアプリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8wGEqvXX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kondo_script%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:expo%2520%252B%2520redux-toolkit%2520%252B%2520redux-persist%25E3%2581%25A7AsyncStorage%25E3%2581%25AB%25E3%2582%2584%25E3%2582%258B%25E6%25B0%2597%25E3%2582%2592%25E6%25B0%25B8%25E7%25B6%259A%25E5%258C%2596%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzdhYjk3MmU5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/manalink/articles/manalink-react-vite",
          "author": "マナリンク Tech Blog",
          "description": "オンライン家庭教師マナリンク CTO の名人です。\n先日マナリンクでリリースした新機能でReactとViteの組み合わせを選定しました。\nhttps://vitejs.dev/\n本記事ではReactとViteについて、以下の順で解説させていただきます。気になるところから読んでいただければ幸いです。\n\n採用理由\n実装の内容（環境設定、ライブラリ選定、コンポーネント設計など）\nCI/CD（デプロイ、テスティング、Linterなど）\n\n\n React×Viteの採用理由\n\n マナリンクについて\n採用理由を説明するにあたって、簡単にマナリンクの事業背景を説明します。\nマナリンクは、オンライン家庭...",
          "link": "https://zenn.dev/manalink/articles/manalink-react-vite",
          "publishedOn": "2021-08-12T09:33:09.000Z",
          "wordCount": 482,
          "title": "React × Viteで新機能を開発した話(採用理由、実装、CI/CD)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4Sf1mz4J--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%2520Tech%2520Blog%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%2520%25C3%2597%2520Vite%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2528%25E6%258E%25A1%25E7%2594%25A8%25E7%2590%2586%25E7%2594%25B1%25E3%2580%2581%25E5%25AE%259F%25E8%25A3%2585%25E3%2580%2581CI%252FCD%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODNjZWUyZDUxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nononono/articles/0255311126f88f",
          "author": "ノノ",
          "description": "どうもこんにちはノノです。\n今回は、僕がフロントエンドを独学する際に使用した教材を紹介していきたいと思います。\n最近のフロントエンドは技術の移り変わりが激しくて大変ですよね。\n特に初学者の方はどの教材を選べばいいか分からないですよね。\n（僕は分かりませんでした😇）\n少しでも参考になれば幸いです。\n前半に「使用した教材一覧」\n後半に「おすすめの教材」を紹介します。\n\nHTML,CSSの基礎知識はありました。\n\n\n 使用した教材一覧\n\n 本\n\nりあクト！ TypeScriptで始めるつらくないReact開発 第3.1版【Ⅰ. 言語・環境編】\nりあクト！ TypeScriptで始めるつらくない...",
          "link": "https://zenn.dev/nononono/articles/0255311126f88f",
          "publishedOn": "2021-08-12T07:26:17.000Z",
          "wordCount": 171,
          "title": "【2021年8月】フロントエンドの学習に使用した教材一覧（React, TypeScript, NEXT.js, Firebase）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--72Nu41ZM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%258E%25E3%2583%258E%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%25902021%25E5%25B9%25B48%25E6%259C%2588%25E3%2580%2591%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E5%25AD%25A6%25E7%25BF%2592%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E6%2595%2599%25E6%259D%2590%25E4%25B8%2580%25E8%25A6%25A7%25EF%25BC%2588React%252C%2520TypeScript%252C%2520NEXT.js%252C%2520Firebase%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjVlNzg1YzFjNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/magurotuna/articles/deno-release-note-1-13-0",
          "author": "magurotuna",
          "description": "Copyright (c) 2018-2021 the Deno authors. MIT License.\n日本時間の昨日（2021 年 8 月 11 日）に Deno の v1.13.0 がリリースされました。\nhttps://deno.com/blog/v1.13\n詳細なリリース内容は上記のリリースノートにまとまっていますが、ざっと紹介していきたいと思います。\n\nネイティブ HTTP サーバー実装の安定化\n\nself.structuredClone() のサポート\nTLSのためのシステム証明書ストアが利用可能になった\nテストのためTLS検証を無効にできるようになった\nWeb Cr...",
          "link": "https://zenn.dev/magurotuna/articles/deno-release-note-1-13-0",
          "publishedOn": "2021-08-11T15:56:40.000Z",
          "wordCount": 980,
          "title": "Deno 1.13.0 がリリースされたので新機能や変更点の紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FDW0vVf9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:magurotuna%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25201.13.0%2520%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2584%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNUGF0cWN1MUh1d1dEcG5uVzRETFVxZlI5aDlOM1NFc3FmaWdYZkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/a39fb1d8edc3a4",
          "author": "KenT",
          "description": "event:any を避けたい！\nまずはダメな例です\n\n      \n        \n        const onClick = (event: any) => {\n    //処理\n  };\n\n\n      \n      tsを書くならany型は避けたいですよね\n\n 便利な型推論\nなので、以下を使うのが便利です\n\n      \n        \n        type Props = {\n  onClick: (event: React.MouseEvent<HTMLInputElement>) => void\n  onChange: (event:...",
          "link": "https://zenn.dev/kenta0313/articles/a39fb1d8edc3a4",
          "publishedOn": "2021-08-11T09:13:59.000Z",
          "wordCount": 73,
          "title": "React×Typescript Eventの型まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--or2wRmTc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%25C3%2597Typescript%2520Event%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjg4ZDAyMTI0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yakumo/articles/65840a14a6e04f668f42b49d4814c9e9",
          "author": "Yakumo Saki",
          "description": "手順メモ\n\n 前提\n\n\n\nディレクトリ名\n用途\n\n\n\n\n./src\nソースディレクトリ\n\n\n./build\nts -> js にトランスパイルされたものを仮置きするディレクトリ\n\n\n./public/lib/\n実際にブラウザが読み込む js を置くディレクトリ\n\n\n\n\n 必要なものをインストール\n\nnpm i typescript -g\nnpm i webpack -g\nnpm i webpack-cli -g\n\n\n typescript→javascript 準備\n\n tsconfig.json 編集\n\n      \n        tsconfig.json\n       ...",
          "link": "https://zenn.dev/yakumo/articles/65840a14a6e04f668f42b49d4814c9e9",
          "publishedOn": "2021-08-11T08:19:33.000Z",
          "wordCount": 245,
          "title": "TypeScriptをコンパイルしてwebpackで一つにまとめる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--i2bpRip2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yakumo%2520Saki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6webpack%25E3%2581%25A7%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AB%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmUwZDllYTFlMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/katsumanarisawa/articles/58103deb4f12b4",
          "author": "Katsuma Narisawa",
          "description": "サマリ\n\n\nProject Referencesを使うと、1つの巨大なtypescriptプロジェクトを、複数のプロジェクトに分割し、プロジェクト間の依存関係を整理することができる。これにより、例えば以下のようなことができる\n\n\ntest/ ディレクトリで export しているテスト用の関数を、 src/ ディレクトリの本番用コードでは参照できなくする\nレイヤードアーキテクチャで設計しているとき、プレゼンテーション層で定義している関数を ドメイン層から参照できなくし、レイヤー間の依存関係を強制する\n\n\nまた、プロジェクトの分割によりビルド時のパフォーマンスが大幅に改善する。\n\n…と...",
          "link": "https://zenn.dev/katsumanarisawa/articles/58103deb4f12b4",
          "publishedOn": "2021-08-11T03:56:10.000Z",
          "wordCount": 322,
          "title": "TypeScriptのProject Referencesを使ってソースコードを分割し、レイヤー間の依存関係を強制する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--w9-qVyJx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Katsuma%2520Narisawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:TypeScript%25E3%2581%25AEProject%2520References%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%25BD%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E5%2588%2586%25E5%2589%25B2%25E3%2581%2597%25E3%2580%2581%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E9%2596%2593%25E3%2581%25AE%25E4%25BE%259D%25E5%25AD%2598%25E9%2596%25A2%25E4%25BF%2582%25E3%2582%2592%25E5%25BC%25B7%25E5%2588%25B6%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGd2NYR1FfN2V4bjdjdjY0OVh1cXBJMUZtcFF5ejQ1aTNIbE81Z3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ojin/articles/cecb2ac822f134",
          "author": "ofa-chan",
          "description": "はじめに\n日々答えがないものをGitHubをあさりながらやっている系のエンジニアです。好きなものはひぐらしとTypeScriptです。\nアカウントは、 https://zenn.dev/ojin です。\n何かおかしい所などありましたら遠慮なくコメントしていただければ幸いです。\n\n この記事では、Componentを作る時に自分が意識していることを書いておこうと思います。\nこの記事では、Componentを自分が作る時に気をつけていることやその手順を書きます。参考になればと思います。\n\n 例えば、TypographyというComponentを作ってみます\n\n基本的にはテキストを表示した...",
          "link": "https://zenn.dev/ojin/articles/cecb2ac822f134",
          "publishedOn": "2021-08-11T01:54:01.000Z",
          "wordCount": 238,
          "title": "Reactで最初に作るTypographyのComponentの作り方をちょっと丁寧に説明してみる。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2e-AkJcl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ofa-chan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%25E3%2581%25A7%25E6%259C%2580%25E5%2588%259D%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258BTypography%25E3%2581%25AEComponent%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%25E3%2582%2592%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E4%25B8%2581%25E5%25AF%25A7%25E3%2581%25AB%25E8%25AA%25AC%25E6%2598%258E%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2FkZDc5NWZiNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nanaki14/articles/html-template-react",
          "author": "nanaki14",
          "description": "前置き\nHTMLを納品する形式の仕事の際にEJSやpugではなくReact+TypeScriptを使ってHTMLを生成しつつ開発体験を高めてほしい。\nということで具体的にどのようなメリットがあるのかを伝えたくてまとめてみました。\n\n 開発環境\n1から環境を作るのは大変なので今回はクラクさんのministaを拡張していきます。\nministaの紹介記事はこちら\nhttps://www.npmjs.com/package/minista\nhttps://zenn.dev/qrac/articles/7537521afcd1bf\n必要な設定はTypeScript, ESLint, Pret...",
          "link": "https://zenn.dev/nanaki14/articles/html-template-react",
          "publishedOn": "2021-08-10T01:31:16.000Z",
          "wordCount": 286,
          "title": "HTMLコーディングでもReact+TypeScriptの開発体験を得る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--8n9mGGdp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nanaki14%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:HTML%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25B3%25E3%2582%25B0%25E3%2581%25A7%25E3%2582%2582React%252BTypeScript%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E4%25BD%2593%25E9%25A8%2593%25E3%2582%2592%25E5%25BE%2597%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pnRjhLNkJ2WVoxMEM4TTluckhGektic1EyZVdXVXZZSHIzREJLPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuki0410/articles/9ef50554a0ac69",
          "author": "らんす🍐",
          "description": "onChange に useCallback を使う場合、ちゃんと useCallback が効く書き方がひとクセあったのでその備忘録です。\n\n #1.処理フロー\n今回は、よくある以下のような処理について考えていきます。\n\n\n #2.Coding\nまずは処理フローを元に show/onChange の処理を実装します。\n※この段階ではまだ パフォーマンスは気にしません。\n\n      \n        ParentComponent.tsx\n        import { useState } from \"react\";\nimport type { InputValue } from ...",
          "link": "https://zenn.dev/yuki0410/articles/9ef50554a0ac69",
          "publishedOn": "2021-08-10T00:16:10.000Z",
          "wordCount": 744,
          "title": "そのuseCallbackちゃんと効いていますか",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--l1s2zQsj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2589%25E3%2582%2593%25E3%2581%2599%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%259D%25E3%2581%25AEuseCallback%25E3%2581%25A1%25E3%2582%2583%25E3%2582%2593%25E3%2581%25A8%25E5%258A%25B9%25E3%2581%2584%25E3%2581%25A6%25E3%2581%2584%25E3%2581%25BE%25E3%2581%2599%25E3%2581%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjQ2M2NjMGI0My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kimizuy/articles/recursive-table",
          "author": "kimizuy",
          "description": "はじめに\n再帰的なデータ構造に従って入れ子の（ネストされた）コンポーネントを実装してみました。\n\n ミニマルな再帰コンポーネント\nまずは、再帰処理の流れを掴むためにミニマルなコンポーネントの例を以下に示します。\n実態としては、繰り返し {data.name} を表示していくだけですね。\n\n      \n        \n        type Data = { name: string; children?: Data[] };\n\ntype Props = {\n  data: Data;\n};\n\nconst RecursiveComponent = ({ data }: Props...",
          "link": "https://zenn.dev/kimizuy/articles/recursive-table",
          "publishedOn": "2021-08-08T14:48:24.000Z",
          "wordCount": 256,
          "title": "再帰処理で入れ子のテーブルコンポーネントを作る（折りたたみ機能付き！）",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ESVqNCZ0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kimizuy%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2586%258D%25E5%25B8%25B0%25E5%2587%25A6%25E7%2590%2586%25E3%2581%25A7%25E5%2585%25A5%25E3%2582%258C%25E5%25AD%2590%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%2596%25E3%2583%25AB%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%25EF%25BC%2588%25E6%258A%2598%25E3%2582%258A%25E3%2581%259F%25E3%2581%259F%25E3%2581%25BF%25E6%25A9%259F%25E8%2583%25BD%25E4%25BB%2598%25E3%2581%258D%25EF%25BC%2581%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gwRWNwbHZnOXltdHdZbFBYWnVFUGl4aW5KcEkzMEUxX3pYNjBaSFE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/remon/articles/9e2953d699368a",
          "author": "remon",
          "description": "OverlayやPopOverでコンテンツを表示するとき、タブでの操作性は以下のようになってると望ましいと思う。\n\nOverlayコンテンツが表示中の時にタブを押すと、コンテンツにフォーカスが当たる。\nタブを押した時Overlayコンテンツのフォーカス可能な最初の子要素にフォーカスが当たる\nOverlayコンテンツのフォーカス可能な最後の子要素がフォーカス中であれば、最初の子要素のフォーカスが当たる。\n\nreact-popper等を使っていい感じのOverlayコンポーネントを作ったとしても、\n所詮座標を調整するライブラリなのでこの手のタブの操作性に関しては自前で実装する必要がありそうで...",
          "link": "https://zenn.dev/remon/articles/9e2953d699368a",
          "publishedOn": "2021-08-08T06:03:58.000Z",
          "wordCount": 220,
          "title": "React PopOverコンテンツ内でTabのFocusをいい感じにするhook",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LxmoZhqx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:remon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%2520PopOver%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2584%25E5%2586%2585%25E3%2581%25A7Tab%25E3%2581%25AEFocus%25E3%2582%2592%25E3%2581%2584%25E3%2581%2584%25E6%2584%259F%25E3%2581%2598%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258Bhook%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvci5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/masamichhhi/articles/cloudfuntions-prisma-docker",
          "author": "masamichhhi",
          "description": "cloud functionsからfirestoreを使うのはとても便利ですが、cloud functionsからRDBを使いたいときがあると思います。\nそこで、prismaというtypescript向けのORMがとても使い心地がよく、これをcloud functionsで手軽に使いたいなと思ったので、dockerを使ってそれらをローカルで開発できる環境を構築してみます。\n\n この記事でやること\n\nCloud Functions for Firebaseとmysqlの環境をdockerで構築\nprismaでfunctionからmysqlにアクセスして、todoリストのAPIを作る。\n\n\n...",
          "link": "https://zenn.dev/masamichhhi/articles/cloudfuntions-prisma-docker",
          "publishedOn": "2021-08-07T15:05:51.000Z",
          "wordCount": 983,
          "title": "Cloud Functions for firebaseでPrismaを使ってみる[Dockerでローカル開発環境構築]",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_97IJAvA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masamichhhi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Cloud%2520Functions%2520for%2520firebase%25E3%2581%25A7Prisma%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%255BDocker%25E3%2581%25A7%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjY4YjIwNzc2Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sprout2000/articles/1ee32fa0181870",
          "author": "sprout2000",
          "description": "TL;DR\nDocker Desktop （docker デーモン）を起動させておいて…\n\n      \n        zsh\n        % git clone git@github.com:sprout2000/cra.git\n% cd cra\n% docker-compose up cra\n\n\n      \n      localhost:3000 を開きましょう。これだけです。\n\n 手順\n\n 1. Docker のインストール\n公式ドキュメントに従ってインストールしましょう。\nhttps://docs.docker.com/docker-for-windows/inst...",
          "link": "https://zenn.dev/sprout2000/articles/1ee32fa0181870",
          "publishedOn": "2021-08-07T07:27:01.000Z",
          "wordCount": 803,
          "title": "Docker で React + TypeScript の開発環境構築 2021",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---LCMfgtW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sprout2000%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Docker%2520%25E3%2581%25A7%2520React%2520%252B%2520TypeScript%2520%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25202021%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTJmNmE2NTNmMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sqer/articles/2d4def0f07bf04c5cc47",
          "author": "sqer",
          "description": "DOM, Node, Elementについてそれぞれの違いを説明できますか？\nDOM\nNode\nElement\n実践！NodeをElementに変換する\nまとめ\nリンク\n\n\n DOM, Node, Elementについてそれぞれの違いを説明できますか？\nWeb開発において、これらをすべて「要素」として呼んで曖昧にしていると型定義などで詰まることがあります。\nこの３つの名称、実は明確な違いがあると知っていましたか？\nこれを期にマスターしましょう。\n\n DOM\nDOMは、「Document Object Model、つまりドキュメントを物として扱うモデル」のことを言います。\nDOMツリーと...",
          "link": "https://zenn.dev/sqer/articles/2d4def0f07bf04c5cc47",
          "publishedOn": "2021-08-07T06:05:15.000Z",
          "wordCount": 111,
          "title": "DOM, Node, Elementの違い",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--YuNCwLMu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sqer%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:DOM%252C%2520Node%252C%2520Element%25E3%2581%25AE%25E9%2581%2595%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWZmNzNmM2U4NS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuiseki/articles/5a3b418ca06581",
          "author": "yuiseki",
          "description": "Blitz.jsをインストールしてプロジェクトを生成する\n\n      \n        \n        npm install -g blitz --legacy-peer-deps\ncd blitz-hoge\n\n\n      \n      参考文献\n\nhttps://blitzjs.com/docs/get-started\nhttps://blitzjs.com/docs/tutorial\n\n\n\n db/schema.prisma を編集する\n注意点\n\nprismaのMongoDB対応はPreviewFeature\nCascading delete（リレーションを張った親モデル...",
          "link": "https://zenn.dev/yuiseki/articles/5a3b418ca06581",
          "publishedOn": "2021-08-07T02:18:30.000Z",
          "wordCount": 278,
          "title": "Blitz.js の prisma で MongoDB を使う！！！！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--kUqn1-m7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuiseki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Blitz.js%2520%25E3%2581%25AE%2520prisma%2520%25E3%2581%25A7%2520MongoDB%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g1akVIUkdJUFhyR0diNU8xMzdsMDZBT21lYUxIZ3gyWlE5RGpuUHdvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mizchi/articles/no-traspiled-typescript",
          "author": "mizchi",
          "description": "主張\n現代では、 npm に publish するものを除けば TypeScript をコンパイルして配布する必要はほぼないと考えています。\nTypeScript のコンパイルをしない環境、例えば deno や rome を使うと、コンパイルをするというステップが省くことで開発体験が大きく向上する、という肌感があり、ローカル環境ならこのメリットを優先するべきと考えています。\n基本的に、ビルドはフロントエンド/サーバーともに配布前の最後の一回だけでいいはず、というのが自分の主張です。\nhttps://github.com/denoland/deno\n\nRome Toolchain\nDe...",
          "link": "https://zenn.dev/mizchi/articles/no-traspiled-typescript",
          "publishedOn": "2021-08-06T08:23:18.000Z",
          "wordCount": 191,
          "title": "内部モジュールでは TypeScript をコンパイルせずに配る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sS1xWih6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mizchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2586%2585%25E9%2583%25A8%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%25AF%2520TypeScript%2520%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E9%2585%258D%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/januswel/articles/a54aedc09fe7bc",
          "author": "januswel",
          "description": "次の記事を見てなるほどと思ったものの、コンポーネント集作成の視点で書かれている。我々はアプリを作る機会が多いので、その際はどういう書き方が楽なのか、チームで共有するために類型を洗い出し、比較した。\nhttps://kray.jp/blog/dont-have-to-use-react-fc-and-react-vfc/\n\n TL;DR\n関数での書き方を覚えれば良いと判断した。\n\n      \n        \n        function MyComponent(props: React.PropsWithChildren<Props>) {\n  if (props.ti...",
          "link": "https://zenn.dev/januswel/articles/a54aedc09fe7bc",
          "publishedOn": "2021-08-06T05:05:29.000Z",
          "wordCount": 393,
          "title": "React コンポーネントの書き方をチームで統一する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r-zcfeH_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:januswel%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E7%25B5%25B1%25E4%25B8%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPWVhXdlBhLXJBNGJEd1V3Vnhfb0c2UmJnZUFQYnpNVllKMk1MPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "author": "yoshixj",
          "description": "vue3がリリースされてから、時間が立ちました。CompositionAPIはどれくらい使用されているのでしょうか。自分は新規開発をすることが多いので、小さいLPなども含めると5つくらいのプロジェクトをNuxt × CompositionAPIで作ってきました。\nそのなかで、CompositionAPIの体験がよいと思ったので軽く紹介します。\n\n CompositionAPIのメリット\nCompositionAPIと以前からあるOption APIの違いを説明するとなった時に以下のような図が用いられます。\n\n記述がまとまるということを示しているのですが、これがまとまったことで読みやすくな...",
          "link": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "publishedOn": "2021-08-04T23:09:36.000Z",
          "wordCount": 147,
          "title": "VueのCompositionAPIとgraphql-code-generatorの体験が良いので紹介したい。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EP4hHJAt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshixj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vue%25E3%2581%25AECompositionAPI%25E3%2581%25A8graphql-code-generator%25E3%2581%25AE%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OTRkNTdlOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/unemployed/articles/prettier-eslint",
          "author": "大学生だった.",
          "description": "最初に\n綺麗なコードを書きたいという事で、Stripe の API を試す環境（TypeScript と Express）に ESLint と Prettier を導入してコードを静的解析、整形出来る環境を作ろうと思う。\n\n node.js の環境構築\n今回も docker-compose を使ってサクッと作ろうと思う。docker じゃなく docker-compose を使う理由はポートをルーティングしたコンテナの起動等が docker-compose.yml に記述出来るので起動時のコマンドを省略出来るので使用している。単一のコンテナを利用する際でも便利だと思う。\n軽量な no...",
          "link": "https://zenn.dev/unemployed/articles/prettier-eslint",
          "publishedOn": "2021-08-04T06:11:36.000Z",
          "wordCount": 696,
          "title": "Dockerで立てたNode.js, TypeScript環境にESLintとprettierを導入して、VSCode保存でコード整形も行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ad-uJwRg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F.%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Docker%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%259FNode.js%252C%2520TypeScript%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABESLint%25E3%2581%25A8prettier%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581VSCode%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%2595%25B4%25E5%25BD%25A2%25E3%2582%2582%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzQ2NGViNWVkYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/daisukesasaki/articles/f18dd6554f94e3",
          "author": "daisuke sasaki",
          "description": "はい、やってみた系です。\n最近ずーっとInputばっかりだったのでやったこと書くか。。となった次第です。\nECSとか使ったことなかったので。（高いし。。）\n※お金は知らんうちに全然可愛くない金額になってるのでご利用は計画的に（RDSとかも使ってたけど１週で3000円弱くらいになってた。。）\n\n 最終構築のイメージ\n何章かに分けて作成していきますが、全部終わったらこうなるイメージ\n（今回はbackend編）\n\n\n 動作環境\n\nBigSur ver11.4\nMacBook Pro (13-inch, 2019, Two Thunderbolt 3 ports)\n1.4 GHz クアッドコ...",
          "link": "https://zenn.dev/daisukesasaki/articles/f18dd6554f94e3",
          "publishedOn": "2021-08-02T20:31:44.000Z",
          "wordCount": 912,
          "title": "Docker×FastAPI×React(TypeScript) on AWS ECS【backend】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Nz-MNjC0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:daisuke%2520sasaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Docker%25C3%2597FastAPI%25C3%2597React%2528TypeScript%2529%2520on%2520AWS%2520ECS%25E3%2580%2590backend%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYWZiMjI1NmFmZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "author": "kazuhe",
          "description": "はじめに\n型駆動開発とはどんなもので実践すると何が嬉しいのかを自分なりに理解するためにこの記事を書きます。\n2021年8月時点では「型駆動開発」でググっても意図した内容がヒットせず、「Type-Driven Development」と検索して英語の記事が何件かヒットする程度です。\n自分の「型駆動開発」に対しての理解・認識が世間一般のそれと相違がある場合もありますので、何か思うところがあればご指摘いただければ大変嬉しく思います。\nまた、この記事ではTypeScriptとVue.jsでフロントエンドのコードを書いていきます。TypeScriptは必須の前提ですがReactでも同じような考...",
          "link": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "publishedOn": "2021-08-02T15:54:16.000Z",
          "wordCount": 643,
          "title": "TypeScriptで型駆動開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--56npAWpa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhe%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMGEwMmEwNWExZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "author": "KenT",
          "description": "今回作ったもの\n作品はこちら\nコードはこちら\n\n 作った経緯\nContextAPIを使ってみたかった為\n\n コードの解説\n\n コンポーネントをAppContextに接続する\n\n      \n        \n        import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n\tconst { budget } = useContext(AppContext);\n\treturn (\n\t\t<d...",
          "link": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "publishedOn": "2021-08-02T08:31:47.000Z",
          "wordCount": 206,
          "title": "Next.js+Typescript+ContextAPIで予算トラッカーを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q6GyqDpi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252BTypescript%252BContextAPI%25E3%2581%25A7%25E4%25BA%2588%25E7%25AE%2597%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjg4ZDAyMTI0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukination/articles/e854062cea4920",
          "author": "Yukination",
          "description": "npm と比べて早いと話題の pnpm を使用してプロジェクトを新規作成したので備忘録として残します。\nこちら に公式が発表しているベンチマークの結果があります。\nnpm や yarn との違いはこちらの記事が分かりやすくてオススメです。\n\n node.js のバージョンを確認\n現在使用している Node.js のバージョンが 12 以上か？の確認を行います。\n\n      \n        \n        > node -v\nv16.4.2\n\n\n      \n      \n pnpm を新規インストール\nnpm を使用し pnpm のインストールを行います。\n\n      \n ...",
          "link": "https://zenn.dev/yukination/articles/e854062cea4920",
          "publishedOn": "2021-08-02T06:26:46.000Z",
          "wordCount": 189,
          "title": "pnpm + Vite + Vue + TypeScript で新規プロジェクトを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cZ8sw5ZO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yukination%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pnpm%2520%252B%2520Vite%2520%252B%2520Vue%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMmYxNDI0YTYxMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shztmk/articles/05_javascript-timezone",
          "author": "shztmk",
          "description": "予備知識\nJavaScript の Date オブジェクトは、時刻を実行環境のタイムゾーンで保持している、とみなすことができます。\nすなわち new Date('2020-01-01T09:00:00+09:00') としたとき\n\n実行環境が JST ならば 2020-01-01T09:00:00+09:00\n\n実行環境が UTC ならば 2020-01-01T00:00:00Z\n\n実行環境が EST ならば 2019-12-31T19:00:00-05:00\n\n\nとして保持していることになります。\n\n 懸念点\n2020-01-01T00:00:00+09:00 という文字列を受け取...",
          "link": "https://zenn.dev/shztmk/articles/05_javascript-timezone",
          "publishedOn": "2021-08-02T06:12:37.000Z",
          "wordCount": 311,
          "title": "Node.js/JST で時刻をやりとりするにあたって",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T-dGP0uj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shztmk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Node.js%252FJST%2520%25E3%2581%25A7%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODZiMTI4NjZkYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 390,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vim」のフィード",
      "feedUrl": "https://zenn.dev/topics/vim/feed",
      "siteUrl": "https://zenn.dev/topics/vim",
      "articles": [
        {
          "id": "https://zenn.dev/nyarla/articles/0a171145604993",
          "author": "にゃるら（テック系）",
          "description": "お前が思うんならそうなんだろう。お前ん中ではな\n\n\n 話の前提\n私は普段プログラミングやテキスト管理に NeoVim を使っていて、.vimrc （NeoVim だと init.vim）に色々な場面で必要になる設定や関数、あるいは機能拡張などを記述していました。\nしかし最初は機能ごとにファイルを分けたり init.vim を一つに統一したりと、色々と調整していたものの、どの方法も上手くファイルを整理するに至らず、\n\nさてどうしたもんかな……これは……\n\nと考え込んでいたところで、\n\nあ！ 試しに vim 組み込みのパッケージ管理機能を使ってみるか！\n\nと思いつき、実際にやってみたら結構...",
          "link": "https://zenn.dev/nyarla/articles/0a171145604993",
          "publishedOn": "2021-08-30T02:34:07.000Z",
          "wordCount": 120,
          "title": ".vimrc  を packadd で整理するとめっちゃ便利だった！",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zMnd6yXQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2583%25E3%2582%258B%25E3%2582%2589%25EF%25BC%2588%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E7%25B3%25BB%25EF%25BC%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:.vimrc%2520%2520%25E3%2582%2592%2520packadd%2520%25E3%2581%25A7%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E4%25BE%25BF%25E5%2588%25A9%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzk1NTc4MDJjOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/e4exp/articles/ee523772afa0e5",
          "author": "e4exp",
          "description": "前提\n\nColabはproプランでターミナルが使える\nブラウザ(Chrome)にVimiumという拡張が入っている\n普段はEscキーでvimのinsertモードから抜けているが，Vimiumが有効だとEscキーを押すとターミナル領域ごと閉じてしまう\n\n\n 解決方法\n\n\nctrl + cでinsertモードから抜けられる\n\nまたは\n\nVimiumを無効化する(特定urlのみ無効化もできる)\n\n\n 参考\n\n\nExit insert mode in Google Colab 2020",
          "link": "https://zenn.dev/e4exp/articles/ee523772afa0e5",
          "publishedOn": "2021-08-29T03:04:42.000Z",
          "wordCount": 25,
          "title": "Google Colabのターミナルでvimから抜けられないとき",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Amq6vPgd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:e4exp%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Colab%25E3%2581%25AE%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2581%25A7vim%25E3%2581%258B%25E3%2582%2589%25E6%258A%259C%25E3%2581%2591%25E3%2582%2589%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTk3MzRhZDA0Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/xxpiyomaruxx/articles/0661277cd1b2ab",
          "author": "ぴよまる",
          "description": "デフォルトのシェルだと色があまりついていないし、可愛くもなくてつらい気持ちになったのでかわいくします。dotfilesの存在は知っていたが何から触ればいいのやらな人向け。\n\n だいたい導入するもの\n\n\nfish\n\nbashとかzshの変わりに使う\nhistoryをGUIで見ることができたり、シンタックスハイライトをデフォルトでしてくれたり、入力補完をデフォルトでしてくれたりする\nなので設定めんどくさい人でも入れるだけでちょっとハッピー\n\n\n\ntmux\n\nターミナルのペインとか良い感じに分割したりセッション保存してくれたり\n\n\n\nneovim\n\nvimのすごいやつ\nいれなくても良い気はした...",
          "link": "https://zenn.dev/xxpiyomaruxx/articles/0661277cd1b2ab",
          "publishedOn": "2021-08-28T02:41:59.000Z",
          "wordCount": 208,
          "title": "fish, neovim, starshipあたりでめっかわ❤️ターミナルを用意する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vlAP7KSc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25B4%25E3%2582%2588%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:fish%252C%2520neovim%252C%2520starship%25E3%2581%2582%25E3%2581%259F%25E3%2582%258A%25E3%2581%25A7%25E3%2582%2581%25E3%2581%25A3%25E3%2581%258B%25E3%2582%258F%2520%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%259F%25E3%2583%258A%25E3%2583%25AB%25E3%2582%2592%25E7%2594%25A8%25E6%2584%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWE2ZDhjM2Y2MC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shougo/articles/ddc-vim-beta",
          "author": "Shougo",
          "description": "始めに\nここ数ヵ月力を入れてddc.vimの開発をしていて、ようやく一通りの機能がそろいました\nので、広くユーザーに使ってもらうフェーズに進めたいと考えています。\nユーザーからの要望やバグ報告に対応が終わってから正式版の1.0となりますのでよろし\nくお願いします。\n\n ddc.vim の特徴\n\n Vim8/neovim 両対応\ndeoplete.nvimでもvim-hug-neovim-rpcを用いることによりVimに対応していました。\nしかしインストールが煩雑になる、neovimと比較してパフォーマンスに問題がある、安\n定性への問題がありました。\nddc.vimではdenops.v...",
          "link": "https://zenn.dev/shougo/articles/ddc-vim-beta",
          "publishedOn": "2021-08-26T11:19:39.000Z",
          "wordCount": 392,
          "title": "新世代の自動補完プラグイン ddc.vim",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0Cdb6vk0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shougo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2596%25B0%25E4%25B8%2596%25E4%25BB%25A3%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E8%25A3%259C%25E5%25AE%258C%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%2520ddc.vim%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2llTXlqT3huMG12REN6SFFNMWZNeGlYd3Z4dmw5cVk1ZzVBN2lWPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/bun913/articles/f18e0d37ece27b",
          "author": "bun",
          "description": "なんちゃってvimmerのbunです。\n私は普段 nvim と VSCode をエディターとして利用しております。\nVSCodeに関しては neovim 拡張を利用しています。\n（使い始めるための記事を以前書きました）\nhttps://zenn.dev/bun913/articles/02785aed0ba50e\nvimにおいてファイル横断検索や置換をするには vimgrepを利用すれば良いのですが\nVSCodeのように自分で対象のファイルを選んだりするのを楽にしたいなぁ と考えておりました。\n↓以下のような形で。また、vimなのでマウスを使わずに使用したい\n\nなお私の環境は以下の通りで...",
          "link": "https://zenn.dev/bun913/articles/f18e0d37ece27b",
          "publishedOn": "2021-08-25T13:33:38.000Z",
          "wordCount": 145,
          "title": "nvimでVSCodeみたいなファイル横断検索・置換がしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gJsqSR3l--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:nvim%25E3%2581%25A7VSCode%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AA%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E6%25A8%25AA%25E6%2596%25AD%25E6%25A4%259C%25E7%25B4%25A2%25E3%2583%25BB%25E7%25BD%25AE%25E6%258F%259B%25E3%2581%258C%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzE0ZWEwMTIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yano/articles/vim_plugin_top_10",
          "author": "Yuki Yano",
          "description": "概要\n自分は普段Neovimを使って(主にTypeScriptでの)開発を行っています。\nNeovimでのTypeScript開発は環境を整えればVSCodeと遜色ない開発体験を得ることができると思っています。\nまた、Vimの操作に慣れれば一部の編集機能についてはVimの方が優れていると感じています。\nこの記事では自分の開発に欠かせないプラグイン10個を紹介しようと思います。\n\n プラグイン10選\n\nVimをIDE化するプラグイン coc.nvim\n\n様々な操作の起点に使うFuzzy Finder fzf-preview.vim\n\n高機能なファイラ fern.vim\n\nVim上でGi...",
          "link": "https://zenn.dev/yano/articles/vim_plugin_top_10",
          "publishedOn": "2021-08-23T12:02:20.000Z",
          "wordCount": 466,
          "title": "無人島に持っていく(Neo)vimプラグイン10選 (TS開発環境編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--gnVdjZCD--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuki%2520Yano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2584%25A1%25E4%25BA%25BA%25E5%25B3%25B6%25E3%2581%25AB%25E6%258C%2581%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%2528Neo%2529vim%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B310%25E9%2581%25B8%2520%2528TS%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liaDZMcy05WWRBbnZqZGtvMzJuTllGZEY3UThVWXE0N3kxNklhPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nazo6/articles/c2f16b07798bab",
          "author": "nz",
          "description": "Neovimには組み込みのLSPクライアントがあります。ちょっと前まではVSCode並の開発体験のためにはcocを使うのがベストな選択肢でしたが、neovim builtin lsp(以下nvim-lsp)でもエコシステムが整ってきており、かなりいい感じの支援機能が受けられます。この記事ではその設定などについて書いていこうと思います。\n\n 環境\n\nLinux (Windowsだと後述のlspinstallというプラグインが使えないのでおすすめできません。LSPを使うこと自体はできます。)\nNeovim 0.5\nVimscriptは使わずLuaで書きます\n\n\n 基本的な設定\n\n 必須プラグ...",
          "link": "https://zenn.dev/nazo6/articles/c2f16b07798bab",
          "publishedOn": "2021-08-21T14:33:34.000Z",
          "wordCount": 465,
          "title": "Neovim builtin LSP設定入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--L73F58UN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Neovim%2520builtin%2520LSP%25E8%25A8%25AD%25E5%25AE%259A%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hxcDBncFdKRUpUUWRWNkQxMWFtVWYxY1R6YnFUakVtX3hGT1Z5ZUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/bun913/articles/3c07695fe1474c",
          "author": "bun",
          "description": "何を作ったのか\nvimでTodo管理を便利にするための小さなプラグインです。\n\n新規タスクを作成する\nタスクの終了・未了をワンボタンで切り替えられる\n終了済みのタスクをまとめて、最終行に移動させる\n\nということをできるようにしました。\nhttps://github.com/bun913/min-todo.vim\n\n イメージ\nタスクの作成\n\nタスクの終了・未了を切り替え\n\n終了済みのタスクをまとめて移動\n\n\n 参考にしたサイト\n初めて作るvimプラグインですし、そもそもまともにvimスクリプトを書いたことがないためお作法がさっぱりわかりませんでした。\n以下のサイトを参考にさせていただ...",
          "link": "https://zenn.dev/bun913/articles/3c07695fe1474c",
          "publishedOn": "2021-08-18T12:34:06.000Z",
          "wordCount": 56,
          "title": "日常の作業改善のため超シンプルvimプラグインを作成した",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EmKvRNNy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:bun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%2597%25A5%25E5%25B8%25B8%25E3%2581%25AE%25E4%25BD%259C%25E6%25A5%25AD%25E6%2594%25B9%25E5%2596%2584%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E8%25B6%2585%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25ABvim%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzE0ZWEwMTIwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/altair/articles/9238308d2432c6",
          "author": "Altair",
          "description": "初めに\n技術記事を書きたいと思いつつ、気づけば直前の投稿から随分と時間が経ってしまいました。\n投稿しないでだらだらしているよりも、当たり前のことでも良いから記事を書こう！ということで最近触っているneovimのプラグインを紹介していきます。\n他にも良いプラグインがあるよ、等アドバイスをいただけるとうれしいです。（まだまだneovim始めてからそんなに触れてないです。）\n自分の入れているプラグインの紹介が終わったら、コメントに寄せてくれたプラグインを試して良さそうなものがあったらまた記事にしたいと思います。\nでは、前置きが長くなりましたがその第一弾をどうぞ！\n\n コードにコメントすると...",
          "link": "https://zenn.dev/altair/articles/9238308d2432c6",
          "publishedOn": "2021-08-15T13:57:51.000Z",
          "wordCount": 35,
          "title": "自分で使っているvimのプラグインを紹介していくよ - 第一弾",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6UcxX23H--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Altair%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%2587%25AA%25E5%2588%2586%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258Bvim%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2581%258F%25E3%2582%2588%2520-%2520%25E7%25AC%25AC%25E4%25B8%2580%25E5%25BC%25BE%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvYS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/vampire_yuta/articles/c4703f4232f16b",
          "author": "vampire_yuta",
          "description": "基本操作\n\n参照（https://knowledge.sakura.ad.jp/21687/）\n\n カーソル移動\nh → 左に移動\nj → 下に移動\nk → 上に移動\nl → 右に移動\ngg → 最初の行へ移動\nGG → 最後の行へ移動\nCtrl+f → 上へページスクロール\nCtrl+b → 下へページスクロール\nzz → カーソル位置を中央へ\n{ → 前の空行まで移動\n} → 次の空行まで移動\nw → 文字単位で次に移動\nW → 区切り文字なしで次の文字に移動\nb → 文字単位で前の文字に移動\nB → 区切り文字なしで前の文字に移動\n\n 進む戻る\nCtrl + r → 一つ前の操...",
          "link": "https://zenn.dev/vampire_yuta/articles/c4703f4232f16b",
          "publishedOn": "2021-08-04T16:28:43.000Z",
          "wordCount": 173,
          "title": "vim戦記 Part1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9fxunlOK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:vampire_yuta%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:vim%25E6%2588%25A6%25E8%25A8%2598%2520Part1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lmSGhYa3lqY2lHd2o1UzhPajZlNG9ydlVUUFFWRWtrVGtoSmJ4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kis9a/articles/vim-expand-link-to-text-link",
          "author": "kis9a",
          "description": "初めに\nVim では、リンクの上でgxをタイプすることで、ブラウザーでそのリンクを開くことができます。それを参考に、今回はカーソル下のリンクの<title>を取得して、テキストリンクに置き換える関数を書いてみました。単純ですが、個人的に markdown でメモを取る時や、参考 URL を書く時などに便利に使用しています。\n\n イメージ\n\nvim-expand-link-to-text-link\n\n 1.カーソル下のリンクを取得する。\nこれが、結構難しいと思っていましたが、案外簡単でした。\n\n      \n        \n        expand('<cfil...",
          "link": "https://zenn.dev/kis9a/articles/vim-expand-link-to-text-link",
          "publishedOn": "2021-08-02T01:24:44.000Z",
          "wordCount": 365,
          "title": "Vim script. カーソル下のリンクの<title>を取得して、テキストリンクに置き換える。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--scIfxkx8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kis9a%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vim%2520script.%2520%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E4%25B8%258B%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%253Ctitle%253E%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzkwNDg0MmI2My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vue.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/vue/feed",
      "siteUrl": "https://zenn.dev/topics/vue",
      "articles": [
        {
          "id": "https://zenn.dev/azukiazusa/articles/5a69cbcca75113",
          "author": "azukiazusa",
          "description": "結論\nオプションとしてcustomProperties:trueを渡します。\n\n      \n        \n        import Vue from 'vue'\nimport Vuetify from 'vuetify/lib'\n\nVue.use(Vuetify)\n\nexport default new Vuetify({\n  theme: {\n    themes: {\n      light: {\n        main: '#D7F9F1',\n        secondary: '#7AA095',\n      }\n    },\n    options: { cu...",
          "link": "https://zenn.dev/azukiazusa/articles/5a69cbcca75113",
          "publishedOn": "2021-08-27T09:54:35.000Z",
          "wordCount": 241,
          "title": "VuetifyのテーマをCSS変数として使用する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ka3j8SfY--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:azukiazusa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vuetify%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25BC%25E3%2583%259E%25E3%2582%2592CSS%25E5%25A4%2589%25E6%2595%25B0%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjgzYWY0MzVjZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/compiled_oz/articles/a8edecc6c39713",
          "author": "Oz",
          "description": "Vue.js is 何？\nVue.jsはシンプルなMVVM構造のプログレッシブフレームワークで、\nModel、View、ViewModelの３つでアプリケーションを構築する。\n\n データバインディング\nデータバインディングを行うにはテンプレートで使用する全てのデータはリアクティブデータとして定義する必要がある\n\n ディレクティブ\nvから始まるViewの要素に付加できる独自の属性のこと。\nv-if、v-show、v-for、v-model、v-bind、v-onなどがある。\nHTMLのクラスを動的に制御したり、イベントをハンドルできる。\n\nv-on:イベントハンドラ\nv-model:双...",
          "link": "https://zenn.dev/compiled_oz/articles/a8edecc6c39713",
          "publishedOn": "2021-08-27T05:53:53.000Z",
          "wordCount": 397,
          "title": "Vue.js入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---X8noaM3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Oz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue.js%25E5%2585%25A5%25E9%2596%2580%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2gxLTQ4QzBya1c5T3FFMHhJSHJvYU1MUGR6NTNwQUtBV0lNWmJnPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/c776ef1586eb40",
          "author": "おしうみなおき",
          "description": "vue.jsで非同期処理をまとめて処理したい場合があります。\n普通に1つ1つ処理を待つ場合は async - awaitで良いのですが、それだと1つずつしか処理できないので、どうしても処理が遅くなってしまいます。\nそんな時は、 Promise.all を使えば、複数の非同期処理をまとめて処理しつつ、全ての処理が完了したら次に行きますよー！というふうにできます。\n\n      \n        \n        // 非同期をまとめて処理する\nasync process() {\n    await Promise.all([\n        this.methodA(),\n\tthis.me...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/c776ef1586eb40",
          "publishedOn": "2021-08-26T23:52:48.000Z",
          "wordCount": 38,
          "title": "vueで非同期処理をまとめて処理する際のベストプラクティス",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--LfUlgPWb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue%25E3%2581%25A7%25E9%259D%259E%25E5%2590%258C%25E6%259C%259F%25E5%2587%25A6%25E7%2590%2586%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E5%2587%25A6%25E7%2590%2586%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AE%25E3%2583%2599%25E3%2582%25B9%25E3%2583%2588%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25AF%25E3%2583%2586%25E3%2582%25A3%25E3%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/moroshi/articles/24a8bd494ee67c",
          "author": "moroshi",
          "description": "はじめに\n\n 経緯\nSPA(single page application)をvue.js + vuetifyで作成し、Laravelを作成したAPIサーバーと連携する環境をよく構築する。\nそれと関連して、ちょっとしたクリーンな検証環境をサクッと作りたくなることがあるため、dockerでそれらしい環境を作成しようと思ったのがことの始まり。\n以下、\"それらしい環境\"の作成手順を残す。\n\n 前提\n環境や使うツールは以下のとおり\n\n 環境\n\nWindows 10 Pro 64bit\nDocker Desktop for Windows (on Hyper-V), Version 3.6.0...",
          "link": "https://zenn.dev/moroshi/articles/24a8bd494ee67c",
          "publishedOn": "2021-08-26T12:04:56.000Z",
          "wordCount": 844,
          "title": "vuetify v2の環境をDockerで気軽に作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--11VzaZxP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:moroshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vuetify%2520v2%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592Docker%25E3%2581%25A7%25E6%25B0%2597%25E8%25BB%25BD%25E3%2581%25AB%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZWYyODk0MjM2Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uedatakeyuki/articles/c42d7852b2a525",
          "author": "UedaTakeyuki",
          "description": "なにがしたいのか\n同じ単語の複数の辞書へのリンクみたいなページを作る時に\n\n大概の辞書って検索 URL にパラメタで単語を渡す感じの API なので\nfrontmatter で単語を宣言して\n\n      \n        \n        ---\npv: get in\n---\n\n\n      \n      あとは {{$frontmatter.pv}} とかで使い回せれば楽です\n\n ところが\n実際にやってみると、こんなリンクで\n\n[英辞郎](https://eow.alc.co.jp/search?q={{$frontmatter.pv}})\n\n一見、いい感じに見えるのですが\n\n全...",
          "link": "https://zenn.dev/uedatakeyuki/articles/c42d7852b2a525",
          "publishedOn": "2021-08-25T05:36:55.000Z",
          "wordCount": 51,
          "title": "vuepress でリンクの url に frontmatter を混ぜる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--O-IoV8CR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:UedaTakeyuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vuepress%2520%25E3%2581%25A7%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%2520url%2520%25E3%2581%25AB%2520frontmatter%2520%25E3%2582%2592%25E6%25B7%25B7%25E3%2581%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2o5Zzc0M0lsRjVqeVR6enRySTVUbHhqeTNqMzBFZlBaYmJCaEtoS2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/newburu/articles/7efb9d9f0658a8",
          "author": "にゅ〜ぶる",
          "description": "前回は、「rails new」のオプションでVueをインストールしました。\nhttps://zenn.dev/newburu/articles/e21629af475d69\nが・・・Vue2になるようで、Vue3を使うためには、手動でVue3のインストールが必要とのことでした。\nという事で、やり直します！！\n\n rails newでWebアプリケーションを作成\n前回同様、まずは「rails new」します。\n\n      \n        \n        $ rails new -d mysql hello-vue3\n$ rails db:create\n$ rails s\n\n\n    ...",
          "link": "https://zenn.dev/newburu/articles/7efb9d9f0658a8",
          "publishedOn": "2021-08-24T13:54:05.000Z",
          "wordCount": 176,
          "title": "RailsでHelloVue3!!!",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ELpypaBV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2585%25E3%2580%259C%25E3%2581%25B6%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Rails%25E3%2581%25A7HelloVue3%2521%2521%2521%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lTZVE3RGdOWUEyQ0hQWUFJalp1dGpxSHJIVHhTTjVoMVhZQWN4a3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nappa/articles/e201780237a81e",
          "author": "nappa",
          "description": "はじめに\n副業の開発で、決済システムに PAY.JP を導入することになり、クライアント向けのライブラリとして、カスタマイズがしやすい Payjp.js を使うことになった。\nしかし、副業の開発では Nuxt を使っており、良い感じに連携するドキュメントがなかったため、メモ代わりに残しておく。\n\n 使っている技術\n\nNuxt 2.15.3\n\nuniversal(ssr) モードを使用\n\n\n\n\n Payjp.js を読み込む\nPayjp.js は script タグで読み込ませるので nuxt.config.js に設定を追加する必要がある。\n下記の設定を追加して、<head&g...",
          "link": "https://zenn.dev/nappa/articles/e201780237a81e",
          "publishedOn": "2021-08-23T19:38:52.000Z",
          "wordCount": 158,
          "title": "Nuxt に Payjp.js を導入する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cNeNxkZ3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nappa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nuxt%2520%25E3%2581%25AB%2520Payjp.js%2520%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTgzZjQ1NjcwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/newburu/articles/e21629af475d69",
          "author": "にゅ〜ぶる",
          "description": "rails new でアプリケーションを作成する\nrails newには、Vueを簡単に使えるオプション--webpack=vueがあるので、それを指定してrails newします。\nDBもMySQLを使うので、-d mysqlも一緒に指定します。※--database=mysqlと同じです。\n\n      \n        \n        rails new -d mysql --webpack=vue hello-vue\n\n\n      \n      そして、いつもの起動するまでのコマンドをぽちぽち\n\n      \n        \n        rails db:creat...",
          "link": "https://zenn.dev/newburu/articles/e21629af475d69",
          "publishedOn": "2021-08-23T14:28:41.000Z",
          "wordCount": 62,
          "title": "Rails+VueでHello Vue！まで",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--1dN1a8ee--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2582%2585%25E3%2580%259C%25E3%2581%25B6%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Rails%252BVue%25E3%2581%25A7Hello%2520Vue%25EF%25BC%2581%25E3%2581%25BE%25E3%2581%25A7%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lTZVE3RGdOWUEyQ0hQWUFJalp1dGpxSHJIVHhTTjVoMVhZQWN4a3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sdkfz181tiger/books/363d20b1e591fc",
          "author": "しめじ",
          "description": "Vue.jsの導入からBMI計算機やTODOアプリの作り方までの手順をまとめていきます。\nこの本を読むにあたり、下記の2点について経験がありますと、より理解しやすい内容と思います。\n\n1. HTMLとCSSを使った事がある方\n2. JavaScriptをそれなりに使った事がある方",
          "link": "https://zenn.dev/sdkfz181tiger/books/363d20b1e591fc",
          "publishedOn": "2021-08-23T12:15:53.000Z",
          "wordCount": 14,
          "title": "Vue.jsをかじる本",
          "enclosure": {
            "url": "https://zenn.dev/images/logo-only-dark.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/udyest/articles/46b1fd84001663",
          "author": "udyest",
          "description": "navigator.online\n\nnavigator.onlineで、現在オンラインか否かを判定できます。\nオンライン状態ならtrue、オフライン状態ならfalseになります。\n\n      \n        \n        console.log(navigator.online)\n\n\n      \n      \n onlineイベント / offlineイベント\nnavigator.onlineは、あくまで現在のオンライン状態を取得するにすぎません。なので、「オンラインになったら何かをする」といった監視の処理はできません。\nオンライン状態を監視するには、onlineイベントと...",
          "link": "https://zenn.dev/udyest/articles/46b1fd84001663",
          "publishedOn": "2021-08-23T08:59:15.000Z",
          "wordCount": 207,
          "title": "[Vue3]オンラインか否かを判定・監視する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--y960TwCb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:udyest%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BVue3%255D%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%258B%25E5%2590%25A6%25E3%2581%258B%25E3%2582%2592%25E5%2588%25A4%25E5%25AE%259A%25E3%2583%25BB%25E7%259B%25A3%25E8%25A6%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzg0MjY0YTJiZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ynakamura/articles/8fab06bba527b5",
          "author": "yoshihiro nakamura",
          "description": "かれこれ４、５年くらいAtomic designに触れてきて、こんなに使いづらいのになんで使ってるんんだっけ？ってなったので、脳死と妥協のAtomic designを辞めたいというモチベを高め、重い腰を上げて考えてみました。\n\n 前提\n今回の趣旨はあくまでも共通コンポーネントにフォーカスしています。なのでpages(人によってはscreens,containersと命名しているかも)は考慮しません。\nまた、atomic designのデザインサイドの思想そのものについては言及しません。あくまでもディレクトリ構成の運用上の課題にフォーカスします。\n\n ディレクトリを分ける意味とは\nそもそも...",
          "link": "https://zenn.dev/ynakamura/articles/8fab06bba527b5",
          "publishedOn": "2021-08-23T08:29:33.000Z",
          "wordCount": 272,
          "title": "Atomic designを辞めて利用目的別のディレクトリ構成に移行する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--W5KlHrc_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshihiro%2520nakamura%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Atomic%2520design%25E3%2582%2592%25E8%25BE%259E%25E3%2582%2581%25E3%2581%25A6%25E5%2588%25A9%25E7%2594%25A8%25E7%259B%25AE%25E7%259A%2584%25E5%2588%25A5%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tokusuke/articles/e42e6d4d63618a",
          "author": "yosuke-dev",
          "description": "概要\n\nVue.jsのフォーム検証機能を実装するため、vuelidateを実装したお話です。\n\n\n2019年に社内LTで発表したものを編集して投稿した記事です。\n一部古い情報が残っている場合がございますので、ご留意ください。\n\n\n はじめに\n\n話さないこと\n\nVue.jsの導入\nVue 3.x での実例紹介\nカスタムバリデーションの方法\n\n\n話すこと\n\nvuelidateの導入\nコンポーネントへの実装\nVue 2.x での実例紹介\n\n\n\n\n 環境\n\nVue.js 2.x\nBootstrap 4.x\nnpm ?\n\n当時のバージョンのメモを失念してましたが、13.x だったと思います。\n...",
          "link": "https://zenn.dev/tokusuke/articles/e42e6d4d63618a",
          "publishedOn": "2021-08-23T02:33:18.000Z",
          "wordCount": 196,
          "title": "Vueにフォーム検証機能を実装する (vuelidate)",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6GavV-EQ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yosuke-dev%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%25AB%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E6%25A4%259C%25E8%25A8%25BC%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2520%2528vuelidate%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzNiZTg3YzI1Ny5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/0885e71f6f3609",
          "author": "おしうみなおき",
          "description": "複数の画像を一度にアップロードしたい場合があると思います。\nLaravel×Vue.jsで実際に試してみたので、メモがてら残しておきたいと思います。\nまずは、画像をアップロードするところのHTMLです\n\n      \n        \n        <template>\n  <div v-for=\"(file, index) in files\">\n    <label>ファイルを選択する</label>\n    <input type=\"file\" @change=\"onFileChange($event, file, index)...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/0885e71f6f3609",
          "publishedOn": "2021-08-22T23:45:51.000Z",
          "wordCount": 135,
          "title": "Vue.jsから複数の画像をLaravelに送り保存する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--_ZtBkSnn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue.js%25E3%2581%258B%25E3%2582%2589%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592Laravel%25E3%2581%25AB%25E9%2580%2581%25E3%2582%258A%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gz/articles/491b324570703a",
          "author": "walking_on_ice",
          "description": "HTMLのselectのように縦のすこし展開して、スクロールできるようにしたいです。\n説明より、コードを見ればわかる。\n\n      \n        \n        <v-list\n style=\"max-height: 150px\"\n class=\"overflow-y-auto\"\n...\n\n\n      \n      以下のようになります。\n\nvirtual-scrollbarがありますが、クリックする時の動きとか、振る舞いが気に入りませんでした。\n以上です。",
          "link": "https://zenn.dev/gz/articles/491b324570703a",
          "publishedOn": "2021-08-20T16:20:43.000Z",
          "wordCount": 13,
          "title": "vuetify/v-listを縦スクロールできるように",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--6h5X3kDs--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:walking_on_ice%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vuetify%252Fv-list%25E3%2582%2592%25E7%25B8%25A6%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTZhZjc2YmQ3Yy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yufushiro/articles/12d1db1f390f05",
          "author": "ゆふしろ",
          "description": "要約\nVue テンプレートのイベントハンドラーにおける .prevent modifier は $event.preventDefault() と等価なので、カスタムイベントであっても preventDefault メソッドさえ定義すれば使うことができる。\nおわり\n\n .prevent modifier とは\nVue テンプレートで a 要素などに対して @click.prevent=\"...\" のようにしてイベントハンドラーを書くと、その要素の click イベントにおけるデフォルトのアクションを抑制することができる。\n\n\n<a href=\"http://example.co...",
          "link": "https://zenn.dev/yufushiro/articles/12d1db1f390f05",
          "publishedOn": "2021-08-20T11:50:42.000Z",
          "wordCount": 247,
          "title": "Vueのカスタムイベントで .prevent する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--DqOGZgie--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2586%25E3%2581%25B5%25E3%2581%2597%25E3%2582%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2582%25A4%25E3%2583%2599%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25A7%2520.prevent%2520%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzQwMDU0NGFlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gz/articles/378ed050719e75",
          "author": "walking_on_ice",
          "description": "答え：\nmenu-propsを利用します。\nサンプル：\n\n      \n        \n        :menu-props=\"{nudgeRight: 10, nudgeTop: 20}\"\n\n\n      \n      ポップアップメニューの正体はv-menuですので、詳細はv-menuのAPIをご参照ください。\n※注意点：APIのほうでnudge-rightと書かれているもの、nudgeRightのように書き換えてください。",
          "link": "https://zenn.dev/gz/articles/378ed050719e75",
          "publishedOn": "2021-08-19T08:41:12.000Z",
          "wordCount": 12,
          "title": "vuetify/v-autocompleteのポップアップメニューの位置ずれ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ge3N-7D_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:walking_on_ice%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vuetify%252Fv-autocomplete%25E3%2581%25AE%25E3%2583%259D%25E3%2583%2583%25E3%2583%2597%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25A1%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2581%25AE%25E4%25BD%258D%25E7%25BD%25AE%25E3%2581%259A%25E3%2582%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTZhZjc2YmQ3Yy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ojk/books/intro-to-vue",
          "author": "OJK",
          "description": "文系学科の大学生を対象としたpetite-vueの入門書です。petite-vueはJavaScriptベースのウェブアプリ開発（フロントエンド開発）のフレームワークのひとつで、素のJavaScriptでコーディングするよりも完結に記述することができます。OJKの担当している授業テキストを公開しているものです。",
          "link": "https://zenn.dev/ojk/books/intro-to-vue",
          "publishedOn": "2021-08-15T12:08:25.000Z",
          "wordCount": 9,
          "title": "文型大学生のためのpetite-vue入門",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--e0FB1U6l--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci9kMThjNzg1NDNkLmpwZw==%2Cw_200/v1627283836/default/og-base-book_yz4z02.jpg",
            "length": "0",
            "type": "image/jpeg"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/b6f679bfe11261",
          "author": "ryo_kawamata",
          "description": "先日初めて真面目に自分のコードを OSS として公開する機会があり、色々試行錯誤したのでまとめます。\n\n「真面目に」の基準は過去に自分が公開したリポジトリに比べてです 🙏\n\n\n 何を公開した？\nVue Word Highlighter という Vue.js のコンポーネントライブラリを公開しました。\n機能はとても単純で、文字列と検索クエリを渡すと検索クエリに合致した文字をハイライトする（<mark>タグ又は任意のタグ囲む）というものです。\nhttps://github.com/kawamataryo/vue-word-highlighter\n自分なりに良い感じに使えるコンポー...",
          "link": "https://zenn.dev/ryo_kawamata/articles/b6f679bfe11261",
          "publishedOn": "2021-08-15T11:16:02.000Z",
          "wordCount": 279,
          "title": "真面目にOSSを公開する際にやってみたこと・意識したこと",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JpAp0yXP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%259C%259F%25E9%259D%25A2%25E7%259B%25AE%25E3%2581%25ABOSS%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E9%259A%259B%25E3%2581%25AB%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%25E3%2583%25BB%25E6%2584%258F%25E8%25AD%2598%25E3%2581%2597%25E3%2581%259F%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryuji_cre8ive/articles/2c998bc7010975",
          "author": "ryuji_cre8ive",
          "description": "結論\nwatchを使用してstoreのloginを監視して変更があった段階でリンクを書き換える。\n\n 具体的に\n\n      \n        \n        computed: {\n    islogin(){\n      return this.$store.state.login.islogin\n    }\n  },\n  watch: {\n    islogin() {\n      this.$nextTick(() => {\n        this.items[0].link = `/${this.islogin.id}/top`;\n        this.ite...",
          "link": "https://zenn.dev/ryuji_cre8ive/articles/2c998bc7010975",
          "publishedOn": "2021-08-14T06:45:35.000Z",
          "wordCount": 46,
          "title": "nuxtでログイン処理後の動的リンク作成",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AHWh0rTR--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuji_cre8ive%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:nuxt%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2587%25A6%25E7%2590%2586%25E5%25BE%258C%25E3%2581%25AE%25E5%258B%2595%25E7%259A%2584%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E4%25BD%259C%25E6%2588%2590%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hKUHROdS15cGNUUERTNUdxMnB0M09YeXpDbDZmdVlBMmF4bjFoTnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/t28_tatsuya/articles/define-custom-element-with-nested-vue-components",
          "author": "Tatsuya Yamamoto",
          "description": "何この記事？\n\nVue3.2 で Vue Component を Web Components にする defineCustomElement が提供された。\n\n<style>を持つ SFC を子要素以下にもつ SFC を Web Components 化する場合、現行(v3.2.1)の機能では追加で作業が必要。\n\n\n\n defineCustomElement\nref. Vue and Web Components - Building Custom Elements with Vue\nVue v3.2.0 の新機能として defineCustomElement が提供されま...",
          "link": "https://zenn.dev/t28_tatsuya/articles/define-custom-element-with-nested-vue-components",
          "publishedOn": "2021-08-14T04:49:01.000Z",
          "wordCount": 376,
          "title": "Vue3.2のdefineCustomElementで子要素のSFCのstyleも含めてWebComponents化する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Qzj-7Yj5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Tatsuya%2520Yamamoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vue3.2%25E3%2581%25AEdefineCustomElement%25E3%2581%25A7%25E5%25AD%2590%25E8%25A6%2581%25E7%25B4%25A0%25E3%2581%25AESFC%25E3%2581%25AEstyle%25E3%2582%2582%25E5%2590%25AB%25E3%2582%2581%25E3%2581%25A6WebComponents%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dBa3ZyVG8tZTFKR0Z2NFY5X0JKTnNDSnVXMi1pZ2F3Y1pqZFExPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uedayou/articles/c1e76684d3d094",
          "author": "uedayou",
          "description": "JavaScriptでWebアプリを開発する場合、最近は Node.js や Deno、各フレームワーク毎にCLIツール(create-react-app、Vue CLI、Vite、Angular CLI)を使って環境構築することが一般的かと思います。\n少し複雑なWebアプリを作るには必須ですが、本当にちょっとしたWebアプリを作りたい場合には面倒だったりします。\nそこで、これらの環境構築が必要のないWebアプリを作ってみることにしました。幸い、Vue.jsや、UIフレームワークのVuetifyなどは従来通りscriptタグでファイルをロードする形でも動いてくれるようなので、CDNからV...",
          "link": "https://zenn.dev/uedayou/articles/c1e76684d3d094",
          "publishedOn": "2021-08-14T02:01:05.000Z",
          "wordCount": 1305,
          "title": "CDN版Vue.jsとオープンデータでお手軽マッシュアップ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--BMEjhtvW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uedayou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CDN%25E7%2589%2588Vue.js%25E3%2581%25A8%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25A7%25E3%2581%258A%25E6%2589%258B%25E8%25BB%25BD%25E3%2583%259E%25E3%2583%2583%25E3%2582%25B7%25E3%2583%25A5%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjE1ODQxMjJlMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/0f0e5d0224439e",
          "author": "おしうみなおき",
          "description": "ローカルストレージに値をセットしたり、ローカルストレージから値を取得したりしたいことがあったので、試して記事に残してみました。\n\n はじめに\n通常ローカルストレージには機密情報は保存してはいけません。\n僕の場合は永続的に保存したい設定値を保存する際に用いる事が多いです。← 設定値は別に流出されても全然何の問題もないような情報です。\nローカルストレージに機密情報を保存してはいけない理由はJavaScriptから参照できてしまうからです。XSS脆弱性を代表に、JavaScriptを用いてローカルストレージやCookieから情報を抜き取られる可能性がないとはいい切れません。安全の為にローカルス...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/0f0e5d0224439e",
          "publishedOn": "2021-08-13T00:41:44.000Z",
          "wordCount": 32,
          "title": "vue.jsからローカルストレージの値を操作する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--FIkXMT5z--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue.js%25E3%2581%258B%25E3%2582%2589%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/umatoma/articles/a819fd622d4743",
          "author": "umatoma",
          "description": "flutter-study.dev\n「Flutterで始めるアプリ開発」というWebサイトを公開している。\nもともとはGatsbyでSSGしていたが、Vueを使う必要が出てきたので、勉強がてらNuxtJSへと移行してみた。\nhttps://www.flutter-study.dev/\n\n Markdownで記事を書く\nGatsbyの時は@rocketseat/gatsby-theme-docsを使っていて、Markdownで各記事を書いていた。\nhttps://github.com/Rocketseat/gatsby-themes/tree/main/@rocketseat/gats...",
          "link": "https://zenn.dev/umatoma/articles/a819fd622d4743",
          "publishedOn": "2021-08-11T15:08:33.000Z",
          "wordCount": 206,
          "title": "GatsbyからNuxtJSに移行してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zb42cUsd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:umatoma%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Gatsby%25E3%2581%258B%25E3%2582%2589NuxtJS%25E3%2581%25AB%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lNVVdLY3dwaGFRMV91eUlQWWEwcy1udE1qeFVYQTNZYWFlLW5XPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kon_karin/articles/1b5f282ba64bd3",
          "author": "こんかりん",
          "description": "Nuxt.js の components プロパティとは\nNuxt.js v2.13から導入された components プロパティは、コンポーネントのスキャンと自動インポートをしてくれます。\ncomponents プロパティ - NuxtJS\nつまり、コンポーネントを使う時に import 文と components オプションを書く必要がなくなります。\n\n      \n        nuxt.config.js\n        export default {\n  components: true,\n}\n\n\n      \n      \n      \n        pages/...",
          "link": "https://zenn.dev/kon_karin/articles/1b5f282ba64bd3",
          "publishedOn": "2021-08-10T11:26:05.000Z",
          "wordCount": 192,
          "title": "Nuxtのcomponentsプロパティを使ったら単体テストでエラーになる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--bNc48V9r--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2582%2593%25E3%2581%258B%25E3%2582%258A%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nuxt%25E3%2581%25AEcomponents%25E3%2583%2597%25E3%2583%25AD%25E3%2583%2591%25E3%2583%2586%25E3%2582%25A3%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E5%258D%2598%25E4%25BD%2593%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25A7%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDU5ZDU2M2Q0YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tentel/articles/040a0251dab79f",
          "author": "てんてる",
          "description": "Ionicでリストの並び替えを実装する場合に利用可能な、Reorderコンポーネントの使い方まとめ\n\n 基本情報\n\n props\n\n\n\nprops名\n型\n初期値\n説明\n\n\n\n\ndisabled\nboolean\ntrue\n並び替えを禁止するかどうか。\n\n\n\n\n emit\n\n\n\nemit名\n戻り値\n説明\n\n\n\n\nionItemReorder\nEvent\n並び替えを完了させるために呼ぶ必要があるイベント。戻り値のEventの中にcompleteメソッドがあり、completeメソッドを呼び出すことで並び替えが完了する。呼び出さない場合は、並び替えが完了せずにフリーズする。\n\n\n\n戻り値の中身\n...",
          "link": "https://zenn.dev/tentel/articles/040a0251dab79f",
          "publishedOn": "2021-08-08T07:19:13.000Z",
          "wordCount": 230,
          "title": "【Ionic×Vue】並び替え(Reorder)リストの作り方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tqJygrZ9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A6%25E3%2582%2593%25E3%2581%25A6%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Ionic%25C3%2597Vue%25E3%2580%2591%25E4%25B8%25A6%25E3%2581%25B3%25E6%259B%25BF%25E3%2581%2588%2528Reorder%2529%25E3%2583%25AA%25E3%2582%25B9%25E3%2583%2588%25E3%2581%25AE%25E4%25BD%259C%25E3%2582%258A%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzlhMGRmYzE4ZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gaomar/articles/12c8664058638b",
          "author": "がおまる",
          "description": "GAZEPASSというパスワードレスでログイン認証するシステムを使ってみました。\n端末にある生体認証機能を使って認証する仕組みです。生体認証が無いデバイスは顔認証することができます。\n※現在はbeta版なので無料で使えますが、今後は 有料化 になる可能性がありますのでご注意ください。\n\n お試し環境\n下記からどういうものか動かすことができます。\nhttps://www.katacoda.com/gaomar/scenarios/gazepass-handson-playground\n\n 1. API Keysを作成しよう\nGAZEPASSサイトにアクセスしてアカウントを発行します。\n\n ...",
          "link": "https://zenn.dev/gaomar/articles/12c8664058638b",
          "publishedOn": "2021-08-06T01:39:20.000Z",
          "wordCount": 220,
          "title": "パスワードレス認証サービスGAZEPASSを使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zO5WVjPA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2581%258A%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9GAZEPASS%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hQR0w0Ml90M2dMSDhRS3hoVVBWR2VrWXdmZW9aSF9ueS1Za3lGTHlvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/masakitm/articles/6b5e31549c03d9",
          "author": "masakitm",
          "description": "この資料について\nこの資料はVue2.0で動くプロダクトでVue Composition APIについて簡単に解説し、関心をもってもらうために用いた際のものです。\n対象読者は以下を想定しています。\n\nVueのOption API（今までの書き方）をさわったことがある\nReact Hooksの経験がない\n\nより詳細な知識は公式ドキュメントよりご参照ください。\n\n Vue 3系のコンポジションapi について\n\n ってなんですか\n\n今までとは違う書式でvueを書ける記法\n今後主流になりそう\nreactのhooks apiに強く影響をうけている\nhttps://ja.reactjs.org...",
          "link": "https://zenn.dev/masakitm/articles/6b5e31549c03d9",
          "publishedOn": "2021-08-05T03:18:54.000Z",
          "wordCount": 505,
          "title": "最低限わかるVue Composition API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0sYnjhnO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masakitm%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BVue%2520Composition%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/toshimarnie/articles/c7cb99994075a3",
          "author": "Toshifumi Imanishi",
          "description": "はじめに\nSass の公式ドキュメントで 2020 年 10 月に LibSass の利用は非推奨 になり、Dart Sass の利用を推奨しています。そんな折、筆者が所属するフロントエンド開発チームでは LibSass を利用しており Dart Sass へ移行を進めました。本稿は LibSass から Dart Sass の移行についてご紹介します。本移行時の Dart Sass のバージョンは 1.32.7 になります。\n\nLibSass の非推奨は『継続的にメンテナンスをするが、将来的に追加予定の CSS および Sass の新機能の互換性を担保しない』という意味になります。...",
          "link": "https://zenn.dev/toshimarnie/articles/c7cb99994075a3",
          "publishedOn": "2021-08-05T02:49:11.000Z",
          "wordCount": 284,
          "title": "現場のフロントエンド開発環境を Dart Sass へマイグレーションする覚書",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HJ5UN6Qt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Toshifumi%2520Imanishi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%2520Dart%2520Sass%2520%25E3%2581%25B8%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmI0NDQwYjgxNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "author": "yoshixj",
          "description": "vue3がリリースされてから、時間が立ちました。CompositionAPIはどれくらい使用されているのでしょうか。自分は新規開発をすることが多いので、小さいLPなども含めると5つくらいのプロジェクトをNuxt × CompositionAPIで作ってきました。\nそのなかで、CompositionAPIの体験がよいと思ったので軽く紹介します。\n\n CompositionAPIのメリット\nCompositionAPIと以前からあるOption APIの違いを説明するとなった時に以下のような図が用いられます。\n\n記述がまとまるということを示しているのですが、これがまとまったことで読みやすくな...",
          "link": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "publishedOn": "2021-08-04T23:09:36.000Z",
          "wordCount": 147,
          "title": "VueのCompositionAPIとgraphql-code-generatorの体験が良いので紹介したい。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EP4hHJAt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshixj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vue%25E3%2581%25AECompositionAPI%25E3%2581%25A8graphql-code-generator%25E3%2581%25AE%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OTRkNTdlOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/koushikagawa/articles/d253bb1afc591f",
          "author": "koushikagawa",
          "description": "vue と vue-server-renderer で version mismatch\n先日Nuxtプロジェクトで npm run dev を実行した際に、下記エラーが表示されました。\n\n      \n        \n         ✖ Nuxt Fatal Error  \n Error:    \n Vue packages version mismatch:   \n - vue@2.6.11    \n - vue-server-renderer@2.6.14    \n This may cause things to work incorrectly. Make sure t...",
          "link": "https://zenn.dev/koushikagawa/articles/d253bb1afc591f",
          "publishedOn": "2021-08-03T03:14:35.000Z",
          "wordCount": 182,
          "title": "Vue packages version mismatch:   エラーを確認 -> 解消する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---yMDuN-M--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koushikagawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vue%2520packages%2520version%2520mismatch%253A%2520%2520%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%2520-%253E%2520%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEUWtHdVNnSnE4dEdNUzFOY2tESTl2dHZkLXdvYU5SYlpLazM1c3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "author": "kazuhe",
          "description": "はじめに\n型駆動開発とはどんなもので実践すると何が嬉しいのかを自分なりに理解するためにこの記事を書きます。\n2021年8月時点では「型駆動開発」でググっても意図した内容がヒットせず、「Type-Driven Development」と検索して英語の記事が何件かヒットする程度です。\n自分の「型駆動開発」に対しての理解・認識が世間一般のそれと相違がある場合もありますので、何か思うところがあればご指摘いただければ大変嬉しく思います。\nまた、この記事ではTypeScriptとVue.jsでフロントエンドのコードを書いていきます。TypeScriptは必須の前提ですがReactでも同じような考...",
          "link": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "publishedOn": "2021-08-02T15:54:16.000Z",
          "wordCount": 643,
          "title": "TypeScriptで型駆動開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--56npAWpa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhe%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMGEwMmEwNWExZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukination/articles/e854062cea4920",
          "author": "Yukination",
          "description": "npm と比べて早いと話題の pnpm を使用してプロジェクトを新規作成したので備忘録として残します。\nこちら に公式が発表しているベンチマークの結果があります。\nnpm や yarn との違いはこちらの記事が分かりやすくてオススメです。\n\n node.js のバージョンを確認\n現在使用している Node.js のバージョンが 12 以上か？の確認を行います。\n\n      \n        \n        > node -v\nv16.4.2\n\n\n      \n      \n pnpm を新規インストール\nnpm を使用し pnpm のインストールを行います。\n\n      \n ...",
          "link": "https://zenn.dev/yukination/articles/e854062cea4920",
          "publishedOn": "2021-08-02T06:26:46.000Z",
          "wordCount": 189,
          "title": "pnpm + Vite + Vue + TypeScript で新規プロジェクトを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cZ8sw5ZO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yukination%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pnpm%2520%252B%2520Vite%2520%252B%2520Vue%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMmYxNDI0YTYxMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 390,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}
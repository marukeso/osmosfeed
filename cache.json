{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "JSer.info",
      "feedUrl": "http://jser.info/rss",
      "siteUrl": "https://jser.info/",
      "articles": [
        {
          "id": "https://jser.info/2021/08/03/yarn3-chrome93-beta-deprecate-alert/",
          "author": null,
          "description": "JSer.info #551 - Yarn 3.0がリリースされました。\nYarn 3.0 🚀🤖 Performances, ESBuild, Better Patches, ... - DEV Community 👩‍💻👨‍💻\nberry/CHANGELOG.md at master · yarnpkg/berry\nNode.js 10のサポート終了、.pnp.cjsにリネーム、@yarnpkg/pnpifyを3つのパッケージに分解などの変更を含んでいます。\n@yarnpkg/sdks: Editor SDKs\n@yarnpkg/pnpify: PnPと互換性のないツールを実行するツール\n@yarnpkg/nm: node_modules linker\nまた、 exportsフィールドのサポート、pnpmライクなハードリンクのサポート、シェル構文のサポート改善、 ESBuildでのbundleをサポートする@yarnpkg/esbuild-plugin-pnpの追加なども含まれています。\nChrome 93 betaがリリースされました。\nChromium Blog: Chrome 93: Multi-Screen Window Placement, PWAs as URL Handlers, and More\nOrigin TrialとしてCOEPの導入をより手軽にするためのCross-Origin-Embedder-Policy：credentialless、URL Handlersの追加などが含まれています。\nAbortSignal.abort()メソッドのサポート、Stage 3のError causeとObject.hasOwnのサポートも含まれています。\nダークモード対応などではCSSのprefers-color-scheme media quer…",
          "link": "https://jser.info/2021/08/03/yarn3-chrome93-beta-deprecate-alert/",
          "publishedOn": "2021-08-03T03:38:52.000Z",
          "wordCount": 574,
          "title": "2021-08-03のJS: Yarn 3.0、Chrome 93 beta、cross origin iframeでのalert/prompt/confirmを削除"
        },
        {
          "id": "https://jser.info/2021/07/27/vscode-js-debug-privacy-sandbox-timeline/",
          "author": null,
          "description": "JSer.info #550 - vscode-js-debugはVSCodeからブラウザのデバッガーに接続し、JavaScriptをデバッグするVSCode拡張です。\nEasier browser debugging with Developer Tools integration in Visual Studio Code - Microsoft Edge Blog\nmicrosoft/vscode-js-debug: The VS Code JavaScript debugger\nvscode-js-debugは、ChromeやMSEdgeなどのブラウザのデバッガーに接続できます。\nDebug Adapter Protocol(DAP)という、開発ツール(VScodeなど)とデバッガー(ブラウザやNodeなど)を中継するAdapterを利用しています。\nDAPはLanguage Server Protocol(LSP)似た形のもので、開発ツールと各種言語の中継となるプロトコルを定めています。\nPrivacy Sandbox TimelineというサイトでGoogleのPrivacy Sandboxと呼ばれるthird-party cookiesを廃止するためのProposal集に関するロードマップが公開されています。\nPrivacy Sandboxの各Proposalごとにどのようなスケジュールで、実装やテストをしていくかの予定が公開されています。\nちいさな Web ブラウザを作ってみようでは、Rustでウェブブラウザを作りつつ、ブラウザのレンダリングの仕組みやセキュリティについて学習する教材が公開されています。\n現時点ではWIP(Working In Progress)な章もありますが、小さなブラウザをつくりつつブラウザの内部構造について学ぶのが目的となっています。…",
          "link": "https://jser.info/2021/07/27/vscode-js-debug-privacy-sandbox-timeline/",
          "publishedOn": "2021-07-27T12:52:36.000Z",
          "wordCount": 447,
          "title": "2021-07-27のJS: vscode-js-debug、 Privacy Sandbox Timeline、小さなブラウザの作り方"
        },
        {
          "id": "https://jser.info/2021/07/20/node.js-16.5.0whatwg-stream-npm-7.20.0npm-pkg-ember-4/",
          "author": null,
          "description": "JSer.info #549 - Node.js 16.5.0がリリースされました。\nNode v16.5.0 (Current) | Node.js\n16.5.0では試験的に、WHATWGで仕様策定されウェブブラウザに実装されているWHATWG Streams APIが実装されました。(stream/web)\nNode.js Stream APIがありますが、これとは異なる実装です。\nNode.js StreamとWHATWG Streamの違いについては次のドキュメントにも書かれています。\nstreams/FAQ.md at main · whatwg/streams\nNode.jsでWHATWG Streamを実装している理由としてはQUIC/HTTP3のサポートなどが挙げられています。\nHTTP/3 support · Issue #38478 · nodejs/node\nまた、Node.js StreamとWHATWG Streamの棲み分けや相互運用性については次のIssueで議論されています。\nFuture of streams · Issue #39093 · nodejs/node\nnpm 7.20.0がリリースされました。\nRelease v7.20.0 · npm/cli\nnpm 7.20.0では、package.jsonの任意のフィールドを読み書きできるnpm pkgコマンドが追加されています。\nfeat: npm pkg by ruyadorno · Pull Request #3487 · npm/cli\nThe Road to Ember 4.0という記事では、Ember 4のロードマップが公開されています。\nEmber 4は2021年9月20日にリリース予定としています。\nそれぞれのマイグレーションガイドも公開されています。\nEmber.js…",
          "link": "https://jser.info/2021/07/20/node.js-16.5.0whatwg-stream-npm-7.20.0npm-pkg-ember-4/",
          "publishedOn": "2021-07-20T02:16:58.000Z",
          "wordCount": 460,
          "title": "2021-07-20のJS: Node.js 16.5.0(WHATWG Stream)、npm 7.20.0(`npm pkg`)、Ember 4のロードマップ"
        },
        {
          "id": "https://jser.info/2021/07/14/firefox-90-npm-audit-access-guide/",
          "author": null,
          "description": "JSer.info #548 - Firefox 90がリリースされました。\nFirefox 90.0, See All New Features, Updates and Fixes\nFirefox 90 for developers - Mozilla | MDN\nFirefox 90ではECMAScript Proposal Stage 4のPrivate class fieldsをデフォルトでサポート、Stage 3のString/Arrayのat()をサポートしています。FTPサポートの削除、WheelEventの互換性を改善なども含まれています。\nまた、Chromeでも実装されていたFetch metadata request headersが実装されています。\nSec-Fetch-Site、Sec-Fetch-Mode、Sec-Fetch-User、Sec-Fetch-Destのリクエストヘッダがそれぞれのリクエストに追加され、サーバ側でのチェックに利用できます。\nFirefox 90 supports Fetch Metadata Request Headers - Mozilla Security Blog\nProtect your resources from web attacks with Fetch Metadata\nFetch metadata request headersはSafariとIE以外のブラウザで実装されています。\nnpm audit: Broken by Design — Overreactedという記事では、create-react-appを例に npm audit で報告される脆弱性の問題について書かれています。\n報告される脆弱性の殆どはReDOSとなっていて、devDependenciesとして扱うツールにおいてはfalse…",
          "link": "https://jser.info/2021/07/14/firefox-90-npm-audit-access-guide/",
          "publishedOn": "2021-07-14T03:24:13.000Z",
          "wordCount": 480,
          "title": "2021-07-14のJS: Firefox 90、npm auditの問題、Access Guide"
        }
      ]
    },
    {
      "title": "Zennの「Next.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nextjs/feed",
      "siteUrl": "https://zenn.dev/topics/nextjs",
      "articles": [
        {
          "id": "https://zenn.dev/dl10yr/articles/021c1b0fc2ec35",
          "author": "dl10yr",
          "description": "最重要なこと\nGA4ではなくユニバーサルアナリティクスのプロパティ（UA-始まりのID）を使うこと！ (2021年8月4日現在、私調べ）\n\n      \n        \n        [AmpAnalytics <unknown id>] No triggers were found in the config. No analytics data will be sent.\n\n\n      \n      GA4のIDでは動きませんでした...\nhttps://github.com/ampproject/amphtml/issues/30903\n\n 実装方針\nAMP対...",
          "link": "https://zenn.dev/dl10yr/articles/021c1b0fc2ec35",
          "publishedOn": "2021-08-05T12:11:57.000Z",
          "wordCount": 349,
          "title": "Nextjs AMPモードで Google Analyticsを動かしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--icwAepSq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nextjs%2520AMP%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%2520Google%2520Analytics%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuyakato/articles/d35b185d36a33b",
          "author": "Yuya Kato",
          "description": "目次\n\nInsightFaceとFastAPIで顔検出サーバを作ってみた\nInsightFaceの顔検出結果をNext.jsで可視化してみた\nInsightFaceで顔認証（特徴量抽出、比較）してみた（本記事）\n\n\n 初めに\n前回、前々回と、InsightFaceを使った顔検出の例を紹介しました。\n今回は、InsightFaceを使って顔認証（Face Recognition）を試してみたいと思います。\n\n 顔認証とは\n顔認証とは:\n\n提示された画像に含まれている顔が、事前に登録されているどの顔に一番近いか？\n2つの顔画像、顔Aと顔Bはどれだけ類似しているか？\n\nみたいなことを調べる...",
          "link": "https://zenn.dev/yuyakato/articles/d35b185d36a33b",
          "publishedOn": "2021-08-03T13:48:56.000Z",
          "wordCount": 185,
          "title": "InsightFaceで顔認証（特徴量抽出、比較）してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--wRi6u_dX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:InsightFace%25E3%2581%25A7%25E9%25A1%2594%25E8%25AA%258D%25E8%25A8%25BC%25EF%25BC%2588%25E7%2589%25B9%25E5%25BE%25B4%25E9%2587%258F%25E6%258A%25BD%25E5%2587%25BA%25E3%2580%2581%25E6%25AF%2594%25E8%25BC%2583%25EF%25BC%2589%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSUhmX2JGaE1tcVp0aDNYQUI2NFY0aGRnNlJWbE5CbjVhZmQzdXc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/laiso/articles/8c619c38bd7b7b",
          "author": "laiso",
          "description": "AWS Amplify ConsoleでNext.jsのプロジェクトをデプロイすると Serverless Next.js Component のインテグレーションによってAWS Lambda リソースが最大4つ作成される(ソースコードはエクスポートできる)\n\nDefault Lambda@Edge for Next CloudFront distribution\nAPI Lambda@Edge for Next CloudFront distribution\nImage Lambda@Edge for Next CloudFront distribution\nNext.js Regen...",
          "link": "https://zenn.dev/laiso/articles/8c619c38bd7b7b",
          "publishedOn": "2021-08-02T15:13:59.000Z",
          "wordCount": 130,
          "title": "Serverless Next.js Component のISR実装を読み解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--oGF5KW1F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:laiso%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Serverless%2520Next.js%2520Component%2520%25E3%2581%25AEISR%25E5%25AE%259F%25E8%25A3%2585%25E3%2582%2592%25E8%25AA%25AD%25E3%2581%25BF%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDhlOThiNTFhNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "author": "KenT",
          "description": "今回作ったもの\n作品はこちら\nコードはこちら\n\n 作った経緯\nContextAPIを使ってみたかった為\n\n コードの解説\n\n コンポーネントをAppContextに接続する\n\n      \n        \n        import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n\tconst { budget } = useContext(AppContext);\n\treturn (\n\t\t<d...",
          "link": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "publishedOn": "2021-08-02T08:31:47.000Z",
          "wordCount": 206,
          "title": "Next.js+Typescript+ContextAPIで予算トラッカーを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q6GyqDpi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252BTypescript%252BContextAPI%25E3%2581%25A7%25E4%25BA%2588%25E7%25AE%2597%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjg4ZDAyMTI0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sota_yamaguchi/articles/b0e8aa63b4bb84",
          "author": "sota_yamaguchi",
          "description": "Next.js の Layout 周りのドキュメントが新しく追加されました。\nhttps://nextjs.org/docs/basic-features/layouts\n\n 単一のレイアウトを扱う場合\n単一のレイアウトで十分な場合はカスタマイズした <Layout/> で <Component /> タグを囲むだけで実装できます。\n\n      \n        \n        // pages/_app.js\n\nimport Layout from '../components/layout'\n\nexport default function MyApp({...",
          "link": "https://zenn.dev/sota_yamaguchi/articles/b0e8aa63b4bb84",
          "publishedOn": "2021-08-01T08:05:54.000Z",
          "wordCount": 132,
          "title": "Next.js にレイアウトに関するドキュメントが追加されました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0wpd0ew4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sota_yamaguchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25E3%2581%25AB%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25A2%25E3%2582%25A6%25E3%2583%2588%25E3%2581%25AB%25E9%2596%25A2%25E3%2581%2599%25E3%2582%258B%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2581%258C%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjBjYWExZWI3Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/umireon/articles/2e6add9aa34dbb",
          "author": "Kaito Udagawa",
          "description": "たった一つの理由\nnext start （npm run start） の実装にNode.jsでHTTPサーバーを提供される場合に標準的に使用されるexpressが使用されていないからです。（httpモジュールは実装が低レベルすぎるので直接使用するべきではありません）\n\n 長い理由\n\n Next.jsのドキュメントに書いてあるよ？\nNext.jsのドキュメントにはnext startが（一応）プロダクションデプロイに使えるよと書いてあります。\nhttps://nextjs.org/docs/deployment#nodejs-server\nだから、next startを本番で使うこと...",
          "link": "https://zenn.dev/umireon/articles/2e6add9aa34dbb",
          "publishedOn": "2021-07-31T01:59:53.000Z",
          "wordCount": 60,
          "title": "next startを本番に使用すべきではないたった一つの理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--tzboDPTv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kaito%2520Udagawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:next%2520start%25E3%2582%2592%25E6%259C%25AC%25E7%2595%25AA%25E3%2581%25AB%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2581%25B9%25E3%2581%258D%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A3%25E3%2581%259F%25E4%25B8%2580%25E3%2581%25A4%25E3%2581%25AE%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lJR21KSDFPTjlGd28wMTczcnE3bU1xWmNSZVpScEU0YkVSa1dwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/thim/articles/e16dd195fdee816a868c",
          "author": "thim",
          "description": "https://docs.aws.amazon.com/amplify/latest/userguide/server-side-rendering-amplify.html\n以下、公式ドキュメントより引用\n\nWhen you deploy a new Next.js app with Amplify, by default Amplify uses the most recent supported version of Next.js. Currently, Amplify supports Next.js version 11.\n\n\nAmplify で新しい Next.js アプリ...",
          "link": "https://zenn.dev/thim/articles/e16dd195fdee816a868c",
          "publishedOn": "2021-07-30T10:40:41.000Z",
          "wordCount": 211,
          "title": "AmplifyでNext.js11系がサポート対象となりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--mUVQeuVo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:thim%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amplify%25E3%2581%25A7Next.js11%25E7%25B3%25BB%25E3%2581%258C%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E5%25AF%25BE%25E8%25B1%25A1%25E3%2581%25A8%25E3%2581%25AA%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDQwMTY2ZjMyOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fasdfas/articles/839bfc5160a81e",
          "author": "Naoya",
          "description": "Noteboxとは\nNoteboxは、「Jupyter Notebookを一瞬でブログ化」がコンセントのサービスです。それ以外はこちらのZennやQiitaと同じようなブログサービスですが、Jupyter Notebookを使う人、つまりデータサイエンスなどのサイエンス領域に特化したプラットフォームです。→https://notebox.jp\n動画は↓\nhttps://www.youtube.com/watch?v=IWcUbVnQxkw\n\n Noteboxができたきっかけ\n実は最初はまったく別のプロダクトを作っていました。そのプロダクト上で、Djangoで作ったCMSがあり、「Ju...",
          "link": "https://zenn.dev/fasdfas/articles/839bfc5160a81e",
          "publishedOn": "2021-07-30T06:22:29.000Z",
          "wordCount": 55,
          "title": "「JupyterNotebookを一瞬で記事にするプラットフォーム」Noteboxの現在の技術スタック",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--M4NeiyDo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Naoya%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%258CJupyterNotebook%25E3%2582%2592%25E4%25B8%2580%25E7%259E%25AC%25E3%2581%25A7%25E8%25A8%2598%25E4%25BA%258B%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2588%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2580%258DNotebox%25E3%2581%25AE%25E7%258F%25BE%25E5%259C%25A8%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTRlMWJjZmE5Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hiro4hiro4/articles/a19d1f5c9b6eab",
          "author": "Hiro",
          "description": "TypeScriptを書くようになって約6ヶ月経ちました。以前は下記のような書き方をしていましたが、最近新たにプロジェクトを作るとこの書き方では ts(2339) エラーが発生するようになりました。\nなぜそのエラーが発生するかの原因はまだ掴めていないのですが、取り急ぎこちらを解決する方法を調べたのでまとめます！\n初投稿＆走り書きとなるので今後新たな知見を得たらカイゼンしていこうと思います。\n\n エラーの内容\n\n与えられた型にcountプロパティが存在しません！\n\n as をつかって型を与える方法\n\n      \n        CountProvider.tsx\n        impo...",
          "link": "https://zenn.dev/hiro4hiro4/articles/a19d1f5c9b6eab",
          "publishedOn": "2021-07-29T17:54:22.000Z",
          "wordCount": 256,
          "title": "TypeScript & Context APIのdefaultValueの書き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b0opxlDx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:TypeScript%2520%2526%2520Context%2520API%25E3%2581%25AEdefaultValue%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuyakato/articles/e96b9d8ec289cc",
          "author": "Yuya Kato",
          "description": "初めに\n先日、InsightFaceとFastAPIを使った顔検出サーバを実装し、「InsightFaceとFastAPIで顔検出サーバを作ってみた」という記事を書きました。\n先の記事の中では検出結果として数値が出力されているだけで、どのような結果なのかが確認しづらい状態でした。\n今回はその結果を、Next.jsを使って可視化してみたいと思います。\nなお本記事には、Next.js自体に関する説明は一切ありません。ご了承ください。\n\n 実行例\n文章で説明するよりも実行例を見た方が早いと思うので、女性1人、男女2人ずつが写った画像の認識結果を以下に示します。\nなお、画像はぱくたそから以下...",
          "link": "https://zenn.dev/yuyakato/articles/e96b9d8ec289cc",
          "publishedOn": "2021-07-28T17:07:20.000Z",
          "wordCount": 117,
          "title": "InsightFaceの顔検出結果をNext.jsで可視化してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o6yX6bk3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuya%2520Kato%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:InsightFace%25E3%2581%25AE%25E9%25A1%2594%25E6%25A4%259C%25E5%2587%25BA%25E7%25B5%2590%25E6%259E%259C%25E3%2582%2592Next.js%25E3%2581%25A7%25E5%258F%25AF%25E8%25A6%2596%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUSUhmX2JGaE1tcVp0aDNYQUI2NFY0aGRnNlJWbE5CbjVhZmQzdXc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/choo/articles/84f41ad249c1dd",
          "author": "choo",
          "description": "個人開発で 賃貸物件検索サービス Comfy を作りました。\n先週、リリース後の告知ツイートをしたのですが、幸いなことに多くの人にリツイート・いいねの反響を頂きました（リアクションして頂いた方、本当にありがとうございます…!!!）\n\nこの記事では、Comfy のシステム構成及び使用した技術・サービスを紹介します。\n\n システム構成\n\n図の通り、システムは大きく 3 つに分けられます。\n\nフロントエンド\nバックエンド\nスクレイピング基盤\n\n上記 3 つのサブシステムについて、使用している技術をそれぞれ述べます。\n\n フロントエンド\nComfy は一切ページ遷移のない SPA（Single ...",
          "link": "https://zenn.dev/choo/articles/84f41ad249c1dd",
          "publishedOn": "2021-07-28T09:27:04.000Z",
          "wordCount": 248,
          "title": "個人開発した賃貸物件検索サービスのシステム構成と使用技術",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--pNASw_Gv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:choo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2580%258B%25E4%25BA%25BA%25E9%2596%258B%25E7%2599%25BA%25E3%2581%2597%25E3%2581%259F%25E8%25B3%2583%25E8%25B2%25B8%25E7%2589%25A9%25E4%25BB%25B6%25E6%25A4%259C%25E7%25B4%25A2%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2581%25AE%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A8%25E4%25BD%25BF%25E7%2594%25A8%25E6%258A%2580%25E8%25A1%2593%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjQ5NWI1MTMyNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/thim/articles/04775c68d796445f3c90",
          "author": "thim",
          "description": "Next.js アプリを Amplify にデプロイする際に環境変数の設定方法でつまづいたので記事にしておきます。\n\n クライアントサイドで扱う環境変数\nクライアントサイド、つまりはブラウザで実行されるソースから参照する環境変数は Amplify コンソールから設定します。\n\nソースからは以下のように参照可能で非常に簡単です。\n\n      \n        \n        const TEST = process.env.NEXT_PUBLIC_TEST;\n\n\n      \n      \n サーバーサイドで扱う環境変数\nサーバーサイド、つまりは SSR する場合に参照する環境変数はn...",
          "link": "https://zenn.dev/thim/articles/04775c68d796445f3c90",
          "publishedOn": "2021-07-27T12:47:14.000Z",
          "wordCount": 62,
          "title": "Amplify+Next.js 環境変数設定方法まとめ",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GOmg4J1w--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:thim%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amplify%252BNext.js%2520%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E8%25A8%25AD%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDQwMTY2ZjMyOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "author": "Yuku Kotani",
          "description": "Nuxt.js で開発されていたAI受診相談ユビーのフロントエンドを Next.js で作り直しました。\nまだまだ仮説検証を繰り返すフェーズのスタートアップのため、機能開発を止めて一気に置き換えることはできず、機能ごとに少しずつ置き換えてリリースをしました。結果、5人のプロダクト開発チームによる機能開発と並走して、全体の移行を1人で1ヶ月の短期間で終わらせることができたので、その意思決定や過程、工夫を紹介します。\n\n詳細な設計を話すと長くなるため別の機会として、この記事では移行についてのみ書きます。\n\n\nNext.js と Nuxt.js が似ていて読みにくいので、区別のために Nuxt...",
          "link": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "publishedOn": "2021-07-26T10:08:53.000Z",
          "wordCount": 312,
          "title": "150万MAUのNuxt.js製サービスを機能開発を止めずに1ヶ月&1人でNext.jsに置き換えた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--DH5GJ0ks--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuku%2520Kotani%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:150%25E4%25B8%2587MAU%25E3%2581%25AENuxt.js%25E8%25A3%25BD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2581%259A%25E3%2581%25AB1%25E3%2583%25B6%25E6%259C%2588%25261%25E4%25BA%25BA%25E3%2581%25A7Next.js%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEQVVDNDRXNTlSbWgyMjVIR2ZycENZQmRlNUJNZ0VCaDl3TGY0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mktbsh/articles/376f4558bca196",
          "author": "mktbsh",
          "description": "CatNoseさんのJSでツイートを埋め込むときのベストプラクティスの記事を参考に複数ツイート読み込みを実現しようとしていました。\n\n 上記の記事からの変更点\n基本はCatNoseさんの記事にまとまってるので、どのように変更したかだけ記載します。\n（とりあえず、動くようにしただけなのでパフォーマンス最適化されてるか否かは未計測です...！）\n\nスニペットは利用せず、widgets.jsを読み込むように変更\nuseEffectの利用をやめました\nnext/scriptのScriptコンポーネントを使うようにしました\n\nというわけでこうなった。\n\n 実装\n\n      \n         p...",
          "link": "https://zenn.dev/mktbsh/articles/376f4558bca196",
          "publishedOn": "2021-07-25T15:03:00.000Z",
          "wordCount": 118,
          "title": "Next.jsで複数ツイートを埋め込みたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--HEbxR5bc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mktbsh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2583%2584%25E3%2582%25A4%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E5%259F%258B%25E3%2582%2581%25E8%25BE%25BC%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWY0MTVhNDA1OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tetsuyanh/articles/1ed9acd834723f",
          "author": "tetsuyanh",
          "description": "Next.jsがSSGで静的ページをプリレンダーして高速化してくれるのは大変ありがたいですが、クライアント側のセッション読み書きをほんの少しだけ使いたい時ってありますよね。\nuseContextはまだしもReduxとか、いやそんな大事にはしたくないんです。\nクライアント側で発火するuseEffectでなんとかできないものか。\n\n 要件\nタグを持っているカードの一覧ページがあって、そこでタグの絞り込みができる。\nこのページに戻ってきた時に、先ほど指定したタグが適用されていて欲しい。\nrouter.back()などで戻ってきたりすることもあって、クエリパラメータ云々はできない。\n\n Befo...",
          "link": "https://zenn.dev/tetsuyanh/articles/1ed9acd834723f",
          "publishedOn": "2021-07-25T07:35:19.000Z",
          "wordCount": 119,
          "title": "Next.jsでちょっとだけsessionStorageを使わせて",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--rhnqvdR5--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tetsuyanh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25A7%25E3%2581%25A1%25E3%2582%2587%25E3%2581%25A3%25E3%2581%25A8%25E3%2581%25A0%25E3%2581%2591sessionStorage%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259B%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hURVVIMWktT1pjRkF4OW9NS19lcVQ0Q2FWRm9xajdQSFVsNkZ1NUZ3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mo_ri_regen/articles/install-tailwind-article",
          "author": "モーリー",
          "description": "Nextjsにtailwindcssを入れてから実際に使えるようにするまでの流れをみていきます。\n公式ではnpmを使っているのでyarnでインストールしていこうと思います。\n\n 前提\nNode.js 12.13.0以降をインストールしている\n\n インストール方法\n\n\nインストール\nターミナルを開いて下記のように入力します。\n\n      \n        \n        yarn add -D tailwindcss@latest postcss@latest autoprefixer@latest\n\n\n      \n      \n\ntailwind.config.js と postc...",
          "link": "https://zenn.dev/mo_ri_regen/articles/install-tailwind-article",
          "publishedOn": "2021-07-25T05:00:32.000Z",
          "wordCount": 134,
          "title": "Nextjsにtailwindcssをインストールしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--nxGPp4ip--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nextjs%25E3%2581%25ABtailwindcss%25E3%2582%2592%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTE4MDU3NTdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mktbsh/articles/f2880ae7058187",
          "author": "mktbsh",
          "description": "昨年、GA4がリリースされた時は使えなかったような気がしたDebugViewが使えるようになっていたので、試してみました。\n業務での利用だと検証環境用と本番環境用などでGAのプロパティ・トラッキングIDを分けていることがほとんどだと思いますが、個人レベルで触る分にはID一つで使えたほうが楽なので、これで楽できる...！\n\n DebugViewとは\n[GA4] デバッグモードでイベントをモニタリングする\nこんな感じでリアルタイムにイベント等を確認できます。\nFirebaseではAndroid, iOSアプリ向けで使っていて便利だったのでWebでも使いたいと思っていました。\n\n\n Next....",
          "link": "https://zenn.dev/mktbsh/articles/f2880ae7058187",
          "publishedOn": "2021-07-25T01:55:54.000Z",
          "wordCount": 186,
          "title": "GA4（Web）でDebugViewが使えるようになっていたので試してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qzUr_qTZ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mktbsh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GA4%25EF%25BC%2588Web%25EF%25BC%2589%25E3%2581%25A7DebugView%25E3%2581%258C%25E4%25BD%25BF%25E3%2581%2588%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWY0MTVhNDA1OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "author": "だむは",
          "description": "Notion Blogでブログを開設しました\nちょっと前になりますが、Notion Blogでsisterのブログを開設したので、開設するまでの流れを書いてみようと思います。\n▼sisterのブログはこちらです↓\nhttps://blog.sisterwith.com/\n▼ Notion Blogはこちらです↓\nhttps://notion-blog.vercel.app/\n▼ 参考記事はこちらです↓\nhttps://blog.35d.jp/2020-05-23-notion-blog-1\n\n Notion Blogとは\nNotion Blog とは、Notion（バックエンド）で作...",
          "link": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "publishedOn": "2021-07-24T13:06:29.000Z",
          "wordCount": 274,
          "title": "【Notion】Notion Blogでブログ開設〜10分でできるもん〜（デプロイ〜ローカル環境構築まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4mMAgDe---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2582%2580%25E3%2581%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Notion%25E3%2580%2591Notion%2520Blog%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E9%2596%258B%25E8%25A8%25AD%25E3%2580%259C10%25E5%2588%2586%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2582%25E3%2582%2593%25E3%2580%259C%25EF%25BC%2588%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%259C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzk2NmZiMTdiNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "author": "dl10yr",
          "description": "こちらを参考にさせていただきながら（なぞりながら）やってみました。詳しい解説はこちらの方が良いです。\nhttps://sunday-morning.app/posts/2020-12-25-next-js-10-tailwind-2-hybrid-amp\n\n まずはNext.js × Tailwind.cssの環境構築\n以前自分が作ったコマンドを調整して（storybookを外して）環境構築を行いました。\nhttps://zenn.dev/dl10yr/articles/0e31819e983a28\n\n      \n        \n         git clone -b not-i...",
          "link": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "publishedOn": "2021-07-23T13:53:31.000Z",
          "wordCount": 299,
          "title": "Next.js × Tailwind.cssでAMP対応させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zK9HZAU_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25C3%2597%2520Tailwind.css%25E3%2581%25A7AMP%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ihsan/articles/506510db3ba233",
          "author": "マレーシア人のイサン",
          "description": "BEYONDMAGのマガジンサイトに連載と特集機能の画像アップロードを実装したときに、気づいたメモです。\n\n\n 前提🙇🏽‍♂️\n本記事は、コーディングの仕方を教えるよりかは、ベストプラクティスを教えます。\n画像アップロードのコーディングを学びたい人はこの記事を参考にしてください。\n\n 初めに🏁\n\n「画像を更新する時ってどうやるんだろう？」 という疑問持っている人いっぱいいますよね？\n僕もその一人です😅。\n\n 僕が知っている画像の更新方法🙋🏽\n僕が知っている画像の更新方法は二つあります🤔\n\n 1. 同じURLを使用し、画像の中身だけ変える方法\n\n\nつまり画像をS3に同じURLかつ違う画像の...",
          "link": "https://zenn.dev/ihsan/articles/506510db3ba233",
          "publishedOn": "2021-07-23T10:01:09.000Z",
          "wordCount": 48,
          "title": "「NEXTJS / S3 画像アップロード」画像を更新する時にこれやっちゃダメ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5XFlpAxc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A2%25E4%25BA%25BA%25E3%2581%25AE%25E3%2582%25A4%25E3%2582%25B5%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%258CNEXTJS%2520%252F%2520S3%2520%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2580%258D%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AB%25E3%2581%2593%25E3%2582%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2583%2580%25E3%2583%25A1%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDdDdnajdUQW5kZDREaWFfX1oxYkx4YzZTYVc0TklVWTFPSS1IZ2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kaibuki0315/articles/39fe0e38f6635e",
          "author": "かわみつ",
          "description": "今回は認証サーバとしてLaravelを使った場合を想定したOAuth2の認可コードフローに基づいた認証機能の実装をしていきます。\nNext.jsでは認証を楽に作れるNextAuthというライブラリがあるので、今回はそれを使っていきますが、NextAuthはパスワードなしの認証(Passwordless Authentication)を推奨しているということもあり、OAuth2の認可コードフロー実装に関する情報が少ないように思えたので備忘録も兼ねて記事として残してみます。\n今回Laravel側で認証基盤を実装するためのものとしてLaravel Passportを使います。\nOAuthで定義...",
          "link": "https://zenn.dev/kaibuki0315/articles/39fe0e38f6635e",
          "publishedOn": "2021-07-21T12:59:55.000Z",
          "wordCount": 732,
          "title": "Next.js + TypeScript + Laravel Passportで実装するOAuth2認証",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--HpUOSroa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%258F%25E3%2581%25BF%25E3%2581%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%2520%252B%2520TypeScript%2520%252B%2520Laravel%2520Passport%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258BOAuth2%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTk5NmU1N2I4OC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hokaccha/articles/887e1af361faa8",
          "author": "hokaccha",
          "description": "https://github.com/hokaccha/electron-template-2021\n作ったので公開しておくが、こういうテンプレートはメンテしないとすぐ腐ってしまうけどメンテするモチベーションも特にないのでスナップショットという意味合いも込めて2021をつけている。\n\n electron-next\nベースに electron-next というのを使っていて、これがけっこうよくできていた。やっていることはシンプルで、レンダラプロセスに Next.js を使っていて、開発時は Next.js のサーバーを起動し、production build では next export ...",
          "link": "https://zenn.dev/hokaccha/articles/887e1af361faa8",
          "publishedOn": "2021-07-20T14:58:32.000Z",
          "wordCount": 262,
          "title": "Electron アプリのテンプレート 2021",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4FBoJrGv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hokaccha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Electron%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25202021%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpYWctanVyZUl3Q21TY0ZpclkwaUo0eXppaGZYekxOc1RfejZNX3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nshiro/articles/49b0c7b5fabef5",
          "author": "nshiro",
          "description": "Laravel 作成者の Taylor さんより、Next.js スターターキットがリリースされました。\nhttps://twitter.com/taylorotwell/status/1417148351506681859\nhttps://github.com/taylorotwell/next-example-frontend\nhttps://github.com/taylorotwell/next-example-backend\nTaylor さん個人のリポジトリなので、Laravel 公式という訳では無いですが、まぁ、Laravel 作成者の方ですからね。半分公式と言えなくはない...",
          "link": "https://zenn.dev/nshiro/articles/49b0c7b5fabef5",
          "publishedOn": "2021-07-20T07:16:47.000Z",
          "wordCount": 41,
          "title": "Laravel 非公式（半分公式？）な Next.js スターターキット登場",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--W-oCjHNV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nshiro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Laravel%2520%25E9%259D%259E%25E5%2585%25AC%25E5%25BC%258F%25EF%25BC%2588%25E5%258D%258A%25E5%2588%2586%25E5%2585%25AC%25E5%25BC%258F%25EF%25BC%259F%25EF%25BC%2589%25E3%2581%25AA%2520Next.js%2520%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%25E7%2599%25BB%25E5%25A0%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODU5NTMxMmFlNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "author": "白雀",
          "description": "Next + typescript で i18n 対応し、SSR、SSG を行う example\n本項では、Next を使用して i18n 対応(SSR, SSG)を方法を解説します。\n\n 記事の要約\n\n\nnext-i18nextを使うとi18nextを使用して、SSR、SSG を比較的手軽に行う事ができる\n\nreact-i18nextは typescript 対応を行っているので、.d.tsでネームスペースごとに追加の定義を行うと便利\n\n参考\n\n\ni18n 対応時はnext-seoが便利\n\ni18n 対応していない場合も便利\ni18n 対応時はalternatesの設定をきちんとす...",
          "link": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "publishedOn": "2021-07-19T10:11:01.000Z",
          "wordCount": 801,
          "title": "Next + typescript で i18n対応し、SSR、SSGを行うexample",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--w9oO3BM3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%2599%25BD%25E9%259B%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next%2520%252B%2520typescript%2520%25E3%2581%25A7%2520i18n%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2580%2581SSR%25E3%2580%2581SSG%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODcyNGZlMmIxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "author": "15",
          "description": "まえがき\nこのあたりを参考に環境構築をしたが、そのままでは動かない or 好みに変えたい部分があったので自分の手順を作ってみた。\n詳しい手順の理解が必要であればリンク先を参照してほしい。\nhttps://zenn.dev/66ed3gs/articles/99aa613a86f21f\nhttps://zenn.dev/januswel/articles/402774d76424e71ac906\n\n create-next-app\nts版で実行する。\n\n      \n        \n        npx create-next-app --ts sample-app\ncd samp...",
          "link": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "publishedOn": "2021-07-18T04:27:20.000Z",
          "wordCount": 104,
          "title": "Next.js 開発環境構築メモ 2021年7月版 - Yarn, TypeScript, ESLint, Prettier, VSCode",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JOauVqs9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:15%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2583%25A1%25E3%2583%25A2%25202021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2520-%2520Yarn%252C%2520TypeScript%252C%2520ESLint%252C%2520Prettier%252C%2520VSCode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "author": "minguu",
          "description": "はじめに\nこの記事では, Firebase Authentication を使って TypeScript を使用した Next アプリに Google ログインを実装する方法を記述します.\nJavaScript を使用した Next アプリに Google ログインを実装する方法はこちらに記述しています.\nこの記事が他の人の参考になれば幸いです.\nまた, この記事の内容に間違った記載がありましたら, 指摘してもらえるとありがたいです.\n\n 環境\n\n\n\n名前\nバージョン\n\n\n\n\nmacOS Big Sur\n11.4\n\n\nNode.js\n16.4.1\n\n\nTypeScript\n4.3.5...",
          "link": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "publishedOn": "2021-07-18T00:16:08.000Z",
          "wordCount": 542,
          "title": "Next.js（TypeScript）で Firebase を利用し, Google ログインを",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZjMUES8F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minguu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25EF%25BC%2588TypeScript%25EF%25BC%2589%25E3%2581%25A7%2520Firebase%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%252C%2520Google%2520%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lMaU1RSm1OSlUyZXBOWldpcWpTOTV6eXBVeFQxSDRjU2FVVUNvbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/aiji42/articles/1de8f9ea7b8a10",
          "author": "aiji42",
          "description": "https://twitter.com/aiji42_dev/status/1415711986608795648?s=20\n\n\nWhy Next.js\n私は、業務でもプライベートでも Next.js を使っています。\nNext.js は \"Zero Config\" をうたっているわけですが、実際業務で使うとなると、なかなか Zero とはいきません。IE11用にトランスパイルが必要になったり、ソースマップのアップロードのために webpack の拡張が必要なるケースにおいては、next.config.js のカスタマイズが必要になります。\nそういったカスタマイズをサポートし、設定のスト...",
          "link": "https://zenn.dev/aiji42/articles/1de8f9ea7b8a10",
          "publishedOn": "2021-07-17T14:43:03.000Z",
          "wordCount": 364,
          "title": "【Next.js】みんな next.confing.js にどんなプラグイン入れてる？",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--0yXqxaFf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:aiji42%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2581%25BF%25E3%2582%2593%25E3%2581%25AA%2520next.confing.js%2520%25E3%2581%25AB%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTczOGQyOGQwMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "author": "Yuuya Miyamae",
          "description": "Firebase AppCheck 導入\n\n 対応サービス\n\nRealtime Database\nCloud Storage\nCloud Functions (callable functions)\n\n\n 前提\nFirebase のプロジェクト作成まで完了している\n\n 1. reCAPTCHA 登録\nhttps://www.google.com/recaptcha/admin/create\n\n以下の情報を登録\n\nラベル\nreCAPTCHA タイプ: \"reCAPTCHA v3\" を選択\nドメイン: ドメイン設定\n\n\n 2. コンソール画面からAppCheck登録\nhttps://co...",
          "link": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "publishedOn": "2021-07-15T19:54:35.000Z",
          "wordCount": 108,
          "title": "Firebase: AppCheck 導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--oTNttJXm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuuya%2520Miyamae%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%253A%2520AppCheck%2520%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjYyY2JiMzAyYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "author": "Eringi_V3",
          "description": "フロントエンドアプリケーションの開発を行う上で避けては通れないデータフェッチの実装。\nREST APIを使うか、GraphQLを使うか、クライアントでキャッシュするか、APIレスポンスにどのようにして型を付けるか、状態管理はどうするのかなど、開発者の悩みが尽きないけれども、それに関しての設計を考えたり議論を行うのはフロントエンド開発の楽しいポイントだと僕は思っています。\nこの記事では、バックエンドにHasura、フロントエンドにNext.jsを使用する場合に僕が最強だと感じたツールの組み合わせ・使い方を紹介します。\n\n モチベーション\n\nAPIからのレスポンスにはTypeScriptの型...",
          "link": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "publishedOn": "2021-07-15T15:16:24.000Z",
          "wordCount": 768,
          "title": "ぼくのかんがえたさいきょうのデータフェッチ 2021Summer🏄‍♂️【Next.js / Hasura】",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--82ifwyxV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Eringi_V3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2581%25BC%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25E3%2582%2593%25E3%2581%258C%25E3%2581%2588%25E3%2581%259F%25E3%2581%2595%25E3%2581%2584%25E3%2581%258D%25E3%2582%2587%25E3%2581%2586%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%25202021Summer%2520%25E3%2580%2590Next.js%2520%252F%2520Hasura%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDU2Y2U2YjAzNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "author": "リーナーテックブログ",
          "description": "Leaner Technologies の黒曜(@kokuyouwind)です。\n以前 Leaner の技術スタックを記事にまとめましたが、Copilot CLIでのコンテナ化やAmplify ConsoleでのSPA配信で技術スタックが更新されたことで少々古い内容になっています。\nhttps://zenn.dev/leaner_tech/articles/20210608-leaner-techstack\nまた新規プロダクトの立ち上げが始まっており、そちらでは従前のプロダクトと異なる技術選定をした部分もあります。\nこれらの点を踏まえ、本記事では Leaner で採用している現在の技術ス...",
          "link": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "publishedOn": "2021-07-15T01:51:12.000Z",
          "wordCount": 280,
          "title": "Leaner の技術スタック紹介(2021年7月版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--j47hoymn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Leaner%2520%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E7%25B4%25B9%25E4%25BB%258B%25282021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGZiYzhkYzg5MS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/quocca/articles/36182859d30b22",
          "author": "quocca",
          "description": "したかったので開発しました！\nhttps://quocca-works.com/accela/\nドキュメントはサイト内にあるので、この記事ではNext.jsとの対比や簡単なコードで、Accelaの特徴を紹介していきます。実際にどういった動作をするかは当サイトで確認することができ、サイトのデータ自体もダウンロードできるので、サンプルとしてお使いください。\n\n Next.jsを参考にした機能\nNext.js(React)の設計思想やNode.jsのエコシステムは素晴らしいものですが、Accelaはその全てを参考にして作っているわけではありません。主に以下の3点を踏襲した上で、別のコンセプトを...",
          "link": "https://zenn.dev/quocca/articles/36182859d30b22",
          "publishedOn": "2021-07-14T13:36:47.000Z",
          "wordCount": 144,
          "title": "PHPでもNextしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--J0Ldggk3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quocca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PHP%25E3%2581%25A7%25E3%2582%2582Next%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjZmODA0YjU1Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nihashi/articles/f532d43bd52e6f",
          "author": "nihashi",
          "description": "Next.jsの導入\n\n      \n        \n        npx create-next-app project-name\n\n\n      \n      typescriptを導入したい場合はオプションに--typescript（もしくは--ts）を追加するか、プロジェクト作成後に必要なファイルの作成およびパッケージのインストールを行います。\n\n      \n         プロジェクト作成時に導入\n        npx create-next-app project-name --typescript\n\n\n      \n      \n      \n        ...",
          "link": "https://zenn.dev/nihashi/articles/f532d43bd52e6f",
          "publishedOn": "2021-07-14T11:48:49.000Z",
          "wordCount": 588,
          "title": "Next.jsの環境を構築する（+TypeScript, Storybook, Hygen）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--xeTR771G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nihashi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%252BTypeScript%252C%2520Storybook%252C%2520Hygen%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzczMzgyM2EwYi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "author": "din",
          "description": "はじめに\nなろう形式のタイトルってわかりやすいですね。\n初投稿です。\nReactの学習のため、Todoアプリを作成しました。\nどうせなら最新のライブラリを使用しようとRecoil, React Hook Form v7を使ってみましたので、備忘録がてらその内容を紹介します。\n\n 環境\nWindows10 64bit(20H2)\nWSL(Ubuntu 18.) v1\nnode v14.17.1\nyarn 1.22.5\nVSCode\n\n 完成図\nこんな感じの簡単なtodoアプリを作ってみました。\n見た目は完全に度外視しています。\n\n\n install\nまずWSLで下記コマンドを実行して、...",
          "link": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "publishedOn": "2021-07-11T15:01:45.000Z",
          "wordCount": 462,
          "title": "Next.jsでtodoアプリ を作ろうとしたらRecoil + React Hook Form v7で楽ができた件",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5ysT6Zxi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:din%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%25E3%2581%25A7todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Recoil%2520%252B%2520React%2520Hook%2520Form%2520v7%25E3%2581%25A7%25E6%25A5%25BD%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzcxZDU3OTNkZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/c091602d3060d3",
          "author": "mattun",
          "description": "こちらの記事の続きになります。\nhttps://zenn.dev/articles/6e260f3a5af117\n\n serverless-nextjs\n2021年7月11日現在\nhttps://www.serverless.com/plugins/serverless-nextjs-plugin/\nこちらを使うことによって、Next.jsの10系の機能をAWSにデプロイできると歓喜してそちらをつかいながら実装しておりました。\n\n ISRを設定したページで503エラーの頻発\nこちらエラーの全文を載せておきます。\n\n      \n        \n        503 ERROR\nThe...",
          "link": "https://zenn.dev/makumattun/articles/c091602d3060d3",
          "publishedOn": "2021-07-11T08:10:46.000Z",
          "wordCount": 148,
          "title": "Vercelを使わずにNext.jsするのはまだ早かった",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--VhcVs2MA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vercel%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25ABNext.js%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25BE%25E3%2581%25A0%25E6%2597%25A9%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/a_da_chi/articles/7ba871c23c5510",
          "author": "adachi",
          "description": "はじめに\n※この記事は下記記事の延長です。下記記事を読まなくても問題ないように書いていますが、ご興味ありましたらご一読ください。\nhttps://zenn.dev/a_da_chi/articles/181ea4ccc39580#スナップショットテスト導入\n今回はNext.jsプロジェクトにCypressを導入してGitHub ActionsでVercelのPreview環境のE2Eテストをするまでの手順を書いていきたい思います。\n\n 前提\n\nNext.jsでsrcディレクトリ配下にアプリケーションコードを配置していること\nVercelを使用しており、PRごとにPreview環境がデ...",
          "link": "https://zenn.dev/a_da_chi/articles/7ba871c23c5510",
          "publishedOn": "2021-07-11T07:56:28.000Z",
          "wordCount": 301,
          "title": "Next.jsプロジェクトにCypressを導入してGitHub ActionsでVercelのPreview環境のE2Eテストをする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q3wXf_4b--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:adachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABCypress%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6GitHub%2520Actions%25E3%2581%25A7Vercel%25E3%2581%25AEPreview%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEE2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hvU1F2dTVtTFZ2WUdOVUt1bE5kVE9Gd2Q5Z3VlTFhCaWJ3LTRHS2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mo_ri_regen/articles/implement-ssg-article",
          "author": "モーリー",
          "description": "Next.jsではAPIを叩くときにgetStaticPropsを使うことで、ビルド時にデータを取得して事前にHTMLファイルのレンダリングを行うことができます。ビルド時にデータを取得して事前にHTMLファイルのレンダリングを行うことをSSGと呼びます。\nTypeScriptを使う場合はgetStaticPropsの型にGetStaticProps[1]を指定します。\nSSG(StaticSiteGeneration)とは\nStatic Generationと呼ばれることもあります。\nビルド時にデータを取得することでpre-renderされるため高速にデータを読むことができます。\nリアル...",
          "link": "https://zenn.dev/mo_ri_regen/articles/implement-ssg-article",
          "publishedOn": "2021-07-11T02:03:43.000Z",
          "wordCount": 154,
          "title": "【簡単】Next.jsによるSSGの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KQl-hxC---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591Next.js%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BSSG%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h5X0w2OU5jR2tiM3dLVU1LMUUzb3J4b29MMmZWQmEzdFNwV0tNV3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/st43/articles/ff9ac1b0c7d057",
          "author": "蔀",
          "description": "一ヶ月くらいかけて、念願だった個人サイトをつくりました。\nhttps://www.shetommy.com/\nポートフォリオサイト + 個人ブログ + Web技術の実験場的な使い方をするためにつくりました。\nポートフォリオサイトとしての実装は割とすぐできたんですが、ブログ機能が大変でした。\nこの記事ではそこメインで書きたいと思います。\nNotion APIをガチャガチャした詳細は長くなるので、後で記事を書いて、とりあえずこの記事は個人サイト開発のまとめとしてもうちょっと雑多に書いていきます。\n同じようなことをしたい方の参考になれば幸いです。\n\n ソース\n公開しています。\nhttps://...",
          "link": "https://zenn.dev/st43/articles/ff9ac1b0c7d057",
          "publishedOn": "2021-07-09T09:28:10.000Z",
          "wordCount": 128,
          "title": "Next.js x Notion APIで個人ブログをつくりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--iszGFuMT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2594%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520x%2520Notion%2520API%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTMwYzI0MTEwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/okuninoshi/articles/a63131abf7d9ae",
          "author": "okuninoshi",
          "description": "How to Rebuild the mdn express local library website with strapi and nextjs\n\n 1-Intro\nWelcome to the \"Local Library\" Strapijs, Nextjs tutorial, in which we develop a web app that might be used to manage the catalog for a local library.\nthis tutorial is a rebuild of the MDN \"Local Library\" Expre...",
          "link": "https://zenn.dev/okuninoshi/articles/a63131abf7d9ae",
          "publishedOn": "2021-07-08T13:02:52.000Z",
          "wordCount": 3386,
          "title": "mdn expressJs local library website rebuilt with Strapi and NextJS",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--C0lbhXnT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:okuninoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:mdn%2520expressJs%2520local%2520library%2520website%2520rebuilt%2520with%2520Strapi%2520and%2520NextJS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSa2ZzUlBNUlJGOGNUQjUzS00xN3QzY1VlVllMeDFzeUFkRlRSRlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Nuxt.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nuxtjs/feed",
      "siteUrl": "https://zenn.dev/topics/nuxtjs",
      "articles": [
        {
          "id": "https://zenn.dev/tanoken729/articles/6a96bff90b8e12",
          "author": "tanoken",
          "description": "成功\nstore/musicFiles.js\n\n      \n        \n        export const state = () => ({\n  musicFileData: [],\n})\n\nexport const getters = {\n  musicFileData: state => state.musicFileData\n}\n\nexport const mutations = {\n  setMusicFileDataMutations(state, musicFileData) {\n    // console.log(musicFileData)\n ...",
          "link": "https://zenn.dev/tanoken729/articles/6a96bff90b8e12",
          "publishedOn": "2021-08-03T15:32:50.000Z",
          "wordCount": 155,
          "title": "wip 【音楽ファイル詳細表示機能】storeをモジュール化して、getterを参照したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--qVmDL7ti--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tanoken%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:wip%2520%25E3%2580%2590%25E9%259F%25B3%25E6%25A5%25BD%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E8%25A9%25B3%25E7%25B4%25B0%25E8%25A1%25A8%25E7%25A4%25BA%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2591store%25E3%2582%2592%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E5%258C%2596%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581getter%25E3%2582%2592%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dzSWFrN3BqZU13dW9saWduTXdqRHpoeFI5NTQyb2Fvb0w5cVJ1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 391,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kata_n/articles/2d4744d1bb6ab6",
          "author": "kata",
          "description": "Tailwind CSSとは\nユーティリティが用意されているCSSフレームワーク。\nCSSでいうユーティリティとは、あらかじめ用意されたクラスを利用してStyleを当てていくことで、CSSを書く事なくスタイルを当てていく手法です。\n具体的には、クラスを定義した別ファイル（ユーティリティファイル）を用意しておいて、使いたい時にクラス名を書くイメージです。\n\n      \n        ユーティリティファイル\n        .p-10 { padding:10px }\n\n\n      \n      使うときは、\n\n      \n        \n        <h2 clas...",
          "link": "https://zenn.dev/kata_n/articles/2d4744d1bb6ab6",
          "publishedOn": "2021-07-31T11:10:31.000Z",
          "wordCount": 375,
          "title": "Nuxt.jsにTailwindを初めて使ってみるときのTips",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q6v2ht8p--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nuxt.js%25E3%2581%25ABTailwind%25E3%2582%2592%25E5%2588%259D%25E3%2582%2581%25E3%2581%25A6%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AETips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDU4MTg1MWM4MC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/harunonsystem/articles/vuetify_v_card_and_footer",
          "author": "はるのん",
          "description": "VuetifyのDialogを使ってv-cardを表示させたときにFooterを画面内に固定させる方法を備忘録程度に。\n\n 完成形\nせっかちめな人はこちらを参考に。\n\n\n Buttonを用意してダイアログを作成\n\n      \n         sample.vue\n           <v-dialog\n      v-model=\"dialog\"\n      scrollable\n      max-width=\"300px\"\n    >\n      <template v-slot:activator=\"{ on, attrs }\">\n        &l...",
          "link": "https://zenn.dev/harunonsystem/articles/vuetify_v_card_and_footer",
          "publishedOn": "2021-07-28T14:05:45.000Z",
          "wordCount": 189,
          "title": "v-dialogでv-cardを開いたときにFooterを固定させてスクロールする方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--UvhGSu8W--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AF%25E3%2582%258B%25E3%2581%25AE%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:v-dialog%25E3%2581%25A7v-card%25E3%2582%2592%25E9%2596%258B%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25ABFooter%25E3%2582%2592%25E5%259B%25BA%25E5%25AE%259A%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hFQzVyNG9mYTlYSDVYWnJoSGVmRkFEZGhWcVU2aV9vX3ljV3UyeUlJPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sengosha/articles/498398d82fb056",
          "author": "ユウ",
          "description": "背景\n最近NuxtJSの公式オンラインコース を受講してパフォーマンス周りを改善する方法を勉強したので共有します。\n\n 概要\nNuxtのSSRモードでページにアクセス時にasyncDataやfetchで複数のAPIリクエストを投げるのはよくあることです。APIリクエストはasync/waitで非同期処理なので、例えばA、B、Cの３つのリクエストがある場合、BはAが完了してから処理され、CはBが完了してから処理されます。リクエストが多ければ多いほどパフォーマンスに悪影響を与えてしまいます。\nPromise.all でAPIリクエストを並列処理させることで、ページアクセスが早くなり、TT...",
          "link": "https://zenn.dev/sengosha/articles/498398d82fb056",
          "publishedOn": "2021-07-27T14:46:20.000Z",
          "wordCount": 187,
          "title": "【Nuxtjs】Promise allでパフォーマンス改善について",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--uLFiQWsg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A6%25E3%2582%25A6%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Nuxtjs%25E3%2580%2591Promise%2520all%25E3%2581%25A7%25E3%2583%2591%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%25B3%25E3%2582%25B9%25E6%2594%25B9%25E5%2596%2584%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dialbird/articles/a63e9f1c838462",
          "author": "dialbird",
          "description": "まずはHasura Cloudでプロジェクトを作っておきましょう\nhttps://hasura.io/docs/latest/graphql/cloud/projects/create.html\n接続に必要なGraphQLのAPIエンドポイントと、アクセス時にヘッダーに必要なAdmin Secretを控えておきます\n\n次にNuxtプロジェクトをnpxで作ります\n\n      \n        \n        $ npx create-nuxt-app nuxt-composable-hasura\n\n\n      \n      次に必要なライブラリ群をインストールしていきましょう（各ライ...",
          "link": "https://zenn.dev/dialbird/articles/a63e9f1c838462",
          "publishedOn": "2021-07-27T13:13:32.000Z",
          "wordCount": 237,
          "title": "Nuxt x Composition API x Hasura x TypeScriptを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0D0rDbAG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dialbird%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%2520x%2520Composition%2520API%2520x%2520Hasura%2520x%2520TypeScript%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lYZl96c2pGMDVnZlVCaUJYR1NwVlB3aXFYZlJKTElqWFlHYkVPdGc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/soraride/articles/89b6455ac62908ffb4d3",
          "author": "そららいど",
          "description": "こんにちは、そらららいどです。\n今回はじめて、個人的に開発したWebサービス「オンライン作業部屋」をリリースしましたので紹介したいと思います。\n\n現在、後続の類似サービス「Youtube作業部屋」という24時間ライブ配信によるオンライン自習室も運営していますのでぜひご覧ください。\nYoutube作業部屋チャンネル\nYoutube作業部屋についても記事を準備中です。\n\n\n\n リンク\n\nWebアプリ\nGithubリポジトリ\n\n\n オンライン作業部屋とは？\nオンライン上の仮想的な作業部屋というコンセプトです。\n仕組みはシンプルで、好きな科目と座席を選び、ボタンを押して入室・退室するだけです。\n...",
          "link": "https://zenn.dev/soraride/articles/89b6455ac62908ffb4d3",
          "publishedOn": "2021-07-27T10:45:38.000Z",
          "wordCount": 168,
          "title": "仮想オンライン作業スペースを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2T-4B11I--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259D%25E3%2582%2589%25E3%2582%2589%25E3%2581%2584%25E3%2581%25A9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E4%25BB%25AE%25E6%2583%25B3%25E3%2582%25AA%25E3%2583%25B3%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%25B3%25E4%25BD%259C%25E6%25A5%25AD%25E3%2582%25B9%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODk3MWVjNzI5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "author": "Yuku Kotani",
          "description": "Nuxt.js で開発されていたAI受診相談ユビーのフロントエンドを Next.js で作り直しました。\nまだまだ仮説検証を繰り返すフェーズのスタートアップのため、機能開発を止めて一気に置き換えることはできず、機能ごとに少しずつ置き換えてリリースをしました。結果、5人のプロダクト開発チームによる機能開発と並走して、全体の移行を1人で1ヶ月の短期間で終わらせることができたので、その意思決定や過程、工夫を紹介します。\n\n詳細な設計を話すと長くなるため別の機会として、この記事では移行についてのみ書きます。\n\n\nNext.js と Nuxt.js が似ていて読みにくいので、区別のために Nuxt...",
          "link": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "publishedOn": "2021-07-26T10:08:53.000Z",
          "wordCount": 312,
          "title": "150万MAUのNuxt.js製サービスを機能開発を止めずに1ヶ月&1人でNext.jsに置き換えた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--DH5GJ0ks--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuku%2520Kotani%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:150%25E4%25B8%2587MAU%25E3%2581%25AENuxt.js%25E8%25A3%25BD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2581%259A%25E3%2581%25AB1%25E3%2583%25B6%25E6%259C%2588%25261%25E4%25BA%25BA%25E3%2581%25A7Next.js%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEQVVDNDRXNTlSbWgyMjVIR2ZycENZQmRlNUJNZ0VCaDl3TGY0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryuji_cre8ive/articles/dc42afd40a1147",
          "author": "ryuji_cre8ive",
          "description": "ターゲット層\nNuxtで外部APIを叩きたいと考えているが、@nuxtjs/axiosがうまく動かない全人に向けて\n\n 結論\n\nnuxt.config.js内のaxiosとproxyの位置を変える\naxios内の{ proxy: true }の記述をなくす。\n\n\n 諸解説\nこの二つを踏まえた上でまだ動かないという人はpathRewriteやprefixなども見直したほうがいいです。\nprefixというのは読んで字の如く前に付随しますよ〜という合図です。\nなので$axiosがリクエストを送る際に記述したエンドポイント（URL）の前に勝手についてきます。\nそして肝心なproxy部ですが、...",
          "link": "https://zenn.dev/ryuji_cre8ive/articles/dc42afd40a1147",
          "publishedOn": "2021-07-25T06:24:45.000Z",
          "wordCount": 53,
          "title": "どうしてもnuxtでaxiosが動かない時の留意点",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--9HwAJ54w--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryuji_cre8ive%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%25A9%25E3%2581%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582nuxt%25E3%2581%25A7axios%25E3%2581%258C%25E5%258B%2595%25E3%2581%258B%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25E3%2581%25AE%25E7%2595%2599%25E6%2584%258F%25E7%2582%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hKUHROdS15cGNUUERTNUdxMnB0M09YeXpDbDZmdVlBMmF4bjFoTnc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "author": "sasigume",
          "description": "ずっとNext.jsを使っていたんだが、Nuxt.jsに切り替えるにあたって何回も挫折したので、正直二度とやりたくないが 一応メモする。\n\n最終更新: 2021年7月17日\n筆者はNuxtに関しては初心者ですので、細かい説明が不正確かもしれません。また、Vue/Nuxtはすごい速度で進化しています。仕様変更に注意してください\n\n\n 何をセットアップするか\n\n\nyarn create nuxt-appで以下を済ませる\n\nTypeScript化\nPrettier+ESLint\nTailwindCSS対応\nPWA対応\n\n\nコンフィグをTS化する\n\nsrcディレクトリにまとめる\nOGPを設定する...",
          "link": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "publishedOn": "2021-07-17T13:08:22.000Z",
          "wordCount": 689,
          "title": "Nuxt+TS+CompositionAPI+Vercel+VSCodeのセットアップ手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--I8cpjTY0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasigume%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%252BTS%252BCompositionAPI%252BVercel%252BVSCode%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYmMzZWY2ZjdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "author": "Yuuya Miyamae",
          "description": "Firebase AppCheck 導入\n\n 対応サービス\n\nRealtime Database\nCloud Storage\nCloud Functions (callable functions)\n\n\n 前提\nFirebase のプロジェクト作成まで完了している\n\n 1. reCAPTCHA 登録\nhttps://www.google.com/recaptcha/admin/create\n\n以下の情報を登録\n\nラベル\nreCAPTCHA タイプ: \"reCAPTCHA v3\" を選択\nドメイン: ドメイン設定\n\n\n 2. コンソール画面からAppCheck登録\nhttps://co...",
          "link": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "publishedOn": "2021-07-15T19:54:35.000Z",
          "wordCount": 108,
          "title": "Firebase: AppCheck 導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--oTNttJXm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuuya%2520Miyamae%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%253A%2520AppCheck%2520%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjYyY2JiMzAyYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "author": "博ノ助",
          "description": "ほんと適当ですみません。\n\n Install\n\n      \n        \n        $ npm install vue-chartjs@2 chart.js@2\n\n\n      \n      なんかこのバージョンじゃないとだめだった。よくわかんないけど両方2にした。\nvue-chartjsの導入を忘れないこと。\n\n      \n        \n        $ npm install @nuxtjs/moment\n\n\n      \n      時間の管理しやすさのためにMoment.jsを。入らなくてもいいかも。\n\n      \n        \n        $ np...",
          "link": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "publishedOn": "2021-07-15T13:00:42.000Z",
          "wordCount": 269,
          "title": "Chart.jsをNuxt.jsで使って時間の折線を作ったので個人的にメモした",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--k9JKkQCd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%258D%259A%25E3%2583%258E%25E5%258A%25A9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Chart.js%25E3%2582%2592Nuxt.js%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E6%258A%2598%25E7%25B7%259A%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmNjNzg4YzUzOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "author": "リーナーテックブログ",
          "description": "Leaner Technologies の黒曜(@kokuyouwind)です。\n以前 Leaner の技術スタックを記事にまとめましたが、Copilot CLIでのコンテナ化やAmplify ConsoleでのSPA配信で技術スタックが更新されたことで少々古い内容になっています。\nhttps://zenn.dev/leaner_tech/articles/20210608-leaner-techstack\nまた新規プロダクトの立ち上げが始まっており、そちらでは従前のプロダクトと異なる技術選定をした部分もあります。\nこれらの点を踏まえ、本記事では Leaner で採用している現在の技術ス...",
          "link": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "publishedOn": "2021-07-15T01:51:12.000Z",
          "wordCount": 280,
          "title": "Leaner の技術スタック紹介(2021年7月版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--j47hoymn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Leaner%2520%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E7%25B4%25B9%25E4%25BB%258B%25282021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGZiYzhkYzg5MS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "author": "JQinglong",
          "description": "タイトル長すぎですね。途中で切れました。\n本当は\n\n Nuxt TypeScript（Composition API）、Django REST Framework で、Docker Compose上での開発基盤を作る\nこいつの続きというか。\nhttps://zenn.dev/jqinglong/scraps/168d1bb5dd4832\nこの悪戦苦闘の結果、まあまあ良い構成ができたと思っており、それを使って、さらにもう一つアプリを作ってます。スッキリいくと思うので、そのスッキリした記録を残そうと思ったのですが、そうは問屋はおろさず・・・それでも、上記よりは落ち着いてできたので、こちらに残...",
          "link": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "publishedOn": "2021-07-12T12:49:03.000Z",
          "wordCount": 2610,
          "title": "Nuxt TypeScript（Composition API）、Django REST Framework で、・・・",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4GeR-cU7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JQinglong%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nuxt%2520TypeScript%25EF%25BC%2588Composition%2520API%25EF%25BC%2589%25E3%2580%2581Django%2520REST%2520Framework%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGS0FRWHBJUllSRHdIbVgyb1dHSUwyLTd4RHZ5RkN3Zkw3OThnTUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「TypeScript」のフィード",
      "feedUrl": "https://zenn.dev/topics/typescript/feed",
      "siteUrl": "https://zenn.dev/topics/typescript",
      "articles": [
        {
          "id": "https://zenn.dev/mizchi/articles/no-traspiled-typescript",
          "author": "mizchi",
          "description": "主張\n現代では、 npm に publish するものを除けば TypeScript をコンパイルして配布する必要はほぼないと考えています。\nTypeScript のコンパイルをしない環境、例えば deno や rome を使うと、コンパイルをするというステップが省くことで開発体験が大きく向上する、という肌感があり、ローカル環境ならこのメリットを優先するべきと考えています。\n基本的に、ビルドはフロントエンド/サーバーともに配布前の最後の一回だけでいいはず、というのが自分の主張です。\nhttps://github.com/denoland/deno\n\nRome Toolchain\nDe...",
          "link": "https://zenn.dev/mizchi/articles/no-traspiled-typescript",
          "publishedOn": "2021-08-06T08:23:18.000Z",
          "wordCount": 191,
          "title": "内部モジュールでは TypeScript をコンパイルせずに配る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--sS1xWih6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mizchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E5%2586%2585%25E9%2583%25A8%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2581%25A7%25E3%2581%25AF%2520TypeScript%2520%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%2591%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%259B%25E3%2581%259A%25E3%2581%25AB%25E9%2585%258D%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2liclRHT052Z3d3ay1fNGxlcVk4TGNGSlNuX0FoWnpEWVlKaXJNcWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/januswel/articles/a54aedc09fe7bc",
          "author": "januswel",
          "description": "次の記事を見てなるほどと思ったものの、コンポーネント集作成の視点で書かれている。我々はアプリを作る機会が多いので、その際はどういう書き方が楽なのか、チームで共有するために類型を洗い出し、比較した。\nhttps://kray.jp/blog/dont-have-to-use-react-fc-and-react-vfc/\n\n TL;DR\n関数での書き方を覚えれば良いと判断した。\n\n      \n        \n        function MyComponent(props: React.PropsWithChildren<Props>) {\n  if (props.ti...",
          "link": "https://zenn.dev/januswel/articles/a54aedc09fe7bc",
          "publishedOn": "2021-08-06T05:05:29.000Z",
          "wordCount": 393,
          "title": "React コンポーネントの書き方をチームで統一する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--r-zcfeH_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:januswel%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%2520%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%25E3%2582%2592%25E3%2583%2581%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25A7%25E7%25B5%25B1%25E4%25B8%2580%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hPWVhXdlBhLXJBNGJEd1V3Vnhfb0c2UmJnZUFQYnpNVllKMk1MPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "author": "yoshixj",
          "description": "vue3がリリースされてから、時間が立ちました。CompositionAPIはどれくらい使用されているのでしょうか。自分は新規開発をすることが多いので、小さいLPなども含めると5つくらいのプロジェクトをNuxt × CompositionAPIで作ってきました。\nそのなかで、CompositionAPIの体験がよいと思ったので軽く紹介します。\n\n CompositionAPIのメリット\nCompositionAPIと以前からあるOption APIの違いを説明するとなった時に以下のような図が用いられます。\n\n記述がまとまるということを示しているのですが、これがまとまったことで読みやすくな...",
          "link": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "publishedOn": "2021-08-04T23:09:36.000Z",
          "wordCount": 147,
          "title": "VueのCompositionAPIとgraphql-code-generatorの体験が良いので紹介したい。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EP4hHJAt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshixj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vue%25E3%2581%25AECompositionAPI%25E3%2581%25A8graphql-code-generator%25E3%2581%25AE%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OTRkNTdlOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/unemployed/articles/prettier-eslint",
          "author": "大学生だった.",
          "description": "最初に\n綺麗なコードを書きたいという事で、Stripe の API を試す環境（TypeScript と Express）に ESLint と Prettier を導入してコードを静的解析、整形出来る環境を作ろうと思う。\n\n node.js の環境構築\n今回も docker-compose を使ってサクッと作ろうと思う。docker じゃなく docker-compose を使う理由はポートをルーティングしたコンテナの起動等が docker-compose.yml に記述出来るので起動時のコマンドを省略出来るので使用している。単一のコンテナを利用する際でも便利だと思う。\n軽量な no...",
          "link": "https://zenn.dev/unemployed/articles/prettier-eslint",
          "publishedOn": "2021-08-04T06:11:36.000Z",
          "wordCount": 696,
          "title": "Dockerで立てたNode.js, TypeScript環境にESLintとprettierを導入して、VSCode保存でコード整形も行う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Ad-uJwRg--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%25A4%25A7%25E5%25AD%25A6%25E7%2594%259F%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F.%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Docker%25E3%2581%25A7%25E7%25AB%258B%25E3%2581%25A6%25E3%2581%259FNode.js%252C%2520TypeScript%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25ABESLint%25E3%2581%25A8prettier%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581VSCode%25E4%25BF%259D%25E5%25AD%2598%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%2595%25B4%25E5%25BD%25A2%25E3%2582%2582%25E8%25A1%258C%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNzQ2NGViNWVkYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/daisukesasaki/articles/f18dd6554f94e3",
          "author": "daisuke sasaki",
          "description": "はい、やってみた系です。\n最近ずーっとInputばっかりだったのでやったこと書くか。。となった次第です。\nECSとか使ったことなかったので。（高いし。。）\n※お金は知らんうちに全然可愛くない金額になってるのでご利用は計画的に（RDSとかも使ってたけど１週で3000円弱くらいになってた。。）\n\n 最終構築のイメージ\n何章かに分けて作成していきますが、全部終わったらこうなるイメージ\n（今回はbackend編）\n\n\n 動作環境\n\nBigSur ver11.4\nMacBook Pro (13-inch, 2019, Two Thunderbolt 3 ports)\n1.4 GHz クアッドコ...",
          "link": "https://zenn.dev/daisukesasaki/articles/f18dd6554f94e3",
          "publishedOn": "2021-08-02T20:31:44.000Z",
          "wordCount": 912,
          "title": "Docker×FastAPI×React(TypeScript) on AWS ECS【backend】",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Nz-MNjC0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:daisuke%2520sasaki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Docker%25C3%2597FastAPI%25C3%2597React%2528TypeScript%2529%2520on%2520AWS%2520ECS%25E3%2580%2590backend%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYWZiMjI1NmFmZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "author": "kazuhe",
          "description": "はじめに\n型駆動開発とはどんなもので実践すると何が嬉しいのかを自分なりに理解するためにこの記事を書きます。\n2021年8月時点では「型駆動開発」でググっても意図した内容がヒットせず、「Type-Driven Development」と検索して英語の記事が何件かヒットする程度です。\n自分の「型駆動開発」に対しての理解・認識が世間一般のそれと相違がある場合もありますので、何か思うところがあればご指摘いただければ大変嬉しく思います。\nまた、この記事ではTypeScriptとVue.jsでフロントエンドのコードを書いていきます。TypeScriptは必須の前提ですがReactでも同じような考...",
          "link": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "publishedOn": "2021-08-02T15:54:16.000Z",
          "wordCount": 643,
          "title": "TypeScriptで型駆動開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--56npAWpa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhe%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMGEwMmEwNWExZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "author": "KenT",
          "description": "今回作ったもの\n作品はこちら\nコードはこちら\n\n 作った経緯\nContextAPIを使ってみたかった為\n\n コードの解説\n\n コンポーネントをAppContextに接続する\n\n      \n        \n        import React, { useContext } from 'react';\nimport { AppContext } from '../context/AppContext';\n\nconst Budget = () => {\n\tconst { budget } = useContext(AppContext);\n\treturn (\n\t\t<d...",
          "link": "https://zenn.dev/kenta0313/articles/eb1c38209aa30e",
          "publishedOn": "2021-08-02T08:31:47.000Z",
          "wordCount": 206,
          "title": "Next.js+Typescript+ContextAPIで予算トラッカーを作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Q6GyqDpi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KenT%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252BTypescript%252BContextAPI%25E3%2581%25A7%25E4%25BA%2588%25E7%25AE%2597%25E3%2583%2588%25E3%2583%25A9%25E3%2583%2583%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYjg4ZDAyMTI0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukination/articles/e854062cea4920",
          "author": "Yukination",
          "description": "npm と比べて早いと話題の pnpm を使用してプロジェクトを新規作成したので備忘録として残します。\nこちら に公式が発表しているベンチマークの結果があります。\nnpm や yarn との違いはこちらの記事が分かりやすくてオススメです。\n\n node.js のバージョンを確認\n現在使用している Node.js のバージョンが 12 以上か？の確認を行います。\n\n      \n        \n        > node -v\nv16.4.2\n\n\n      \n      \n pnpm を新規インストール\nnpm を使用し pnpm のインストールを行います。\n\n      \n ...",
          "link": "https://zenn.dev/yukination/articles/e854062cea4920",
          "publishedOn": "2021-08-02T06:26:46.000Z",
          "wordCount": 189,
          "title": "pnpm + Vite + Vue + TypeScript で新規プロジェクトを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cZ8sw5ZO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yukination%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pnpm%2520%252B%2520Vite%2520%252B%2520Vue%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMmYxNDI0YTYxMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shztmk/articles/05_javascript-timezone",
          "author": "shztmk",
          "description": "予備知識\nJavaScript の Date オブジェクトは、時刻を実行環境のタイムゾーンで保持している、とみなすことができます。\nすなわち new Date('2020-01-01T09:00:00+09:00') としたとき\n\n実行環境が JST ならば 2020-01-01T09:00:00+09:00\n\n実行環境が UTC ならば 2020-01-01T00:00:00Z\n\n実行環境が EST ならば 2019-12-31T19:00:00-05:00\n\n\nとして保持していることになります。\n\n 懸念点\n2020-01-01T00:00:00+09:00 という文字列を受け取...",
          "link": "https://zenn.dev/shztmk/articles/05_javascript-timezone",
          "publishedOn": "2021-08-02T06:12:37.000Z",
          "wordCount": 311,
          "title": "Node.js/JST で時刻をやりとりするにあたって",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--T-dGP0uj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shztmk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Node.js%252FJST%2520%25E3%2581%25A7%25E6%2599%2582%25E5%2588%25BB%25E3%2582%2592%25E3%2582%2584%25E3%2582%258A%25E3%2581%25A8%25E3%2582%258A%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AB%25E3%2581%2582%25E3%2581%259F%25E3%2581%25A3%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODZiMTI4NjZkYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 390,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/azukiazusa/articles/67e059d7b7f3c7",
          "author": "azukiazusa",
          "description": "JavaScriptには、以下のような時間に関する関数が用意されています。\n\nsetTimeout\nsetInterval\nclearTimeout\nclearInterval\n\n例えば、setTimeoutは第1引数で渡したコールバック関数を第2引数で渡したミリ秒後に実行します。\n標準で用意されている非常に便利な関数群ですが、ユニットテストを記述するときには少々困りものです。setTimeoutのコールバック関数に渡した処理が正しく呼び出されているかどうか調べたいようない場合には、setTimeoutのコールバックが呼び出されるまで待機する処理を挟む必要があります。\nsetTimeou...",
          "link": "https://zenn.dev/azukiazusa/articles/67e059d7b7f3c7",
          "publishedOn": "2021-08-01T13:04:25.000Z",
          "wordCount": 334,
          "title": "Jest setTimeout()のようなでタイマー関数をテストする",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cDz5U3m2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:azukiazusa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Jest%2520setTimeout%2528%2529%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AA%25E3%2581%25A7%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjgzYWY0MzVjZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ababup1192/articles/a5f5c232b502d6",
          "author": "ABAB↑↓BA",
          "description": "先日、関数型プログラミングはまずは純粋関数型言語を用いて、考え方から理解しよう\nと言う記事を書かせていただきました。納得の声をたくさん頂きましたが、それでは純粋関数型プログラミング言語を闇雲に初めて勘所がわかった！とはすぐにはならないと思い、順調にステップアップするための記事を書こうと思いました。また、考え方が違うだけで関数型プログラミング言語を学んだり使用する理由は特にないとの意見をいただいたので、改めて実例と共に関数型プログラミング言語を確認していただければなと思います。\n今回の記事ではFizzBuzzとElmを利用して解説をしていきたいと思います。FizzBuzzは使い古された例で...",
          "link": "https://zenn.dev/ababup1192/articles/a5f5c232b502d6",
          "publishedOn": "2021-08-01T12:03:48.000Z",
          "wordCount": 876,
          "title": "[超入門] FizzBuzzで考える関数型プログラミング学習を純粋関数型言語でやる理由",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--GGAfgfo3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ABAB%25E2%2586%2591%25E2%2586%2593BA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%255B%25E8%25B6%2585%25E5%2585%25A5%25E9%2596%2580%255D%2520FizzBuzz%25E3%2581%25A7%25E8%2580%2583%25E3%2581%2588%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B0%25E3%2583%25A9%25E3%2583%259F%25E3%2583%25B3%25E3%2582%25B0%25E5%25AD%25A6%25E7%25BF%2592%25E3%2582%2592%25E7%25B4%2594%25E7%25B2%258B%25E9%2596%25A2%25E6%2595%25B0%25E5%259E%258B%25E8%25A8%2580%25E8%25AA%259E%25E3%2581%25A7%25E3%2582%2584%25E3%2582%258B%25E7%2590%2586%25E7%2594%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dqRm84X2NSbjU2WlRqUEpXQmNzQTVCMmZ0c1l6czFnUnAyRUZ5PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/katzumi/articles/58354fb4d05038",
          "author": "katzumi",
          "description": "Motivation\n個人的にいくつかのSlackボットをGoogle Apps Script（以下GAS）で実装していますが、3秒ルールの壁があってイベント処理がタイムアウトしてしまうという課題がありました。\nSlackの公式ドキュメントには3秒以内にレスポンスできない処理は、一旦レスポンスして非同期処理でイベントのペイロードにあるレスポンスURLに書き込めとありました。\nGAS内で非同期処理を行うには、トリガー処理を組み合わせして実現できそうでした。\nhttps://developers.google.com/apps-script/guides/triggers\n使えるトリガー...",
          "link": "https://zenn.dev/katzumi/articles/58354fb4d05038",
          "publishedOn": "2021-08-01T08:46:58.000Z",
          "wordCount": 191,
          "title": "Google Apps Script向け簡易job-queueを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--Vqd8Yk_a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:katzumi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Google%2520Apps%2520Script%25E5%2590%2591%25E3%2581%2591%25E7%25B0%25A1%25E6%2598%2593job-queue%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOGZiMGM4OGU2Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f23af092957bf5",
          "author": "hashito",
          "description": "momentjsを利用したやり方\nコマンドでmomenjsをプロジェクトにインストールする。\nnpm install moment --save\nimportして下記のように利用できる。\n\n      \n        \n        import * as moment from 'moment';\nlet unixtime:number=moment().unix();\n\n\n      \n      \n Dateを利用したやり方\nDate.now()というコードでunix timeのミリ秒版が取得できる。\nなのでDate.now()/1000で単位を秒にすれば小数点付きだがun...",
          "link": "https://zenn.dev/hashito/articles/f23af092957bf5",
          "publishedOn": "2021-08-01T07:07:16.000Z",
          "wordCount": 92,
          "title": "Angularでunix timeを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--rj0vHw-o--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Angular%25E3%2581%25A7unix%2520time%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/drumath2237/articles/112fd0bfa7ea4f836195",
          "author": "にー兄さん",
          "description": "はじめに\n\n TL;DR\nDiscord の Slash Command を TypeScript を使って開発し、\nAzure Functions にデプロイすることで簡単なボットのようなアプリをサーバーレスに作ることできる。\n\n 扱う内容・対象読者\nこの記事では、Azure Functions にデプロイした関数を\nDiscord Slash Command の Interaction Endpoint に指定して使うまでを目標とします。\nしたがって次のような項目を扱います。\n\nSlash Command の概要と作成方法\nAzure Function アプリを TypeScri...",
          "link": "https://zenn.dev/drumath2237/articles/112fd0bfa7ea4f836195",
          "publishedOn": "2021-07-31T12:38:37.000Z",
          "wordCount": 924,
          "title": "Discord Slash CommandのInteractionをAzure Functionsにデプロイしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--ZR_W4lXX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AB%25E3%2583%25BC%25E5%2585%2584%25E3%2581%2595%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Discord%2520Slash%2520Command%25E3%2581%25AEInteraction%25E3%2582%2592Azure%2520Functions%25E3%2581%25AB%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dUQndtd2ZiTmM3Nzg0SmxRZWdlX3BSc09RdmdvX2hxNlg5MTJKT3VZPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tnzk/articles/27b72f6b7ce982",
          "author": "tnzk",
          "description": "先日 Daniel North の記事を訳していて、この記事がドラフトのままになっているのを思い出したので、加筆して公開することにしました。\n\n 概要\nGauge のように受け入れテストを日本語で書いて、 Jest を採用しているプロジェクトで受け入れテスト駆動開発 (ATDD) を実現できる Jest 拡張 \"jest-gauge\" を公開しました。\nhttps://github.com/tnzk/jest-gauge\n\n 受け入れテスト駆動開発 (ATDD) とは\n受け入れテスト駆動開発 (ATDD) とは、テスト駆動開発 (TDD) の延長線上にあるソフトウェア開発技法のひとつで、...",
          "link": "https://zenn.dev/tnzk/articles/27b72f6b7ce982",
          "publishedOn": "2021-07-31T10:14:31.000Z",
          "wordCount": 214,
          "title": "Gauge のように受け入れテストを日本語で書ける Jest 拡張 \"Jest-gauge\" を公開しました",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--N0FCDFvV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tnzk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Gauge%2520%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E5%2585%25A5%25E3%2582%258C%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%2520Jest%2520%25E6%258B%25A1%25E5%25BC%25B5%2520%2522Jest-gauge%2522%2520%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2djejlyS2ZfMDZoUDNVZFB5MWxGay0xUDM3OHFGTlpQel9sNEdPbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/karibash/articles/3f18b3a77e1792",
          "author": "Karibash",
          "description": "https://github.com/Karibash/password-generator\n\n 使い方\n\n      \n        \n        import password from '@karibash/password-generator';\n\nconsole.log(password(9));\n// -> C_Tpmf45L\n\n\n      \n      これだけで大文字、小文字、数字、記号を各1文字以上含む文字列を生成できます\n探しても無かったので作っちゃいました\n\n 生成時に使用する文字を変更する\n第2引数に文字配列を指定すると、生成時に使用する文字を変更出...",
          "link": "https://zenn.dev/karibash/articles/3f18b3a77e1792",
          "publishedOn": "2021-07-30T13:45:55.000Z",
          "wordCount": 309,
          "title": "パスワードを生成するライブラリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--o_oxPD6C--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Karibash%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E7%2594%259F%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hiro4hiro4/articles/a19d1f5c9b6eab",
          "author": "Hiro",
          "description": "TypeScriptを書くようになって約6ヶ月経ちました。以前は下記のような書き方をしていましたが、最近新たにプロジェクトを作るとこの書き方では ts(2339) エラーが発生するようになりました。\nなぜそのエラーが発生するかの原因はまだ掴めていないのですが、取り急ぎこちらを解決する方法を調べたのでまとめます！\n初投稿＆走り書きとなるので今後新たな知見を得たらカイゼンしていこうと思います。\n\n エラーの内容\n\n与えられた型にcountプロパティが存在しません！\n\n as をつかって型を与える方法\n\n      \n        CountProvider.tsx\n        impo...",
          "link": "https://zenn.dev/hiro4hiro4/articles/a19d1f5c9b6eab",
          "publishedOn": "2021-07-29T17:54:22.000Z",
          "wordCount": 256,
          "title": "TypeScript & Context APIのdefaultValueの書き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--b0opxlDx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Hiro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:TypeScript%2520%2526%2520Context%2520API%25E3%2581%25AEdefaultValue%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvaC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shinyoshiaki/articles/rtp-payload-keyframe",
          "author": "shin",
          "description": "趣旨\nChrome の WebRTC で使える代表的なコーデックの RTP Payload をパースして RTP パケットのキーフレーム判定を行う方法についてまとめます。\n\n RTP Payload とは\n\n      \n        \n              0                   1                   2                   3\n      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n     +-+-+-+-+-+-+-+-+-+-+-+-...",
          "link": "https://zenn.dev/shinyoshiaki/articles/rtp-payload-keyframe",
          "publishedOn": "2021-07-29T11:35:37.000Z",
          "wordCount": 1455,
          "title": "RTP Payloadのキーフレーム判定方法 VP8/VP9/H264/AV1 編",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--OtlEO3Sk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:RTP%2520Payload%25E3%2581%25AE%25E3%2582%25AD%25E3%2583%25BC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A0%25E5%2588%25A4%25E5%25AE%259A%25E6%2596%25B9%25E6%25B3%2595%2520VP8%252FVP9%252FH264%252FAV1%2520%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dlQ0NSdmkyZDMwY2loVUYybjZEbEJ5SERIRzQ5SlBLU1pqa1NhaEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shztmk/articles/04_reduce_dependency_of_artefact",
          "author": "shztmk",
          "description": "動機\nJavaScript ( や TypeScript などの AltJS ) で記述されたプロジェクトをデプロイするとき、対象となるサービスに設定されたデプロイパッケージの容量制限を意識せねばならない場合があります。 そういった目的のために、この記事では node_modules パッケージの容量を減らす方法についてまとめます。\nnode_modules のサイズについては、以下のコマンドなどで確認できます。\n\n      \n        \n        $ du -d 1 -kh ./node_modules | sort -hr | head -50\n\n\n      \n ...",
          "link": "https://zenn.dev/shztmk/articles/04_reduce_dependency_of_artefact",
          "publishedOn": "2021-07-29T11:08:36.000Z",
          "wordCount": 276,
          "title": "Node.js/成果物に含まれる node_modules を減量する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--5lSwd4_8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:shztmk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Node.js%252F%25E6%2588%2590%25E6%259E%259C%25E7%2589%25A9%25E3%2581%25AB%25E5%2590%25AB%25E3%2581%25BE%25E3%2582%258C%25E3%2582%258B%2520node_modules%2520%25E3%2582%2592%25E6%25B8%259B%25E9%2587%258F%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODZiMTI4NjZkYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/acro5piano/articles/388b504289ccaa",
          "author": "五所和哉",
          "description": "Node.js の RDB 向けの Query Builder は Knex が有名ですが、 Kysely というのが台頭しそうな予感がします。\nhttps://github.com/koskimas/kysely\nKnex と非常に似た構文をしていますが、大きな違いは、 TypeScript で書かれている ことです。 TS 4.1 で導入された Template Literal Type を駆使し、複雑な Join や As を使ったエイリアスでも可能な限り型推論できるようになっています。\n作者の Koskimas 氏は Knex を利用した ORM である Objection.js...",
          "link": "https://zenn.dev/acro5piano/articles/388b504289ccaa",
          "publishedOn": "2021-07-29T08:40:08.000Z",
          "wordCount": 120,
          "title": "Kysely が Knex をリプレイスする日も近いかもしれない",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--vjYSpsgB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BA%2594%25E6%2589%2580%25E5%2592%258C%25E5%2593%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Kysely%2520%25E3%2581%258C%2520Knex%2520%25E3%2582%2592%25E3%2583%25AA%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E6%2597%25A5%25E3%2582%2582%25E8%25BF%2591%25E3%2581%2584%25E3%2581%258B%25E3%2582%2582%25E3%2581%2597%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPdDhnaDhYVEJ3VjFmU0FGTG5kMU9WTExTaGc4dUpiaml3Y2FILWFZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mura_chan/articles/e8c85262f54830",
          "author": "mura_chan",
          "description": "「空でない配列を表現する型」は需要がありそうで、ググってヒットする日本語の記事が少なかった（和訳されたサイトはあったが純粋な日本語の記事はすぐに出てこなかった）ため、ひとつくらいすぐにヒットする日本語の記事があればと思い、記事にします。\nいきなりですがコードは以下です。\n\n      \n        \n        type NonEmptyArray<T> = [T, ...T[]];\n\n\n      \n      \n      \n        \n        // コンパイルエラー\nconst numbers: NonEmptyArray<number>...",
          "link": "https://zenn.dev/mura_chan/articles/e8c85262f54830",
          "publishedOn": "2021-07-27T16:01:35.000Z",
          "wordCount": 67,
          "title": "Typescriptで空でない配列を型で表現する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--AMyij0js--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mura_chan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Typescript%25E3%2581%25A7%25E7%25A9%25BA%25E3%2581%25A7%25E3%2581%25AA%25E3%2581%2584%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E5%259E%258B%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dvRGRPZUxRTGV3TWRYYVg4c0RmelFtaXFVZFRPaThQQ3MxenMtZ3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/acro5piano/articles/32a71345ea35cd",
          "author": "五所和哉",
          "description": "I've created a tiny library which improves performance for GraphQL + Knex.\n\n tl;dr\n\n Before\n\n\n After\n\n\nFilter select columns based on a query from clients\nLoad relations without N+1 problem (pagination available!)\n\nhttps://github.com/acro5piano/knex-graphql-utils\nCurrently only PostgreSQL is supp...",
          "link": "https://zenn.dev/acro5piano/articles/32a71345ea35cd",
          "publishedOn": "2021-07-27T14:55:26.000Z",
          "wordCount": 163,
          "title": "Improve GraphQL server performance with knex-graphql-utils",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0qhWtteP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E4%25BA%2594%25E6%2589%2580%25E5%2592%258C%25E5%2593%2589%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Improve%2520GraphQL%2520server%2520performance%2520with%2520knex-graphql-utils%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPdDhnaDhYVEJ3VjFmU0FGTG5kMU9WTExTaGc4dUpiaml3Y2FILWFZPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/6022552f509b84",
          "author": "kawarimidoll",
          "description": "本記事の主題はDenoの自作モジュールの説明ではなく、Denoのモジュール公開に関する所感について述べるものです。したがってIdea記事です。\n\n markup-tagをリリースした\n先日、markup-tagというモジュールをリリースしました。\nhttps://github.com/kawarimidoll/deno-markup-tag\nhttps://deno.land/x/markup_tag\nhttps://nest.land/package/markup-tag\n\n 機能\nプログラム内でHTMLのソースを記述したいときに、\n\n      \n        \n        c...",
          "link": "https://zenn.dev/kawarimidoll/articles/6022552f509b84",
          "publishedOn": "2021-07-27T11:24:13.000Z",
          "wordCount": 124,
          "title": "DenoでHTMLタグを楽に書けるモジュールを作ってレジストリに公開した感想",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--JRs6a7JL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E3%2581%25A7HTML%25E3%2582%25BF%25E3%2582%25B0%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%25AC%25E3%2582%25B8%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2581%25AB%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2597%25E3%2581%259F%25E6%2584%259F%25E6%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/andynuma/articles/c7f6d6587c116d",
          "author": "nu0ma",
          "description": "前書き\nas を受け取るコンポーネントはどういうコンポーネントかというと、Chakra UI の Box コンポーネント にいい例があるのですが、\n\n      \n        \n        <Box as=\"button\" borderRadius=\"md\" px={4} h={8}>\n  Button\n</Box>\n\n\n      \n      上記のようなコンポーネントです。\nこのようなコンポーネントを自作する場合に、型をどう付与するかについて Generics を使用する書き方を学んだので備忘録も兼ねて記事にします。\nもっと良い方法などあれば教え...",
          "link": "https://zenn.dev/andynuma/articles/c7f6d6587c116d",
          "publishedOn": "2021-07-27T04:08:28.000Z",
          "wordCount": 211,
          "title": "Reactで任意のタグ名を設定できるコンポーネントを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--XcH9_UYL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nu0ma%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%25E3%2581%25A7%25E4%25BB%25BB%25E6%2584%258F%25E3%2581%25AE%25E3%2582%25BF%25E3%2582%25B0%25E5%2590%258D%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjcyM2MzY2VjNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/frog/articles/073af49880452f",
          "author": "かえる",
          "description": "はじめに\nprismaについてはこちら\n参考資料\n\n 対象読者\n\nPrismaを使っている\nNode.jsを使っている(もしくは個別に変換して解釈できる)\n複数のデータベースを同じプロジェクトで扱う必要がある\nとりあえず動かしたい\n\n\n 手順\n\nPrisma schemaの作成\nPrisma clientの生成\nClientのインポート&初期化\nそれぞれのクライアントを使う\n\n\n Prisma schemaの作成\nPrismaで複数のデータベースを同時に扱うには、Schemaを複数作成する必要があります。\nまた、generatorの設定にoutputの項目を追加することで/p...",
          "link": "https://zenn.dev/frog/articles/073af49880452f",
          "publishedOn": "2021-07-26T19:36:35.000Z",
          "wordCount": 272,
          "title": "Prismaで複数のデータベースを同時に扱う",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--IZi6RJFe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2581%2588%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Prisma%25E3%2581%25A7%25E8%25A4%2587%25E6%2595%25B0%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E3%2582%2592%25E5%2590%258C%25E6%2599%2582%25E3%2581%25AB%25E6%2589%25B1%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmEyN2Y0OWEzOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/4bf52f97165058",
          "author": "ryo_kawamata",
          "description": "esa を CMS に VuePress v2 でサイトを作る機会があったので紹介します。\n\n 🛠 何を作った？\nこちらのツイートで紹介されている LAPRAS 組織ハンドブックというサイトの基盤を esa  と VuePress v2 で作りました。\nhttps://twitter.com/320KZCD/status/1417679812114616321\n\n 👨‍💻 システム構成\n基本構成はこちらです。\n\nesa の GitHub Webhook (β) を使い、esa 上の特定のディレクトリ配下に記事を追加したとき、Webhook で指定した GitHub リポジトリの特定のディ...",
          "link": "https://zenn.dev/ryo_kawamata/articles/4bf52f97165058",
          "publishedOn": "2021-07-26T03:52:40.000Z",
          "wordCount": 726,
          "title": "esa を CMS に VuePress v2 で管理しやすいドキュメントサイトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--CgZCL2y2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:esa%2520%25E3%2582%2592%2520CMS%2520%25E3%2581%25AB%2520VuePress%2520v2%2520%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2597%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/qsf/articles/247315832ac599",
          "author": "たふみ",
          "description": "TL; DR\nhttps://github.com/Qs-F/hookskit\nReact HooksのCustom Hooksをnpmのライブラリとして切り出して開発したい人用のGitHub Repository Templateです．スターもらえるとめっちゃ喜びます．\n対応してるもの\n\nTypeScript (.ts, .tsx)\nReact v17+ (jsxの変換の都合上)\nJestでのunit test\nその他諸々 (下記参照)\n\n\n 概要\nReactを触ったことのある方なら，Hooksはご存知だと思います．\n一応めちゃくちゃざっくりとした解説をいれておくと，useXXX ...",
          "link": "https://zenn.dev/qsf/articles/247315832ac599",
          "publishedOn": "2021-07-25T17:52:43.000Z",
          "wordCount": 183,
          "title": "React Hooksのライブラリ開発(web向け)をしたい人のためのテンプレート",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--0m9nVnhi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%259F%25E3%2581%25B5%25E3%2581%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%2520Hooks%25E3%2581%25AE%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E9%2596%258B%25E7%2599%25BA%2528web%25E5%2590%2591%25E3%2581%2591%2529%25E3%2582%2592%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E4%25BA%25BA%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g4ZUl0bk9kaXNIRnpLdjB4VG4wc2E0endabi1IZDZCWWowTHNMUkg0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/528ee947842021",
          "author": "kawarimidoll",
          "description": "連休中のヤクの毛刈りを共有したいと思います。\n\n 要件\nTypeScriptで、一次元配列をネストされた配列に変換するというのをやってました。\nlevel要素を持つオブジェクトの配列を、そのレベルに従って入れ子式にした状態にする処理です。\n日本語だとちょっと何言ってるかわからないですね。\n以下のfromをtoに変換するということです。\n\n      \n        \n        const from = [\n  { level: 0, name: \"a\" },\n  { level: 1, name: \"b\" },\n  { level: 1, name: \"c\" },\n  { lev...",
          "link": "https://zenn.dev/kawarimidoll/articles/528ee947842021",
          "publishedOn": "2021-07-25T12:15:05.000Z",
          "wordCount": 475,
          "title": "TS/JSでレベルを持つオブジェクトの一次元配列をネストされた配列に変換する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--p06aTJz1--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TS%252FJS%25E3%2581%25A7%25E3%2583%25AC%25E3%2583%2599%25E3%2583%25AB%25E3%2582%2592%25E6%258C%2581%25E3%2581%25A4%25E3%2582%25AA%25E3%2583%2596%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AE%25E4%25B8%2580%25E6%25AC%25A1%25E5%2585%2583%25E9%2585%258D%25E5%2588%2597%25E3%2582%2592%25E3%2583%258D%25E3%2582%25B9%25E3%2583%2588%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E9%2585%258D%25E5%2588%2597%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/b925b018d43455",
          "author": "chida",
          "description": "TypeScriptの基本的な所は知っているけど、「あれの呼び方何って言うんだっけ？」とか「interfaceとtypeって何が違うんだっけ？」となりがちなので、その辺りをまとめてみました。\n\n 1. 基本\n覚えておきたいTSの基本的な構文や型\n\n インデックスシグネチャ\n[key: T]: Uという構文をインデックスシグネチャを呼びます。インデックスシグネチャのキーの型（T）は、numberかstringのどちらかでなければいけません。\n\n      \n        \n        interface NumberList {\n  [key: number]: string\n}\nc...",
          "link": "https://zenn.dev/chida/articles/b925b018d43455",
          "publishedOn": "2021-07-25T08:35:20.000Z",
          "wordCount": 732,
          "title": "【TypeScript】初歩的だけど忘れがちな構文",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--P8rYXlPa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590TypeScript%25E3%2580%2591%25E5%2588%259D%25E6%25AD%25A9%25E7%259A%2584%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25E5%25BF%2598%25E3%2582%258C%25E3%2581%258C%25E3%2581%25A1%25E3%2581%25AA%25E6%25A7%258B%25E6%2596%2587%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jojojo/articles/f58cc3d65f39b5",
          "author": "jojojo",
          "description": "こんにちは！\n最近個人で開発しているアプリで、ServerlessFrameworkで作成したプロジェクトでexpressを使うことがありました。その中で色々調べていたのですが、ymlを使って設定を書いているものが多く、tsファイルに設定を書いているものはあまり見つかりませんでした。\nですので本記事では、tsファイルで設定を書き、serverlessでexpressを使う方法を紹介していきます。\n\n 目次\n\nアプリの構成。この改修が必要になった理由\nserverlessアプリ作成\nserverless offlineインストール\nexpress, serverless-httpインストー...",
          "link": "https://zenn.dev/jojojo/articles/f58cc3d65f39b5",
          "publishedOn": "2021-07-25T06:53:19.000Z",
          "wordCount": 216,
          "title": "Serverless Frameworkで作成したプロジェクトでexpressを使う with TypeScript",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--grSGLC4j--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:jojojo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Serverless%2520Framework%25E3%2581%25A7%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2597%25E3%2581%259F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A7express%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2520with%2520TypeScript%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODk2ODYwNjVjMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "author": "だむは",
          "description": "Notion Blogでブログを開設しました\nちょっと前になりますが、Notion Blogでsisterのブログを開設したので、開設するまでの流れを書いてみようと思います。\n▼sisterのブログはこちらです↓\nhttps://blog.sisterwith.com/\n▼ Notion Blogはこちらです↓\nhttps://notion-blog.vercel.app/\n▼ 参考記事はこちらです↓\nhttps://blog.35d.jp/2020-05-23-notion-blog-1\n\n Notion Blogとは\nNotion Blog とは、Notion（バックエンド）で作...",
          "link": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "publishedOn": "2021-07-24T13:06:29.000Z",
          "wordCount": 274,
          "title": "【Notion】Notion Blogでブログ開設〜10分でできるもん〜（デプロイ〜ローカル環境構築まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4mMAgDe---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2582%2580%25E3%2581%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Notion%25E3%2580%2591Notion%2520Blog%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E9%2596%258B%25E8%25A8%25AD%25E3%2580%259C10%25E5%2588%2586%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2582%25E3%2582%2593%25E3%2580%259C%25EF%25BC%2588%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%259C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzk2NmZiMTdiNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/7d1fc9f0fb6538",
          "author": "kawarimidoll",
          "description": "先日、Deno標準ライブラリのバージョン0.102.0が公開されました。\nhttps://github.com/denoland/deno_std/releases/tag/0.102.0\nこちらで追加されたcollectionsというモジュールを紹介します。\nhttps://deno.land/std@0.102.0/collections\nその名の通り、集合の扱いを支援してくれるモジュールです。\nなお、READMEに載っているサンプルコードは記述にミスがあるのでそのままでは動作しません。\nPRが出ているのでそのうち解決されると思います。\nhttps://github.com/deno...",
          "link": "https://zenn.dev/kawarimidoll/articles/7d1fc9f0fb6538",
          "publishedOn": "2021-07-24T06:54:18.000Z",
          "wordCount": 808,
          "title": "Deno標準ライブラリ0.102.0で追加されたcollectionsの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Mv03ujOO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA0.102.0%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fcollections%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mouritania/articles/0ea0412deb4256",
          "author": "mouritania",
          "description": "こんにちは。もうりです。\nwebエンジニアとしてフロントエンド(React + Typescript)およびバックエンド(Rails)の開発をしています。\n未経験からエンジニアになって2ヶ月目の振り返りをします。\nぜひ最後まで読んでいただけると嬉しいです。\n1ヶ月目の振り返りは下のリンクから御覧ください。\nhttps://zenn.dev/mouritania/articles/9821ee3457aa10\n\n 今月のトピック\n今月は主にこんなことがありました。\n\nはじめての社外開発\nはじめて触れる技術(React, Typescript, Cypress, ActionMailer.....",
          "link": "https://zenn.dev/mouritania/articles/0ea0412deb4256",
          "publishedOn": "2021-07-24T00:32:32.000Z",
          "wordCount": 80,
          "title": "エンジニア1年生、2ヶ月目の振り返り",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qTI9p-dM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mouritania%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A21%25E5%25B9%25B4%25E7%2594%259F%25E3%2580%25812%25E3%2583%25B6%25E6%259C%2588%25E7%259B%25AE%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOThiMmMzMDE1Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "author": "dl10yr",
          "description": "こちらを参考にさせていただきながら（なぞりながら）やってみました。詳しい解説はこちらの方が良いです。\nhttps://sunday-morning.app/posts/2020-12-25-next-js-10-tailwind-2-hybrid-amp\n\n まずはNext.js × Tailwind.cssの環境構築\n以前自分が作ったコマンドを調整して（storybookを外して）環境構築を行いました。\nhttps://zenn.dev/dl10yr/articles/0e31819e983a28\n\n      \n        \n         git clone -b not-i...",
          "link": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "publishedOn": "2021-07-23T13:53:31.000Z",
          "wordCount": 299,
          "title": "Next.js × Tailwind.cssでAMP対応させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zK9HZAU_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25C3%2597%2520Tailwind.css%25E3%2581%25A7AMP%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sojiro/articles/3d678492f1d94b",
          "author": "So Koyama",
          "description": "Nest.js Version 8が7月7日にリリース!\nhttps://trilon.io/blog/announcing-nestjs-8-whats-new\n\n 新機能: API Versioning\nController及び各Routesをバージョン管理できるようになりました。\n\n 1.URI Versioning\nURIの中にVersion情報を含める。\n\n      \n        \n        import { VersioningType } from '@nestjs/common';\n\nconst app = await NestFactory.create...",
          "link": "https://zenn.dev/sojiro/articles/3d678492f1d94b",
          "publishedOn": "2021-07-23T06:52:48.000Z",
          "wordCount": 257,
          "title": "Nest.js Version8がリリースされたので新機能についてまとめる : API Versioning編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KjBjn6En--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:So%2520Koyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nest.js%2520Version8%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2520%253A%2520API%2520Versioning%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDE1YmJhYWI1YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ulcttku/articles/conversion-of-camel-case-and-snake-case-types",
          "author": "ulcttku",
          "description": "TypeScript で、(Lower)CamelCase な型を SnakeCase な型に、SnakeCase な型を(Lower)CamelCase な型に変換する型を作りました。\n具体的には、\n\n      \n        \n        type camelCase = SnakeToCamel<\"camel_case\">;\n// type camelCase = \"camelCase\"\n\ntype snakeCase = CamelToSnake<\"snakeCase\">;\n// type snakeCase = \"snake_case\";\n\n\n ...",
          "link": "https://zenn.dev/ulcttku/articles/conversion-of-camel-case-and-snake-case-types",
          "publishedOn": "2021-07-23T04:33:05.000Z",
          "wordCount": 883,
          "title": "CamelCase な型と SnakeCase な型の変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Z_yFO-Dv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ulcttku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CamelCase%2520%25E3%2581%25AA%25E5%259E%258B%25E3%2581%25A8%2520SnakeCase%2520%25E3%2581%25AA%25E5%259E%258B%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yamo/articles/prisma-express-rest-api",
          "author": "yamo",
          "description": "はじめに\n前から気になっていた Prisma を触ってみました。\n公式ドキュメントを読みながら、練習として Prisma + Express で REST API を作ってみました。\n自分と同じように入門してみたい人の参考になれば幸いです。\nソースコードはこちらになります。\nhttps://github.com/yamosan/prisma-rest-api\n\n 環境構築\n\n プロジェクトの作成\n\n      \n        \n        $ npm init -y\n\n\n      \n      \n パッケージのインストール\n必要なパッケージを予めインストールしていきます。\nつ...",
          "link": "https://zenn.dev/yamo/articles/prisma-express-rest-api",
          "publishedOn": "2021-07-22T16:45:04.000Z",
          "wordCount": 1654,
          "title": "prisma と express でつくる REST API",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--p0Sb5lw9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yamo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:prisma%2520%25E3%2581%25A8%2520express%2520%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2520REST%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTE1NjU5YzQyMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hokaccha/articles/a665b7406b9773",
          "author": "hokaccha",
          "description": "TypeScript version: v4.3.5\n元々やりたかったのは以下のようなこと。外部入力の文字列を Union Type にマッチするか検証してマッチしなければデフォルト値を返すみたいなやつ。\n\n      \n        \n        const colors = [\"red\", \"blue\", \"yellow\"] as const;\ntype Color = typeof colors[number];\nconst defaultColor = colors[0];\n\nfunction toColor(color: string): Color {\n  return...",
          "link": "https://zenn.dev/hokaccha/articles/a665b7406b9773",
          "publishedOn": "2021-07-22T13:58:02.000Z",
          "wordCount": 216,
          "title": "TypeScript で値が Union Type にマッチするかを検証したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kWi-b3Bm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hokaccha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%2520%25E3%2581%25A7%25E5%2580%25A4%25E3%2581%258C%2520Union%2520Type%2520%25E3%2581%25AB%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2581%2599%25E3%2582%258B%25E3%2581%258B%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpYWctanVyZUl3Q21TY0ZpclkwaUo0eXppaGZYekxOc1RfejZNX3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/karibash/articles/c093902e8294d1",
          "author": "Karibash",
          "description": "https://www.npmjs.com/package/@karibash/pixel-units\n\n 設計の大幅な見直し\n以前作成したライブラリをとある記事を参考に、クラスに依存しない設計へと大幅に改修を加え作り直しました。\nインスタンス化が不要になったのでパフォーマンスもたぶん上がってると思います。しらんけど。\n\n      \n        \n        // old\nconst pixel = new Pixel(16);\nconsole.log(`${pixel}`}\n// -> 16px\n\n// new\nconst pixel: Unit<'px'>...",
          "link": "https://zenn.dev/karibash/articles/c093902e8294d1",
          "publishedOn": "2021-07-22T12:06:19.000Z",
          "wordCount": 73,
          "title": "CSSの単位を型安全にしつつ相互に変換出来るライブラリを更新した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--_Q7MaULm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Karibash%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CSS%25E3%2581%25AE%25E5%258D%2598%25E4%25BD%258D%25E3%2582%2592%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A4%25E3%2581%25A4%25E7%259B%25B8%25E4%25BA%2592%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/5756a54d94230a",
          "author": "chida",
          "description": "概要\nリポジトリパターンは、データの操作（作成、削除など）をビジネスロジックから分離します。ビジネスロジック内でAxiosをインスタンス化すると単体テストが難しくなったり、各ファイルにエンドポイントの定義を書いている場合、そのエンドポイントが変わった時に多数のファイルを更新しなければいけません。\nリポジトリパターンはそのような問題を解決し、コードの柔軟性・保守性を高めてくれます。\n\n 実装\n\nAPIはJSONPlaceholderというサービスを使い、userを取得します\nリポジトリパターンのコードをすぐに動作確認したい場合は、CodeSandboxなどのオンラインエディタを使うと良...",
          "link": "https://zenn.dev/chida/articles/5756a54d94230a",
          "publishedOn": "2021-07-22T08:53:00.000Z",
          "wordCount": 165,
          "title": "Type Script × Axios リポジトリパターン",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JbDSCruK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Type%2520Script%2520%25C3%2597%2520Axios%2520%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fujiyama/articles/53ec18ca9367e8",
          "author": "Fujiyamayama",
          "description": "始めに\nReactのhooksを使うことは多いと思うのですが，recoilでログインユーザーの状態管理を勉強しているときにカスタムフックをちゃんと勉強しようと思ったのでまとめます.\n\n 公式解説\n公式にチャットアプリでのフレンドがオンラインかどうかを示すコンポーネントがありました．\n\n      \n        FriendStatus.tsx\n        import React, { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnli...",
          "link": "https://zenn.dev/fujiyama/articles/53ec18ca9367e8",
          "publishedOn": "2021-07-22T07:40:34.000Z",
          "wordCount": 190,
          "title": "【連休】Reactのカスタムフックを勉強してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--6XxyiNox--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Fujiyamayama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E9%2580%25A3%25E4%25BC%2591%25E3%2580%2591React%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hlMHpabHhNbXBzTEQ4NlJqZTFGUnVJd1dBcTJFNUxXWkd3S0U4QVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kondo_script/articles/adef37669545a1",
          "author": "kondo_script",
          "description": "前編の続きです\n\n 要約\n\nAndroid/iOSともに殆どネイティブアプリを触ったことがない人が頑張った話\n\nKotlin/Objective-Cデビューしながらの体験記です\n誤記/誤解などありましたらDiscussionで教えてください🙏\n\n\nReact Native 対応は結構しんどい\n\n公式から RN のライブラリは出ていない  - サンプル はある\nkotlin/Objective-Cの知識が必要\nios/androidともにシミュレータだと動作に問題があるため開発には 実機が必須 となる\n\n\n\n\n 前提 amazon-chime-sdkとreact-native\n公式からre...",
          "link": "https://zenn.dev/kondo_script/articles/adef37669545a1",
          "publishedOn": "2021-07-21T15:00:39.000Z",
          "wordCount": 155,
          "title": "amazon-chime-sdk でWebとReact Nativeでビデオ通話ができるアプリを作る(後編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--hbcZezl---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kondo_script%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:amazon-chime-sdk%2520%25E3%2581%25A7Web%25E3%2581%25A8React%2520Native%25E3%2581%25A7%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E9%2580%259A%25E8%25A9%25B1%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528%25E5%25BE%258C%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzdhYjk3MmU5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mryhryki/articles/2021-07-21-parse-cloudfront-logs",
          "author": "Moriya Hiroyuki",
          "description": "はじめに\nCloudFront のログを解析して、リクエストされたパスごとの転送容量を出したい、という場面があったので、その時にやったことのメモです。\n半分は備忘録として、半分は誰かやってみたい人もいるかも、と思ったので書き残しておこうと思った次第です。\n\n CloudFront のログ\nCloudFront で設定しておけば、S3バケットに出力されます。\n詳しくはこちらの公式ドキュメントをご覧ください。\nhttps://docs.aws.amazon.com/ja_jp/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html\n\n...",
          "link": "https://zenn.dev/mryhryki/articles/2021-07-21-parse-cloudfront-logs",
          "publishedOn": "2021-07-21T09:55:56.000Z",
          "wordCount": 473,
          "title": "CloudFront のログを JS (TS) で分析する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--i5w7bVVI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Moriya%2520Hiroyuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CloudFront%2520%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%2520JS%2520%2528TS%2529%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pqUDk2YWdEUGQzSllKWi1DT0NlemZQcVVvOVVHRmR0Q3p3UTF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/wok/articles/0017_multi-players-gameplay-with-chime",
          "author": "wok",
          "description": "この記事は、こちらの記事を改変したものになります。\nhttps://cloud.flect.co.jp/entry/2021/07/21/113845\n\nこんにちは。\nオリンピックの開催が間近になりましたが、最近はデジタルの界隈でもe-sportsがにわかに注目を集め始めていますね。これを後押しするというわけでもありませんが、今回はAmazon Chime SDK JSを用いてマルチプレイヤーゲームの実況配信システムを作ってみたいと思います。特に今回は、公式がファン創作についてポリシーを明確にしてくれているAmong Usを題材にしてみようと思います(ref)。\n具体的には下図のような...",
          "link": "https://zenn.dev/wok/articles/0017_multi-players-gameplay-with-chime",
          "publishedOn": "2021-07-21T02:41:12.000Z",
          "wordCount": 223,
          "title": "マルチプレイヤーゲーム実況システムをAmazon Chime SDK JSで作る。 - Among Us Auto Mute -",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--nit7nRdd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:wok%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E5%25AE%259F%25E6%25B3%2581%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592Amazon%2520Chime%2520SDK%2520JS%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2582%2520-%2520Among%2520Us%2520Auto%2520Mute%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZemxmeFk4WFJDTHJzM1VvRWI2YmI0cEVhem1kTDg5ejFXQnFZdVE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tak_iwamoto/articles/8b32b27bd577b1",
          "author": "tak_iwamoto",
          "description": "Ptera\n\nDenoのDateTimeライブラリであるPteraをリリースしたので、その紹介(宣伝)をします。\n素敵なロゴはDenoのイラストを数多く書いてらっしゃる hashrockさんにデザインしていただきました！\nこれまでNode.jsのライブラリはMoment.js、Day.js、Luxon、date-fns\nなどいくつか選択肢がありました。\nただ、Denoで書かれているThird Partyライブラリは自分が調査した限り見当たらなかったので、作ってみました。\n\n Getting Started\nメインで使用するAPIはdatetimeです。\n引数なしの場合、ローカルの現在...",
          "link": "https://zenn.dev/tak_iwamoto/articles/8b32b27bd577b1",
          "publishedOn": "2021-07-20T00:48:58.000Z",
          "wordCount": 360,
          "title": "DenoのDateTimeライブラリPteraをリリースしました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kw-t9byB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tak_iwamoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E3%2581%25AEDateTime%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAPtera%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYWZjMDRlNjU3OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/himenon/articles/4c6d7ed8b7df30",
          "author": "Himenon",
          "description": "配列操作を利用した検索機能を紹介します。UI化することで利便性が一気に向上する機能を紹介します。\n\n DEMO\nまずはデモです。入力欄に適当なアルファベットを入力することで、続くリストが増減します。\n\n※ DemoのサンプルデータはWikipediaのプログラミング言語を利用しています。\n\n 基本的な仕組み\n基本的な仕組みはfitlerを利用した配列操作です。\n\n      \n        \n        [\"a\", \"b\", \"c\"].filter((text) => {\n  return text === \"a\";\n});\n// #=> [\"a\"];\n\n\n      ...",
          "link": "https://zenn.dev/himenon/articles/4c6d7ed8b7df30",
          "publishedOn": "2021-07-19T12:36:13.000Z",
          "wordCount": 169,
          "title": "Reactで作る簡易検索機能",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s---kmYUMvB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Himenon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:React%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%25B0%25A1%25E6%2598%2593%25E6%25A4%259C%25E7%25B4%25A2%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDJhOTlkZTcwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "author": "白雀",
          "description": "Next + typescript で i18n 対応し、SSR、SSG を行う example\n本項では、Next を使用して i18n 対応(SSR, SSG)を方法を解説します。\n\n 記事の要約\n\n\nnext-i18nextを使うとi18nextを使用して、SSR、SSG を比較的手軽に行う事ができる\n\nreact-i18nextは typescript 対応を行っているので、.d.tsでネームスペースごとに追加の定義を行うと便利\n\n参考\n\n\ni18n 対応時はnext-seoが便利\n\ni18n 対応していない場合も便利\ni18n 対応時はalternatesの設定をきちんとす...",
          "link": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "publishedOn": "2021-07-19T10:11:01.000Z",
          "wordCount": 801,
          "title": "Next + typescript で i18n対応し、SSR、SSGを行うexample",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--w9oO3BM3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%2599%25BD%25E9%259B%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next%2520%252B%2520typescript%2520%25E3%2581%25A7%2520i18n%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2580%2581SSR%25E3%2580%2581SSG%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODcyNGZlMmIxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eitches/articles/2021-0719-api-routes-http-request-type",
          "author": "eitches",
          "description": "前提\nNext.jsでAPI Routesを使用する際、以下のようなコードを書くと思います。\n\n      \n        \n        const handler = (req, res) => { \n  res.status(200).json({ ... })\n}\n\nexport default handler\n\n\n      \n      このreq, resに型をつける方法がわからなかったので調べました。\n\n Next.jsの公式ページを確認する\n公式ページのAPI Routesの部分にreq, resについての情報がありました。\nhttps://nextjs....",
          "link": "https://zenn.dev/eitches/articles/2021-0719-api-routes-http-request-type",
          "publishedOn": "2021-07-19T09:47:20.000Z",
          "wordCount": 180,
          "title": "[Next] API Routesのreq, resの型について",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--rkD4xzJB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eitches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNext%255D%2520API%2520Routes%25E3%2581%25AEreq%252C%2520res%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzZkOTA5ZTVjNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hiroga/articles/vscode-trigger-suggestion-macos",
          "author": "hiroga",
          "description": "VSCodeでTypescriptを書くときに、「一文字も入力していないんだけど、予測変換が出てほしいな...」と思うことはありませんか？\nそれ、Trigger Suggestion で可能です。macOSユーザーで「何それ？」って人は、私のようにOSのショートカットと衝突しているせいで見逃しているかもしれないです。\n\n デモ\nCtrl + Spaceでショートカットを表示しています。\n\n\n Trigger Suggestionについて\nVSCodeには Trigger Suggestionというショートカットがあります。\nいまVSCodeを開いている人は、Cmd + Shift + P...",
          "link": "https://zenn.dev/hiroga/articles/vscode-trigger-suggestion-macos",
          "publishedOn": "2021-07-18T12:22:01.000Z",
          "wordCount": 79,
          "title": "VSCodeのTrigger Suggestionの紹介と、macOSで有効化するための工夫",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KojUJ8-g--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hiroga%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%25E3%2581%25AETrigger%2520Suggestion%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E3%2580%2581macOS%25E3%2581%25A7%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%25B7%25A5%25E5%25A4%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sprout2000/books/9325fe6c9c1ba9",
          "author": "sprout2000",
          "description": "TypeScript を使ってオリジナルの NPM パッケージを作ろう！",
          "link": "https://zenn.dev/sprout2000/books/9325fe6c9c1ba9",
          "publishedOn": "2021-07-18T08:17:52.000Z",
          "wordCount": 22,
          "title": "NPM パッケージ作成講座",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--A6tGhsjn--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zZWQwMWM3Mjc1LmpwZw==%2Cw_200/v1604564438/og_book_base_ndpqis.jpg",
            "length": "0",
            "type": "image/jpeg"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/cec625e3b6aa7b",
          "author": "chida",
          "description": "はじめに\nMockとStubの違いをソースコードレベルで理解出来ていないと思い、記事を書いて整理してみました。色々検索して調べましたが、もし間違えている箇所がありましたら、ご指摘いただけると有り難いです。\n\n Test Doubleとは\nTest Doubleは、テストの対象が他のモジュール（クラスや関数など）に依存している場合、その代役として使われるモジュールのことです。\nTestsDoublesの作成者であるGerardMeszarosによると、Test Doubleは5つのカテゴリに分類できます。その中でも今回は、JestでMockとStubについて書きます。\n\nhttp://...",
          "link": "https://zenn.dev/chida/articles/cec625e3b6aa7b",
          "publishedOn": "2021-07-18T07:24:04.000Z",
          "wordCount": 248,
          "title": "【Test Double】JestでMockとStubを確認する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--SEVL0QjM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Test%2520Double%25E3%2580%2591Jest%25E3%2581%25A7Mock%25E3%2581%25A8Stub%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ezryow/articles/08d8a7bf16ac1f",
          "author": "EZryow",
          "description": "いつも忘れてしまうので，書きます．\nHogeButton.svelteがあります．\n\n      \n        \n        <button on:click>ClickMe</button>\n\n\n      \n      on:clickは通常on:click={f}などの形式で，呼び出し関数を波括弧の中に書きますが，上記例では何も書いていません．\nそして，propsとして呼び出したい関数は次のような形式で渡します．\n\n      \n        \n        <script lang=\"ts\">\n    import HogeButt...",
          "link": "https://zenn.dev/ezryow/articles/08d8a7bf16ac1f",
          "publishedOn": "2021-07-18T06:18:48.000Z",
          "wordCount": 30,
          "title": "【Svelte】on:clickで呼ばれる関数をpropsとして渡す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Dglz5Ye3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:EZryow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Svelte%25E3%2580%2591on%253Aclick%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B0%25E3%2582%258C%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592props%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%25B8%25A1%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzVkYzllOWQ1NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/20920804228834",
          "author": "yukihirop",
          "description": "はじめに\nこの記事はvue-i18nの翻訳ファイルをコンポーネント毎に管理したいという思いで書いた前回の記事の改良版です。\nhttps://zenn.dev/yukihirop/articles/b36c43014355fd\n前回のやり方が「ほぼタラバガニ」なら今回のやり方は「タラバガニ」です。🦀\n前回のやり方には以下の問題がありました。\n\n      \n        \n        - $etという$tを拡張したグローバルなプロパティーをVueプラグインで用意しなくちゃいけなかった\n- 生成物にファイル構造が分かってしまう情報が出てしまう\n - 翻訳のルートキーをSFCへの相対...",
          "link": "https://zenn.dev/yukihirop/articles/20920804228834",
          "publishedOn": "2021-07-18T05:34:39.000Z",
          "wordCount": 397,
          "title": "vue-i18nの翻訳をyamlファイルかつコンポーネント(SFC)毎にする普通ではない方法[改良版]",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4JjmdK_m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592yaml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2581%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%255B%25E6%2594%25B9%25E8%2589%25AF%25E7%2589%2588%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "author": "15",
          "description": "まえがき\nこのあたりを参考に環境構築をしたが、そのままでは動かない or 好みに変えたい部分があったので自分の手順を作ってみた。\n詳しい手順の理解が必要であればリンク先を参照してほしい。\nhttps://zenn.dev/66ed3gs/articles/99aa613a86f21f\nhttps://zenn.dev/januswel/articles/402774d76424e71ac906\n\n create-next-app\nts版で実行する。\n\n      \n        \n        npx create-next-app --ts sample-app\ncd samp...",
          "link": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "publishedOn": "2021-07-18T04:27:20.000Z",
          "wordCount": 104,
          "title": "Next.js 開発環境構築メモ 2021年7月版 - Yarn, TypeScript, ESLint, Prettier, VSCode",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JOauVqs9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:15%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2583%25A1%25E3%2583%25A2%25202021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2520-%2520Yarn%252C%2520TypeScript%252C%2520ESLint%252C%2520Prettier%252C%2520VSCode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "author": "minguu",
          "description": "はじめに\nこの記事では, Firebase Authentication を使って TypeScript を使用した Next アプリに Google ログインを実装する方法を記述します.\nJavaScript を使用した Next アプリに Google ログインを実装する方法はこちらに記述しています.\nこの記事が他の人の参考になれば幸いです.\nまた, この記事の内容に間違った記載がありましたら, 指摘してもらえるとありがたいです.\n\n 環境\n\n\n\n名前\nバージョン\n\n\n\n\nmacOS Big Sur\n11.4\n\n\nNode.js\n16.4.1\n\n\nTypeScript\n4.3.5...",
          "link": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "publishedOn": "2021-07-18T00:16:08.000Z",
          "wordCount": 542,
          "title": "Next.js（TypeScript）で Firebase を利用し, Google ログインを",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZjMUES8F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minguu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25EF%25BC%2588TypeScript%25EF%25BC%2589%25E3%2581%25A7%2520Firebase%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%252C%2520Google%2520%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lMaU1RSm1OSlUyZXBOWldpcWpTOTV6eXBVeFQxSDRjU2FVVUNvbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "author": "sasigume",
          "description": "ずっとNext.jsを使っていたんだが、Nuxt.jsに切り替えるにあたって何回も挫折したので、正直二度とやりたくないが 一応メモする。\n\n最終更新: 2021年7月17日\n筆者はNuxtに関しては初心者ですので、細かい説明が不正確かもしれません。また、Vue/Nuxtはすごい速度で進化しています。仕様変更に注意してください\n\n\n 何をセットアップするか\n\n\nyarn create nuxt-appで以下を済ませる\n\nTypeScript化\nPrettier+ESLint\nTailwindCSS対応\nPWA対応\n\n\nコンフィグをTS化する\n\nsrcディレクトリにまとめる\nOGPを設定する...",
          "link": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "publishedOn": "2021-07-17T13:08:22.000Z",
          "wordCount": 689,
          "title": "Nuxt+TS+CompositionAPI+Vercel+VSCodeのセットアップ手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--I8cpjTY0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasigume%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%252BTS%252BCompositionAPI%252BVercel%252BVSCode%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYmMzZWY2ZjdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/b36c43014355fd",
          "author": "yukihirop",
          "description": "はじめに\nvue-i18nを使っている人なら一度や二度は翻訳のキーのつけ方に悩んだ人は多いかと思います。\nしかも複数人で開発していると人によってキーのつけ方の癖が違ったり、ルール化していてもそのルールを常に意識しながら開発するのは辛いです。そういう問題に対しての一つの解決策を提示してみようかと思います。\n「コンポーネント専用の翻訳ファイルでルートキーがユニークならそれに続くキーは適当でも大して問題ないのではないか？ キーのつけ方が適当になってしまったとしてもそれはそのコンポーネントの翻訳で閉じているし、影響範囲は明確なので大して問題ないのではなかろうか？」\nです。\n\n 環境\n\nvue...",
          "link": "https://zenn.dev/yukihirop/articles/b36c43014355fd",
          "publishedOn": "2021-07-17T11:27:48.000Z",
          "wordCount": 476,
          "title": "vue-i18nの翻訳をコンポーネント(SFC)毎にする普通ではない方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ctKAMofK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/54d9167e7b5624",
          "author": "hashito",
          "description": "現象\n\n      \n        \n        type History=Array<string>;\nhistory:History=new History();\n\n\n      \n      下記のようなエラーが出る。\n\nTS2693: 'History' only refers to a type, but is being used as a value here.\n\n\n 解決\n下記のように修正すれば解決される。\n\n      \n        \n        type History=Array<string>;\nhistory:Histo...",
          "link": "https://zenn.dev/hashito/articles/54d9167e7b5624",
          "publishedOn": "2021-07-17T00:31:52.000Z",
          "wordCount": 39,
          "title": "TypeScriptでベース配列型で新しい型を作って初期化するとエラーになる。",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--8mGXOq_Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E9%2585%258D%25E5%2588%2597%25E5%259E%258B%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jpn_asane/articles/d7f44682b74fdc",
          "author": "Asane",
          "description": "環境構築をしっかりするメリット\n正直な話、React+TypeScriptは公式にあるコマンドを一個打ち込めばプロジェクト自体は出来ます。\n環境構築がめんどくさくてそれだけで済ませていた人も多いと思いますが、今回紹介する環境構築をする事で、様々なメリットがあります。\n\nチーム制作などでコーディングルールを厳格化できる\n->チーム一人一人が我流のコーディングをすると誰も読み取る事が出来ないモノが完成します。\n初心者のうちからコーディングの変な癖をなくす\n->初心者のうちから変な癖がついてしまうと、修正するのが大変です。\nコーディングの穴をなくす\n->JavaScrip...",
          "link": "https://zenn.dev/jpn_asane/articles/d7f44682b74fdc",
          "publishedOn": "2021-07-15T18:19:10.000Z",
          "wordCount": 536,
          "title": "React+TypeScript+ESLint+Prettierをまとめて環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--K9drwuRx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Asane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%252BTypeScript%252BESLint%252BPrettier%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kwbnYxXzJnTFZYYWQ4TzlvRWR1cW5ZVnlTem1iMVktNm5VRm9Lanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "author": "Eringi_V3",
          "description": "フロントエンドアプリケーションの開発を行う上で避けては通れないデータフェッチの実装。\nREST APIを使うか、GraphQLを使うか、クライアントでキャッシュするか、APIレスポンスにどのようにして型を付けるか、状態管理はどうするのかなど、開発者の悩みが尽きないけれども、それに関しての設計を考えたり議論を行うのはフロントエンド開発の楽しいポイントだと僕は思っています。\nこの記事では、バックエンドにHasura、フロントエンドにNext.jsを使用する場合に僕が最強だと感じたツールの組み合わせ・使い方を紹介します。\n\n モチベーション\n\nAPIからのレスポンスにはTypeScriptの型...",
          "link": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "publishedOn": "2021-07-15T15:16:24.000Z",
          "wordCount": 768,
          "title": "ぼくのかんがえたさいきょうのデータフェッチ 2021Summer🏄‍♂️【Next.js / Hasura】",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--82ifwyxV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Eringi_V3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2581%25BC%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25E3%2582%2593%25E3%2581%258C%25E3%2581%2588%25E3%2581%259F%25E3%2581%2595%25E3%2581%2584%25E3%2581%258D%25E3%2582%2587%25E3%2581%2586%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%25202021Summer%2520%25E3%2580%2590Next.js%2520%252F%2520Hasura%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDU2Y2U2YjAzNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f0c4c0441b4cd2",
          "author": "hashito",
          "description": "問題\n下記のように|undefinedなどがある場合に、HTML上で参照しようとすると、下記のようなエラーが出る。\n\n      \n        \n        import {\n  Component\n} from '@angular/core';\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: { name: string; a...",
          "link": "https://zenn.dev/hashito/articles/f0c4c0441b4cd2",
          "publishedOn": "2021-07-15T13:42:14.000Z",
          "wordCount": 72,
          "title": "Angularでundefinedな可能性のある要素を表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kMevm_1R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Angular%25E3%2581%25A7undefined%25E3%2581%25AA%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f9b9c2401e0318",
          "author": "hashito",
          "description": "結論\n下記のようにする。\n\n      \n        \n        import {\n  Component,\n  ViewChild,\n  AfterViewInit,\n  OnInit,\n  ElementRef\n} from '@angular/core';\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterVi...",
          "link": "https://zenn.dev/hashito/articles/f9b9c2401e0318",
          "publishedOn": "2021-07-15T13:19:13.000Z",
          "wordCount": 89,
          "title": "Angularで生のDOMを操作する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ClAKpmku--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Angular%25E3%2581%25A7%25E7%2594%259F%25E3%2581%25AEDOM%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ibaraki/articles/7a6368bdfb890f",
          "author": "いばらき",
          "description": "やりたかったこと\nNode.jsでAPIを書いたら、OpenAPIドキュメントを自動生成して欲しい\n\n 背景\nAPIを書く場合に使うFrameworkにおいてPythonではDjangoやFlaskが有名ですが、最近注目されているFrameworkにFastAPIというものがあります。FastAPIは、動作がNode.js並に早いとか習得が容易といった特徴もありますが、コードを書くと自動でOpenAPIドキュメントを作ってくれてwebインターフェースも用意してくれる機能がとても便利です。\n詳しくは知りたい方は、ドキュメントを読んでください。\nhttps://fastapi.tiang...",
          "link": "https://zenn.dev/ibaraki/articles/7a6368bdfb890f",
          "publishedOn": "2021-07-15T12:17:44.000Z",
          "wordCount": 228,
          "title": "Node.js環境で、PythonのFastAPIみたいなOpenAPIドキュメント自動生成を求めて、Fastifyに手を出してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s---YQTuKwp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Node.js%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581Python%25E3%2581%25AEFastAPI%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AAOpenAPI%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2580%2581Fastify%25E3%2581%25AB%25E6%2589%258B%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/terrierscript/articles/2021-07-13-i18n",
          "author": "terrierscript",
          "description": "Reactアプリケーションをi18nをするにあたって、t(\"Hello\", \"こんにちは\")のように日本語をfallback値として設定するようにしたらわりと良かったのでまとめる\n\n 前提\nあくまで今回の話は下記のような前提としている。\n\n小規模で、複雑な多言語化処理を要する部分が少ない\n日本語から他言語への変換である\n多言語化の種類は少なく、多言語化後も日本語が中心。\n組織のコミュニケーションパスが少なく、実装者がUIを変更する事が出来る環境である\n\n\n 準備\n本題に入る前の前提として、ライブラリと外部サービス選びについて。\n\n ライブラリ選び\ni18n自体はマッピングさえできれば十分...",
          "link": "https://zenn.dev/terrierscript/articles/2021-07-13-i18n",
          "publishedOn": "2021-07-14T10:10:29.000Z",
          "wordCount": 363,
          "title": "小規模環境のi18nで、t(\"Hello\",\"こんにちは\")のように日本語をfallbackに入れる運用したら良かった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jFMxq2rh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:terrierscript%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E5%25B0%258F%25E8%25A6%258F%25E6%25A8%25A1%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEi18n%25E3%2581%25A7%25E3%2580%2581t%2528%2522Hello%2522%252C%2522%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AB%25E3%2581%25A1%25E3%2581%25AF%2522%2529%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592fallback%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E8%2589%25AF%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTQwYmE4ZjQ3ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/magurotuna/articles/deno-release-note-1-12-0",
          "author": "magurotuna",
          "description": "Copyright (c) 2018-2021 the Deno authors. MIT License.\n日本時間の昨日（2021 年 7 月 13 日）に Deno の v1.12.0 がリリースされました。\nhttps://deno.com/blog/v1.12\n詳細なリリース内容は上記のリリースノートにまとまっていますが、ざっと紹介していきたいと思います。\n\n\ngenerateKey, sign, verify の3つの Web Crypto API がサポート\nネイティブ HTTP サーバーでの WebSocket サポート\nREPL における TypeScript のサポ...",
          "link": "https://zenn.dev/magurotuna/articles/deno-release-note-1-12-0",
          "publishedOn": "2021-07-14T04:30:36.000Z",
          "wordCount": 1065,
          "title": "Deno 1.12.0 がリリースされたので新機能や変更点の紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--1058S3yy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:magurotuna%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25201.12.0%2520%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2584%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNUGF0cWN1MUh1d1dEcG5uVzRETFVxZlI5aDlOM1NFc3FmaWdYZkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/e3e598ff8c6dd3",
          "author": "mattun",
          "description": "こちらの記事の続きです。\nhttps://zenn.dev/makumattun/articles/474fbe08a5111c\n※この記事ではEventStoreとmain関数の流れまでを紹介します。\nこの部分\n\n\n イベントソーシングでテーブル格納時にやりたいこと\nやりたいこと\n・一つのテーブルにすべてのイベントを格納したい\n・複数のドメインイベントをAcidに登録したい\n・整合性を持たせるために誤って２回登録のイベントが発火されたときは失敗させたい\nここらへんを満たすようにテーブルの設計をする必要があります。\n\n DynamoDBのインデックス設計\nごちゃごちゃ記載するよりも、Ev...",
          "link": "https://zenn.dev/makumattun/articles/e3e598ff8c6dd3",
          "publishedOn": "2021-07-14T01:20:29.000Z",
          "wordCount": 334,
          "title": "Serverless FrameworkとTypeScriptでCQRSを実現する 実装編1",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--nnaTDmGm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Serverless%2520Framework%25E3%2581%25A8TypeScript%25E3%2581%25A7CQRS%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2520%25E5%25AE%259F%25E8%25A3%2585%25E7%25B7%25A81%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sykmhmh/articles/086eef9300ac2d",
          "author": "sykmhmh",
          "description": "概要\nViteで、React17以降のJSXトランスフォームに対応する方法です。\nhttps://ja.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n\n 動機\nReact16以前では、JSXを利用するには明示的にReactをインポートする必要がありましたが、React 17以降は新しいトランスフォームの方法が提供され(現在は16以前のバージョンでも提供されています)、babelやtsconfigの設定を変更することで明示的にReactをインポートせずともJSXが利用できるようになりました。\nしかし...",
          "link": "https://zenn.dev/sykmhmh/articles/086eef9300ac2d",
          "publishedOn": "2021-07-13T14:13:21.000Z",
          "wordCount": 55,
          "title": "ViteでReact17以降のJSXトランスフォームに対応する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--MHxN-etN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sykmhmh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vite%25E3%2581%25A7React17%25E4%25BB%25A5%25E9%2599%258D%25E3%2581%25AEJSX%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTAxZTBjZDM5OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "author": "syuri",
          "description": "ドラムロールとは・・・\n数字がじゃかじゃか回るやつです。\n今回は数字が画面内に入ってきたら、数字のドラムロールが開始されるというアニメーションをプラグインを使わずに実装したいと思います。(Nuxt＋Typescriptで開発しています。)\n\n\n 目次\n最初に考えた方法\nもうちょっと賢い方法\n最終型を見たい方はもうちょっと賢い方法から見てください。\n\n 最初に考えた方法\nまずはコードから。\n\n      \n        \n        <div data-destination=\"2000\"　class=\"number\">0</div>\n\n\n      \n   ...",
          "link": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "publishedOn": "2021-07-13T13:58:19.000Z",
          "wordCount": 626,
          "title": "Vueでドラムロールを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZEgqWODG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syuri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kupuma_ru21/articles/bb3d32e6e27102",
          "author": "くぷまーる",
          "description": "apollo graphqlを使ったUIテストのセットアップをしてみました。\n備忘録で残します。\nテストはreact-tesing-liblaryで行います。\n以下、テスト対象のアプリです。\nhttps://github.com/kupuma-ru21/apollo_relay_style_cursor_pagination\n(以前、書いた記事にテスト対象のアプリの作成方法を記載してます。読まなくてもできるように進めたいと思います。)\nhttps://zenn.dev/kupuma_ru21/articles/f56148ffcac7b0\n\n\n 前提\nまず、普通にreact-tesing...",
          "link": "https://zenn.dev/kupuma_ru21/articles/bb3d32e6e27102",
          "publishedOn": "2021-07-13T13:14:30.000Z",
          "wordCount": 352,
          "title": "apollo graphqlアプリのUIテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Sn0THC1Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25B7%25E3%2581%25BE%25E3%2583%25BC%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:apollo%2520graphql%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEUI%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjFkZGYxMjM1My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/huequica/articles/fix_module_decralation_in_vscode",
          "author": "Haru_Yakumo",
          "description": "悲しい時～～～～～悲し以下略\nJestには ModuleNameMapper なる、テスト対象のオブジェクトを import してくる際にパス名を特定の prefix で代用する機能があります。\n例えば、以下のようなディレクトリ構成のプロジェクトであると仮定します。\n\n      \n        \n        $ tree  -L 1\n.\n├── LICENSE\n├── README.md\n├── dist\n├── jest.config.js\n├── node_modules\n├── package.json\n├── src\n├── tests\n├── tsconfig.json...",
          "link": "https://zenn.dev/huequica/articles/fix_module_decralation_in_vscode",
          "publishedOn": "2021-07-12T18:13:43.000Z",
          "wordCount": 229,
          "title": "JestでModuleNameMapperを使うとVSCodeくんがモジュール参照してくれない時～～",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--3M_W_Pp6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Haru_Yakumo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Jest%25E3%2581%25A7ModuleNameMapper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8VSCode%25E3%2581%258F%25E3%2582%2593%25E3%2581%258C%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25EF%25BD%259E%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDRUNJM2xDR3ZjNWNrYWN6QVFIcm5QeTZTS2VsX3lZOFNKM05jMVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "author": "JQinglong",
          "description": "タイトル長すぎですね。途中で切れました。\n本当は\n\n Nuxt TypeScript（Composition API）、Django REST Framework で、Docker Compose上での開発基盤を作る\nこいつの続きというか。\nhttps://zenn.dev/jqinglong/scraps/168d1bb5dd4832\nこの悪戦苦闘の結果、まあまあ良い構成ができたと思っており、それを使って、さらにもう一つアプリを作ってます。スッキリいくと思うので、そのスッキリした記録を残そうと思ったのですが、そうは問屋はおろさず・・・それでも、上記よりは落ち着いてできたので、こちらに残...",
          "link": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "publishedOn": "2021-07-12T12:49:03.000Z",
          "wordCount": 2610,
          "title": "Nuxt TypeScript（Composition API）、Django REST Framework で、・・・",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4GeR-cU7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JQinglong%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nuxt%2520TypeScript%25EF%25BC%2588Composition%2520API%25EF%25BC%2589%25E3%2580%2581Django%2520REST%2520Framework%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGS0FRWHBJUllSRHdIbVgyb1dHSUwyLTd4RHZ5RkN3Zkw3OThnTUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f24b066962f58d",
          "author": "hashito",
          "description": "背景\nAngularでServiceを作成して下記の一文を入れておくとクラスがシングルストン構成となるはずです。\n\n      \n        \n        @Injectable({\n  providedIn: 'root'\n})\n\n\n      \n      シングルストン構成とは、アプリケーション上単一のインスタンスしか持たいない構成で、通常のクラスは複数の実態を持つが、シングルストンなクラスはどこからアクセスしても単一な実態へアクセスすることになります。\n詳しくは下記。\nhttps://ja.wikipedia.org/wiki/Singleton_パターン\nこれで構成...",
          "link": "https://zenn.dev/hashito/articles/f24b066962f58d",
          "publishedOn": "2021-07-11T23:32:45.000Z",
          "wordCount": 84,
          "title": "AngularでRoutingしてもServiceが再作成されるときの原因",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Z4Egesx3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Angular%25E3%2581%25A7Routing%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582Service%25E3%2581%258C%25E5%2586%258D%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210",
          "author": "ryo_kawamata",
          "description": "GAS を書くたびに開発環境構築を調べている気がするので、GAS 開発用の Template リポジトリを作ってみました。\n\n Templateリポジトリ\nhttps://github.com/kawamataryo/google-app-script-starter-template\n機能はこちらです。\n\n\nclaspによる App Script へのデプロイ\nTypeScript 対応\nWebpack5 でのビルド※\n\nESLint / prettier でのコード整形\n\nhusky / lint-stage でのプレコミットフック\n\n\nClasp を使えば TypeScrip での...",
          "link": "https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210",
          "publishedOn": "2021-07-11T23:15:22.000Z",
          "wordCount": 167,
          "title": "Google App Script 開発 のための Templateリポジトリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vtNuzhZt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520App%2520Script%2520%25E9%2596%258B%25E7%2599%25BA%2520%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Template%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/schrosis/articles/ec2e43e2bd72c2",
          "author": "シュレシス",
          "description": "作ったもの\n以下のテストが通る Find 型\n\n型テストのための Equal ,  Expect は @type-challenges/utils の型\n\n\n      \n        \n        import { Equal, Expect } from '@type-challenges/utils'\n\ntype Lang = 'TypeScript'|'PHP'|'Swift'|'Python'\n\ntype cases = [\n  // 配列側が確定していて、探す要素が1通りしかないとき\n  // 探していた要素か undefined を明確に返す\n  Expect&l...",
          "link": "https://zenn.dev/schrosis/articles/ec2e43e2bd72c2",
          "publishedOn": "2021-07-11T20:08:43.000Z",
          "wordCount": 471,
          "title": "TypeScriptでFind型を作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Wv-8UTqb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25AC%25E3%2582%25B7%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7Find%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmJiNzM1MzgxMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kanasugi/articles/368d0b39c94daf",
          "author": "Kanasugi",
          "description": "TL;DR\nnew PrismaClient() を複数回書いてる可能性があるので、\nroot直下でlibのようなファイルを作り、そこで、PrsimaClientのインスタンスを１度だけ生成し、そこからimportする形で、PrismaClientのインスタンスを使用すれば解決。\n\n 概要\nPrismaを使用している時、\nwarn(prisma-client) Already 10 Prisma Clients are actively runningというメッセージがコンソールに表示されることがある。\n本番Build時にこの箇所が原因で、DBのコネクション数の制限のエラーになること...",
          "link": "https://zenn.dev/kanasugi/articles/368d0b39c94daf",
          "publishedOn": "2021-07-11T15:45:42.000Z",
          "wordCount": 124,
          "title": "warn(prisma-client) Already 10 Prisma Clients are actively runningの対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q6sKV5JH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kanasugi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:warn%2528prisma-client%2529%2520Already%252010%2520Prisma%2520Clients%2520are%2520actively%2520running%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDMwZjhjZDhmOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/474fbe08a5111c",
          "author": "mattun",
          "description": "CQRS イベントソーシングやってますか？\nなかなかCQRSとイベントソーシングを個人でちゃんとやろうと思うと難しいですよね。\nそして本気でパフォーマンス考えるならスナップショットなども考慮してAkka一択な感じがありますよね。\nでもそれなりのパフォーマンスを実現するのであれば、\nそれを実現できるデータベースはいくつかあります。そうDynamoDBもね！\n\n 参考\nhttps://zenn.dev/j5ik2o/articles/368e0ab78f105f2a0fae\nhttps://techblog.zozo.com/entry/zozomat-cqrs\nzozo technol...",
          "link": "https://zenn.dev/makumattun/articles/474fbe08a5111c",
          "publishedOn": "2021-07-11T15:02:47.000Z",
          "wordCount": 65,
          "title": "Serverless FrameworkとTypeScriptでCQRSを実現する 概要編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--O_qWN-JE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Serverless%2520Framework%25E3%2581%25A8TypeScript%25E3%2581%25A7CQRS%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2520%25E6%25A6%2582%25E8%25A6%2581%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "author": "din",
          "description": "はじめに\nなろう形式のタイトルってわかりやすいですね。\n初投稿です。\nReactの学習のため、Todoアプリを作成しました。\nどうせなら最新のライブラリを使用しようとRecoil, React Hook Form v7を使ってみましたので、備忘録がてらその内容を紹介します。\n\n 環境\nWindows10 64bit(20H2)\nWSL(Ubuntu 18.) v1\nnode v14.17.1\nyarn 1.22.5\nVSCode\n\n 完成図\nこんな感じの簡単なtodoアプリを作ってみました。\n見た目は完全に度外視しています。\n\n\n install\nまずWSLで下記コマンドを実行して、...",
          "link": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "publishedOn": "2021-07-11T15:01:45.000Z",
          "wordCount": 462,
          "title": "Next.jsでtodoアプリ を作ろうとしたらRecoil + React Hook Form v7で楽ができた件",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5ysT6Zxi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:din%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%25E3%2581%25A7todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Recoil%2520%252B%2520React%2520Hook%2520Form%2520v7%25E3%2581%25A7%25E6%25A5%25BD%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzcxZDU3OTNkZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/6d1882c2e00d0a",
          "author": "chida",
          "description": "テスト駆動開発の本を買って少し読みましたが、実際に自分でコードを書いて表現してみたく、TypeScriptとJestでテスト駆動開発を実践します。\nhttps://www.amazon.co.jp/-/en/Kent-Beck/dp/4274217884/ref=sr_1_1?crid=29A7GYVAMFT8E&dchild=1&keywords=テスト駆動開発&language=ja_JP&qid=1625801931&sprefix=テスト駆動%2Caps%2C282&sr=8-1\nこの記事では簡単なコードをテスト駆動開発の手順に沿っ...",
          "link": "https://zenn.dev/chida/articles/6d1882c2e00d0a",
          "publishedOn": "2021-07-11T09:59:28.000Z",
          "wordCount": 338,
          "title": "テスト駆動開発（TDD）でコードを書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--BP88TuIG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588TDD%25EF%25BC%2589%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/meijin/articles/vite-react-ts-vanilla-extract-playground",
          "author": "Meijin",
          "description": "概要\n以下のGitHubリポジトリに、Vite + React + TS + vanilla-extract +α が動作するサンプルリポジトリを作った。\nhttps://github.com/TeXmeijin/vite-react-playground\n本記事では動作させるための設定のポイントや、各利用技術、ライブラリの概要について説明する。\nリポジトリ名をplaygroundとしているとおり、今後このリポジトリには色々なライブラリ(react-hook-form, SWRなど)の検証内容を追記していく予定だが、ひとまず環境構築で一段落したので記事を書いた。\n\n\n 動作確認時のバ...",
          "link": "https://zenn.dev/meijin/articles/vite-react-ts-vanilla-extract-playground",
          "publishedOn": "2021-07-10T08:32:49.000Z",
          "wordCount": 248,
          "title": "Vite + React + TS + vanilla-extract +α が動作するサンプルリポジトリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--TAfsEyLo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Meijin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vite%2520%252B%2520React%2520%252B%2520TS%2520%252B%2520vanilla-extract%2520%252B%25CE%25B1%2520%25E3%2581%258C%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pPWmtyWk1nS3djRXl5a2w1X2lVTFZFVmtVVUpkNzkzcjlfejhERjRzPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/garmi/articles/e761f112d9c48a",
          "author": "がーみ",
          "description": "JavaScriptで書かれたReact NativeアプリをTypeScriptへ変換しているのですが、その際にReactNavigation（v5）で画面遷移を実装している箇所に型を定義する際に躓いたのでその時の設定方法を載せておきます。\n以下は公式ドキュメントをなぞって実装しています。\nhttps://reactnavigation.org/docs/typescript/\n\n Navigator (Router)の設定\nまずは画面を管理しているファイルに型を定義します。（プロジェクトによって異なると思いますが、私の場合はRouter.tsx)\n\n      \n        \n ...",
          "link": "https://zenn.dev/garmi/articles/e761f112d9c48a",
          "publishedOn": "2021-07-10T07:38:49.000Z",
          "wordCount": 89,
          "title": "【React Native】React Navigationで遷移時に受け渡すパラメータに型を設定する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wsV6aGp0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2583%25BC%25E3%2581%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590React%2520Native%25E3%2580%2591React%2520Navigation%25E3%2581%25A7%25E9%2581%25B7%25E7%25A7%25BB%25E6%2599%2582%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2599%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%259E%258B%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2E5OTdhOTUyZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuki0410/articles/2ad97915768826",
          "author": "らんす🍐",
          "description": "はじめに\n最近、JESTとReact Testing Libraryを使ってテストを書く機会が増えてきました。\n最初は愚直にテストを書いていたのですが、以下のような課題が出てきたため、コンポーネント構成を見直してみました。\n\nコンポーネント外のパラメータ(Props や store, API など) と画面表示項目の間に複雑な変換ロジックが入っていてテストを書くのが大変\nUI の変更などによりテストが通らなくなる\n\n\n Before\n1 コンポーネントの中に表示値への変換ロジックが入っているコンポーネントになります。\n変換部分が複雑化するとテストを書くのがだんだん億劫になってきます。...",
          "link": "https://zenn.dev/yuki0410/articles/2ad97915768826",
          "publishedOn": "2021-07-10T06:35:05.000Z",
          "wordCount": 371,
          "title": "テスタブルなReact Componentの書き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--mY0FsmJ_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2589%25E3%2582%2593%25E3%2581%2599%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2586%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AAReact%2520Component%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjQ2M2NjMGI0My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/garmi/articles/6bdab5527ca325",
          "author": "がーみ",
          "description": "React Nativeでアプリを開発している際に、スマートフォンの端末で文字サイズを大きく設定している場合に文字サイズによってはレイアウトが崩れてしまうことがありました。一旦文字サイズを端末に影響されないよう固定にしたいと思ったのでそのときの調査メモです。\n\n 結論\nTextコンポーネントのPropsに以下の項目を設定\n\n      \n        \n        allowFontScaling={false}\n\n\n      \n      \n コンポーネント共通化\nExpo環境で実装しているので、app.jsonにフォントサイズの固定の設定などはあるか調べてみましたが見当たらな...",
          "link": "https://zenn.dev/garmi/articles/6bdab5527ca325",
          "publishedOn": "2021-07-10T06:34:13.000Z",
          "wordCount": 94,
          "title": "【React Native】端末で設定している文字サイズによる影響を制限したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--mChTTD78--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2583%25BC%25E3%2581%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590React%2520Native%25E3%2580%2591%25E7%25AB%25AF%25E6%259C%25AB%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25BD%25B1%25E9%259F%25BF%25E3%2582%2592%25E5%2588%25B6%25E9%2599%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2E5OTdhOTUyZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "author": "gamine🍑",
          "description": "これまでの経緯\njest で Unit Test 描けるようになった。\n次のステップ行ってみよう。\n「「 Component Test だ！」」\n\n 環境とか\n\nJest\nVue.js Composition API\n\n\n 環境を整える\n必要なものを import する。\n\n      \n        \n        import { createLocalVue, shallowMount } from '@vue/test-utils'\nimport VueCompositionApi from '@vue/composition-api'\nimport CalendarTe...",
          "link": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "publishedOn": "2021-07-10T02:21:24.000Z",
          "wordCount": 295,
          "title": "Composition API で @vue/test-utils 使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--PNTJLfiF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Composition%2520API%2520%25E3%2581%25A7%2520%2540vue%252Ftest-utils%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kupuma_ru21/articles/8003e5dd765b72",
          "author": "くぷまーる",
          "description": "graphqL-code-generatorとは、GraphQLのスキーマからTypeScriptの型を自動生成してくれるライブラリです。便利です。\n普段、何気なく使ってたのですがセットアップ周りとか、あんま知らないなあ。。。\nと思ったのでセットアップしてみました。\n備忘録で残します。\n\n\n初期セットアップ\n\n\n      \n        \n        npx create-react-app graphql-codegen-github-app --template typescript\n\n\n      \n      でappを作成します。\n次に、パッケージをinstallします...",
          "link": "https://zenn.dev/kupuma_ru21/articles/8003e5dd765b72",
          "publishedOn": "2021-07-09T15:49:41.000Z",
          "wordCount": 295,
          "title": "graphqL-code-generatorをセットアップしますた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--owobexK3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25B7%25E3%2581%25BE%25E3%2583%25BC%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:graphqL-code-generator%25E3%2582%2592%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjFkZGYxMjM1My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/huequica/articles/first_npm_package",
          "author": "Haru_Yakumo",
          "description": "以前ヒカキンシンメトリーbotを書き直したという話をしたのですが一応まだメンテナンスを続けており、それなりに改善を続けています。\n今回はそのbotの新機能を入れるにあたりコードの分割の目的で自作パッケージをリリースした話をします。\n\n 内容\n\n既存の Array クラスに対し、最後の要素と引数が等しいかどうかを返す\n\n\n['hoge', fuga].lastItemIs('fuga') みたいに使いたい\n\n\n\nこれだけ。故に超軽量超簡単です。\nまあ今後なにか追加したいものを思いついたら追加していく感じの運用を考えているので、パッケージの名前としては @huequica/native_ex...",
          "link": "https://zenn.dev/huequica/articles/first_npm_package",
          "publishedOn": "2021-07-09T15:07:12.000Z",
          "wordCount": 478,
          "title": "npmのパッケージをリリースしてCI/CDさせるまでやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--99bimqUP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Haru_Yakumo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:npm%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25A6CI%252FCD%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDRUNJM2xDR3ZjNWNrYWN6QVFIcm5QeTZTS2VsX3lZOFNKM05jMVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoneapp/articles/d01628752f3267",
          "author": "米本剛士",
          "description": "npm install --save-dev jest @types/jest\nnpm install --save-dev @firebase/rules-unit-testing\n\n\n      \n      package.json に test scripts を追加\n\n      \n        \n        \"scripts\": {\n  \"test\": \"firebase emulators:exec --only firestore jest\"\n}\n\n\n      \n      package.json に jest ...",
          "link": "https://zenn.dev/yoneapp/articles/d01628752f3267",
          "publishedOn": "2021-07-09T02:48:16.000Z",
          "wordCount": 81,
          "title": "Firebase Firestore Rule Jest Test Memo",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--cBTzQ1Wd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25B1%25B3%25E6%259C%25AC%25E5%2589%259B%25E5%25A3%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%2520Firestore%2520Rule%2520Jest%2520Test%2520Memo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lJVTIzdVRxSktmVFlhVFZtR2NJZzFWaXQzSlpyVnVPdzRhb3NQbTdRPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kondo_script/articles/217a9d5285e35f",
          "author": "kondo_script",
          "description": "要約\n\namazon-chime-sdk を web + react-native で使う機会があって色々調べたのでまとめた\nAPI は素直で使いやすい。が、高機能な割にドキュメントがまとまりきっていない\n\naws のコンソールに管理画面もなく準備しなくてはいけないことはそこそこある\namazon-chime と amazon-chime-sdk は別物だが、ドキュメントは一つにまとまっている\n\nAmazon Chime Documentation\n\n\n\n\nとりあえず最初は web版/React版のサンプルを触って基本的なアーキテクチャを理解する。\n\namazon-chime-sdk...",
          "link": "https://zenn.dev/kondo_script/articles/217a9d5285e35f",
          "publishedOn": "2021-07-09T01:16:00.000Z",
          "wordCount": 286,
          "title": "amazon-chime-sdk でWebとReact Nativeでビデオ通話ができるアプリを作る(前編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jPYpLMvi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kondo_script%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:amazon-chime-sdk%2520%25E3%2581%25A7Web%25E3%2581%25A8React%2520Native%25E3%2581%25A7%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E9%2580%259A%25E8%25A9%25B1%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528%25E5%2589%258D%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzdhYjk3MmU5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/daikik/articles/b1a2061162ed83",
          "author": "daikik",
          "description": "概要\n最近退職に伴いTypeScriptプロジェクトのCI/CDの見直しを行っているので主にプルリクに対するCIを中心に何をやっているのか(やっていた＆やろうとしているもの含む)紹介します。\nそれぞれはさらっとした紹介のみです。\n\n tsc, prettier, eslint\n基本です。恐らく殆どのプロジェクトでやっているかと思います。\ntscは--noEmitオプションを付けて実行、eslintは--cacheと--quietオプションを付けて実行しています。\nprettierは--list-differentオプションを付けると差分があった場合(=prettierが適用されていな...",
          "link": "https://zenn.dev/daikik/articles/b1a2061162ed83",
          "publishedOn": "2021-07-09T00:44:31.000Z",
          "wordCount": 131,
          "title": "TypeScriptプロジェクトのCIでやってること",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jmq1bgXG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:daikik%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AECI%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzhodXdIZE9JSzVZTUMxbE95SmhmRkFZaC1KX0YtS1hWODVMNnE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/github-api-v4-pagenation",
          "author": "ryo_kawamata",
          "description": "GitHub API v4 でページネーションを考慮してクエリを投げる機会があったので、その作業メモです。\n\n GitHub API v4のページネーション\nGitHub API v4 で nodes や edges を持つリソースには、PageInfoというオブジェクトフィールドがあり、以下 4 つのフィールドを持ちます。\n\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n\nページングでは、このendCursorとhasNextPageのペア又はstartCursorとhasPreviousPageのペアを使います。\nendCurso...",
          "link": "https://zenn.dev/ryo_kawamata/articles/github-api-v4-pagenation",
          "publishedOn": "2021-07-08T23:05:36.000Z",
          "wordCount": 254,
          "title": "GitHub API v4 でページネーションを考慮したクエリの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--74xfStPW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GitHub%2520API%2520v4%2520%25E3%2581%25A7%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mpyw/articles/3c063143fe884a",
          "author": "mpyw",
          "description": "実装\n\n      \n        \n        /**\n * [α] T 型から undefined 不可キーの union を抽出\n */\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: Record<any, any> extends Pick<T, K>\n    ? never\n    : K;\n}[keyof T];\n\n/**\n * [β] α を利用し， Passed 型から Req 型の条件を満たさないものだけを抽出\n */\ntype MissingKeys<Req, Passed...",
          "link": "https://zenn.dev/mpyw/articles/3c063143fe884a",
          "publishedOn": "2021-07-08T15:50:06.000Z",
          "wordCount": 429,
          "title": "TypeScript で「コンストラクタで渡さなかった引数だけ後で必須にする」の型制約を書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Ils-pGZw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mpyw%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:TypeScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTRlYzc4ZTg0Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vim」のフィード",
      "feedUrl": "https://zenn.dev/topics/vim/feed",
      "siteUrl": "https://zenn.dev/topics/vim",
      "articles": [
        {
          "id": "https://zenn.dev/vampire_yuta/articles/c4703f4232f16b",
          "author": "vampire_yuta",
          "description": "基本操作\n\n参照（https://knowledge.sakura.ad.jp/21687/）\n\n カーソル移動\nh → 左に移動\nj → 下に移動\nk → 上に移動\nl → 右に移動\ngg → 最初の行へ移動\nGG → 最後の行へ移動\nCtrl+f → 上へページスクロール\nCtrl+b → 下へページスクロール\nzz → カーソル位置を中央へ\n{ → 前の空行まで移動\n} → 次の空行まで移動\nw → 文字単位で次に移動\nW → 区切り文字なしで次の文字に移動\nb → 文字単位で前の文字に移動\nB → 区切り文字なしで前の文字に移動\n\n 進む戻る\nCtrl + r → 一つ前の操...",
          "link": "https://zenn.dev/vampire_yuta/articles/c4703f4232f16b",
          "publishedOn": "2021-08-04T16:28:43.000Z",
          "wordCount": 173,
          "title": "vim戦記 Part1",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--9fxunlOK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:vampire_yuta%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:vim%25E6%2588%25A6%25E8%25A8%2598%2520Part1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lmSGhYa3lqY2lHd2o1UzhPajZlNG9ydlVUUFFWRWtrVGtoSmJ4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kis9a/articles/vim-expand-link-to-text-link",
          "author": "kis9a",
          "description": "初めに\nVim では、リンクの上でgxをタイプすることで、ブラウザーでそのリンクを開くことができます。それを参考に、今回はカーソル下のリンクの<title>を取得して、テキストリンクに置き換える関数を書いてみました。単純ですが、個人的に markdown でメモを取る時や、参考 URL を書く時などに便利に使用しています。\n\n イメージ\n\nvim-expand-link-to-text-link\n\n 1.カーソル下のリンクを取得する。\nこれが、結構難しいと思っていましたが、案外簡単でした。\n\n      \n        \n        expand('<cfil...",
          "link": "https://zenn.dev/kis9a/articles/vim-expand-link-to-text-link",
          "publishedOn": "2021-08-02T01:24:44.000Z",
          "wordCount": 365,
          "title": "Vim script. カーソル下のリンクの<title>を取得して、テキストリンクに置き換える。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--scIfxkx8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kis9a%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vim%2520script.%2520%25E3%2582%25AB%25E3%2583%25BC%25E3%2582%25BD%25E3%2583%25AB%25E4%25B8%258B%25E3%2581%25AE%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AE%253Ctitle%253E%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzkwNDg0MmI2My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/notomo/articles/vim-open-left-tab-after-closing",
          "author": "notomo",
          "description": "Vimで:tabeditすると新しいタブが右側に開くが、\n:tabcloseすると元々いたタブの右側のタブが開く。\nこれを閉じたタブの左にあったタブが開かれるようにしたい。\nつまり| 1 | 2 | 3 |のようにタブがあって、2を閉じたら3ではなく1を開く。\n1で作業中に2を開いて閉じたら1の作業に戻りたいことが多い。\n\n 実装\n以下のようにautocmdで実現できる。\n\n      \n        \n        let s:after_tab_leave = v:false\naugroup activate_left_tab\n  autocmd!\n  autocmd TabEn...",
          "link": "https://zenn.dev/notomo/articles/vim-open-left-tab-after-closing",
          "publishedOn": "2021-07-30T23:52:51.000Z",
          "wordCount": 76,
          "title": "Vimでタブを閉じたときに左側のタブを開く",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cm-J9pWA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:notomo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vim%25E3%2581%25A7%25E3%2582%25BF%25E3%2583%2596%25E3%2582%2592%25E9%2596%2589%25E3%2581%2598%25E3%2581%259F%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E5%25B7%25A6%25E5%2581%25B4%25E3%2581%25AE%25E3%2582%25BF%25E3%2583%2596%25E3%2582%2592%25E9%2596%258B%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmZlOTlhMDUxYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/purenium/articles/50facb02e93cbd",
          "author": "mumei",
          "description": "Vim/Neovim のファイラープラグイン ferm.vim についての記事です。\n\n 環境\nUbuntu 20.04 LTS(WSL2)\nNeovim 0.6.0\n\n 事象と解決\n.prettierrc、.gitignore などのドットで始まるファイルが含まれているフォルダがあるとします。\n\nこれを fern.vim で表示します。すると、.prettierrc などは、表示されないようです。\n\nこれを表示するにはどうすればよいでしょうか。\ninit.vim などの設定ファイルに以下を記述します。\n\n      \n        init.vim\n        let g:fer...",
          "link": "https://zenn.dev/purenium/articles/50facb02e93cbd",
          "publishedOn": "2021-07-28T11:02:24.000Z",
          "wordCount": 50,
          "title": "【Vim/Neovim】fern.vim で隠しファイル(\".\"などで始まるファイル）を表示する。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--VOIWpWFe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mumei%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Vim%252FNeovim%25E3%2580%2591fern.vim%2520%25E3%2581%25A7%25E9%259A%25A0%25E3%2581%2597%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%2528%2522.%2522%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25A7%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25EF%25BC%2589%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDgwNTdlNWJlNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ssssssigma/articles/coding-on-smartphone-1",
          "author": "sigma",
          "description": "スマホでコードを書くとなると、パソコンの場合と前提条件が異なります。スマホは画面が小さく、可能な限りテキスト編集のみにリソースを割くべきで、また、スマホのIMEを使った快適なテキスト編集のため、高度な補完も大切です。任意のキーバインドが使えることもアドバンテージとなるでしょう。\n\n Vimを使う\nスマホでVimを使うことは非常に理に適っています。Vimはディスプレイが限られた文字数の文字しか表示できない時代から支持されてきたエディタであり、またスマホのテキストの表示能力はその時代のディスプレイよりもリッチです。\nまた、Vimはキーボードが標準化される前から存在していてスマホのIMEのよう...",
          "link": "https://zenn.dev/ssssssigma/articles/coding-on-smartphone-1",
          "publishedOn": "2021-07-21T18:26:58.000Z",
          "wordCount": 239,
          "title": "スマホでコード書く 環境構築編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ICQ7Uvci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sigma%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%259B%25B8%25E3%2581%258F%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZGZmYmRlM2I0Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/skanehira/articles/2021-07-18-vim-denops-docker",
          "author": "シン・ゴリラ@上野動物園休園中",
          "description": "初めに\n最近denops.vimを使ってプラグインを作るのが自分の中で流行っています。\ndenops.vimはTypeScriptメインでVim/Neovim対応のプラグインを書けるところが魅力的で、型システムがあることでデータ構造が明確にわかるためとても書きやすいので、\n今後プラグインを作るときは基本denops.vimで書こうと考えています。\ndenops.vimの詳細に関してこれ以上触れないので、気になる方はこちらの記事を参照してください。\n本題ですが、Vimを初めたころにdocker.vimというプラグインを作りました。\n本記事はdocker.vimをdenops.vimで書...",
          "link": "https://zenn.dev/skanehira/articles/2021-07-18-vim-denops-docker",
          "publishedOn": "2021-07-19T01:50:16.000Z",
          "wordCount": 187,
          "title": "Vim/Neovimでdockerを操作できるdenops-docker.vimを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wUCkHOzF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25B4%25E3%2583%25AA%25E3%2583%25A9%2540%25E4%25B8%258A%25E9%2587%258E%25E5%258B%2595%25E7%2589%25A9%25E5%259C%2592%25E4%25BC%2591%25E5%259C%2592%25E4%25B8%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vim%252FNeovim%25E3%2581%25A7docker%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdenops-docker.vim%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fY2VhMGI1MzMxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hhatto/articles/38cc31b301ede3",
          "author": "hhatto",
          "description": "'sys' imported but unused はflake8による警告メッセージ\n\n 結論\nlet g:lsp_diagnostics_virtual_text_enabled = 0 の設定にしておく\n\n 使用環境\n\nneovim(NVIM): v0.5.0\n\n\n 設定ファイル\n\n      \n        .config/nvim/init.vim\n        call plug#begin('~/.config/nvim/plugged')\nPlug 'prabirshrestha/vim-lsp'\nPlug 'mattn/vim-lsp-settings'\ncall...",
          "link": "https://zenn.dev/hhatto/articles/38cc31b301ede3",
          "publishedOn": "2021-07-16T00:16:17.000Z",
          "wordCount": 71,
          "title": "neovim+pyls+flake8でテキスト領域に警告内容が表示されないようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--s9Wpg_gT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hhatto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:neovim%252Bpyls%252Bflake8%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E9%25A0%2598%25E5%259F%259F%25E3%2581%25AB%25E8%25AD%25A6%25E5%2591%258A%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTA5MWI2OTY5ZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/omochice/articles/35e339fdfb5241",
          "author": "Omochice",
          "description": "denopsでPaiza IOのwebAPIを実行するプラグインを作った\n\n手元に特定の言語の実行環境がなくてもクラウドでコードを実行できるwebAPI(paiza.io)をvim上から実行するプラグインを作った。\ndenopsについては以下を参照。\n\n\n 使い方\n\n インストール\n私がdein.vimを使ってるのでdeinの例で。\n\n      \n        \n        call dein#add(\"vim-denops/denops.vim\")\ncall dein#add(\"Omochice/dps-paiza-io-vim\")\n\n\n      \n      \n 実行\n...",
          "link": "https://zenn.dev/omochice/articles/35e339fdfb5241",
          "publishedOn": "2021-07-12T03:16:14.000Z",
          "wordCount": 28,
          "title": "denopsでPaiza IOのwebAPIを実行するプラグインを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--25TfZ9Fk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omochice%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:denops%25E3%2581%25A7Paiza%2520IO%25E3%2581%25AEwebAPI%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hydnJRWTl2ZXFCSnpScVZjSzMzN1g3Z3duZmQydm9ZeVhfNFYxRmc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawagh/articles/library2snippets",
          "author": "kawagh",
          "description": "はじめに\n\n筆者は競技プログラミングで使用頻度の高い処理を関数やクラスとしてライブラリ化しています。\nそのライブラリをコンテスト中に素早く確実に使用するためにスニペット(snippet)化しました。\nライブラリからsnippet化への作業をライブラリ更新の度に変更を手動で反映させるのは面倒かつ不確実なのでその作業を自動化するシェルスクリプトを作成しました。\n本記事ではsnippet化に伴い行った作業やスクリプト、感じたことをまとめておきます。\n\n\n 依存関係\n\nvim\ncoc.nvim(https://github.com/neoclide/coc.nvim)\ncoc-snippet...",
          "link": "https://zenn.dev/kawagh/articles/library2snippets",
          "publishedOn": "2021-07-10T00:12:52.000Z",
          "wordCount": 210,
          "title": "競プロライブラリのスニペット化作業の自動化",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--58y1BoXa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawagh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%258B%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E5%258C%2596%25E4%25BD%259C%25E6%25A5%25AD%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vue.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/vue/feed",
      "siteUrl": "https://zenn.dev/topics/vue",
      "articles": [
        {
          "id": "https://zenn.dev/gaomar/articles/12c8664058638b",
          "author": "がおまる",
          "description": "GAZEPASSというパスワードレスでログイン認証するシステムを使ってみました。\n端末にある生体認証機能を使って認証する仕組みです。生体認証が無いデバイスは顔認証することができます。\n※現在はbeta版なので無料で使えますが、今後は 有料化 になる可能性がありますのでご注意ください。\n\n お試し環境\n下記からどういうものか動かすことができます。\nhttps://www.katacoda.com/gaomar/scenarios/gazepass-handson-playground\n\n 1. API Keysを作成しよう\nGAZEPASSサイトにアクセスしてアカウントを発行します。\n\n ...",
          "link": "https://zenn.dev/gaomar/articles/12c8664058638b",
          "publishedOn": "2021-08-06T01:39:20.000Z",
          "wordCount": 220,
          "title": "パスワードレス認証サービスGAZEPASSを使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--zO5WVjPA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2581%258A%25E3%2581%25BE%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2591%25E3%2582%25B9%25E3%2583%25AF%25E3%2583%25BC%25E3%2583%2589%25E3%2583%25AC%25E3%2582%25B9%25E8%25AA%258D%25E8%25A8%25BC%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9GAZEPASS%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hQR0w0Ml90M2dMSDhRS3hoVVBWR2VrWXdmZW9aSF9ueS1Za3lGTHlvPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/masakitm/articles/6b5e31549c03d9",
          "author": "masakitm",
          "description": "この資料について\nこの資料はVue2.0で動くプロダクトでVue Composition APIについて簡単に解説し、関心をもってもらうために用いた際のものです。\n対象読者は以下を想定しています。\n\nVueのOption API（今までの書き方）をさわったことがある\nReact Hooksの経験がない\n\nより詳細な知識は公式ドキュメントよりご参照ください。\n\n Vue 3系のコンポジションapi について\n\n ってなんですか\n\n今までとは違う書式でvueを書ける記法\n今後主流になりそう\nreactのhooks apiに強く影響をうけている\nhttps://ja.reactjs.org...",
          "link": "https://zenn.dev/masakitm/articles/6b5e31549c03d9",
          "publishedOn": "2021-08-05T03:18:54.000Z",
          "wordCount": 505,
          "title": "最低限わかるVue Composition API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0sYnjhnO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masakitm%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E4%25BD%258E%25E9%2599%2590%25E3%2582%258F%25E3%2581%258B%25E3%2582%258BVue%2520Composition%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/toshimarnie/articles/c7cb99994075a3",
          "author": "Toshifumi Imanishi",
          "description": "はじめに\nSass の公式ドキュメントで 2020 年 10 月に LibSass の利用は非推奨 になり、Dart Sass の利用を推奨しています。そんな折、筆者が所属するフロントエンド開発チームでは LibSass を利用しており Dart Sass へ移行を進めました。本稿は LibSass から Dart Sass の移行についてご紹介します。本移行時の Dart Sass のバージョンは 1.32.7 になります。\n\nLibSass の非推奨は『継続的にメンテナンスをするが、将来的に追加予定の CSS および Sass の新機能の互換性を担保しない』という意味になります。...",
          "link": "https://zenn.dev/toshimarnie/articles/c7cb99994075a3",
          "publishedOn": "2021-08-05T02:49:11.000Z",
          "wordCount": 284,
          "title": "現場のフロントエンド開発環境を Dart Sass へマイグレーションする覚書",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--HJ5UN6Qt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Toshifumi%2520Imanishi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%258F%25BE%25E5%25A0%25B4%25E3%2581%25AE%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%2520Dart%2520Sass%2520%25E3%2581%25B8%25E3%2583%259E%25E3%2582%25A4%25E3%2582%25B0%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%25E8%25A6%259A%25E6%259B%25B8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmI0NDQwYjgxNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "author": "yoshixj",
          "description": "vue3がリリースされてから、時間が立ちました。CompositionAPIはどれくらい使用されているのでしょうか。自分は新規開発をすることが多いので、小さいLPなども含めると5つくらいのプロジェクトをNuxt × CompositionAPIで作ってきました。\nそのなかで、CompositionAPIの体験がよいと思ったので軽く紹介します。\n\n CompositionAPIのメリット\nCompositionAPIと以前からあるOption APIの違いを説明するとなった時に以下のような図が用いられます。\n\n記述がまとまるということを示しているのですが、これがまとまったことで読みやすくな...",
          "link": "https://zenn.dev/yoshixj/articles/d460f4d9cfb299",
          "publishedOn": "2021-08-04T23:09:36.000Z",
          "wordCount": 147,
          "title": "VueのCompositionAPIとgraphql-code-generatorの体験が良いので紹介したい。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--EP4hHJAt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yoshixj%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vue%25E3%2581%25AECompositionAPI%25E3%2581%25A8graphql-code-generator%25E3%2581%25AE%25E4%25BD%2593%25E9%25A8%2593%25E3%2581%258C%25E8%2589%25AF%25E3%2581%2584%25E3%2581%25AE%25E3%2581%25A7%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OTRkNTdlOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/koushikagawa/articles/d253bb1afc591f",
          "author": "koushikagawa",
          "description": "vue と vue-server-renderer で version mismatch\n先日Nuxtプロジェクトで npm run dev を実行した際に、下記エラーが表示されました。\n\n      \n        \n         ✖ Nuxt Fatal Error  \n Error:    \n Vue packages version mismatch:   \n - vue@2.6.11    \n - vue-server-renderer@2.6.14    \n This may cause things to work incorrectly. Make sure t...",
          "link": "https://zenn.dev/koushikagawa/articles/d253bb1afc591f",
          "publishedOn": "2021-08-03T03:14:35.000Z",
          "wordCount": 182,
          "title": "Vue packages version mismatch:   エラーを確認 -> 解消する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s---yMDuN-M--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koushikagawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vue%2520packages%2520version%2520mismatch%253A%2520%2520%2520%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%2520-%253E%2520%25E8%25A7%25A3%25E6%25B6%2588%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEUWtHdVNnSnE4dEdNUzFOY2tESTl2dHZkLXdvYU5SYlpLazM1c3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "author": "kazuhe",
          "description": "はじめに\n型駆動開発とはどんなもので実践すると何が嬉しいのかを自分なりに理解するためにこの記事を書きます。\n2021年8月時点では「型駆動開発」でググっても意図した内容がヒットせず、「Type-Driven Development」と検索して英語の記事が何件かヒットする程度です。\n自分の「型駆動開発」に対しての理解・認識が世間一般のそれと相違がある場合もありますので、何か思うところがあればご指摘いただければ大変嬉しく思います。\nまた、この記事ではTypeScriptとVue.jsでフロントエンドのコードを書いていきます。TypeScriptは必須の前提ですがReactでも同じような考...",
          "link": "https://zenn.dev/kazuhe/articles/type-driven-development-typescript",
          "publishedOn": "2021-08-02T15:54:16.000Z",
          "wordCount": 643,
          "title": "TypeScriptで型駆動開発",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--56npAWpa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kazuhe%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:TypeScript%25E3%2581%25A7%25E5%259E%258B%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMGEwMmEwNWExZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukination/articles/e854062cea4920",
          "author": "Yukination",
          "description": "npm と比べて早いと話題の pnpm を使用してプロジェクトを新規作成したので備忘録として残します。\nこちら に公式が発表しているベンチマークの結果があります。\nnpm や yarn との違いはこちらの記事が分かりやすくてオススメです。\n\n node.js のバージョンを確認\n現在使用している Node.js のバージョンが 12 以上か？の確認を行います。\n\n      \n        \n        > node -v\nv16.4.2\n\n\n      \n      \n pnpm を新規インストール\nnpm を使用し pnpm のインストールを行います。\n\n      \n ...",
          "link": "https://zenn.dev/yukination/articles/e854062cea4920",
          "publishedOn": "2021-08-02T06:26:46.000Z",
          "wordCount": 189,
          "title": "pnpm + Vite + Vue + TypeScript で新規プロジェクトを作成する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--cZ8sw5ZO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yukination%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:pnpm%2520%252B%2520Vite%2520%252B%2520Vue%2520%252B%2520TypeScript%2520%25E3%2581%25A7%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMmYxNDI0YTYxMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "author": "しっぽくん",
          "description": "こんにちは！ しっぽくんです\nVue.js をずっとやってきましたが、社内で Vue.js から Nuxt.js へ移行するプロジェクトが出てきたので参考程度に記事を書くことにしました\n本記事では Vue.js から　Nuxt.js（SPA）　へ移行する手順を説明します\n\n はじめに\nVue.js から Nuxt.js へ移行するモチベーションは色々あります\n例えばSEO対策、SSR・SSGをやりたい、 middleware や plugin を使って楽をしたい、 Nuxt.js 特有の機能を使いたいなどなど…\n「Vue.js Nuxt.js 移行」と検索すると様々な記事がヒットしますが...",
          "link": "https://zenn.dev/shippokun/articles/8f9d13d7b05ed0",
          "publishedOn": "2021-08-01T17:07:28.000Z",
          "wordCount": 390,
          "title": "簡単にVue.jsからNuxt.js(SPA)へ移行する手引き",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--4qxtVlKh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2597%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%258F%25E3%2582%2593%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25ABVue.js%25E3%2581%258B%25E3%2582%2589Nuxt.js%2528SPA%2529%25E3%2581%25B8%25E7%25A7%25BB%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E6%2589%258B%25E5%25BC%2595%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2g3NGxmTkQ2aHRMeml1NUFUUXNLR3RMVzFoMWE1R0tNT3lRU1RfVUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nana/articles/c6e27ded863a95",
          "author": "ななな",
          "description": "Vue Cropperについて\n今回使用したのは以下のライブラリになります。\nVue製なのでVue環境であれば使えると思います。\nhttps://github.com/xyxiao001/vue-cropper\nCropper.jsというライブラリがあり、こちらはJSのものになるので、JS環境であれば使う事ができます。\nhttps://github.com/fengyuanchen/cropperjs\nデモ\nCropper.jsはかなり老舗のライブラリのようで\n画像の切り抜きに使う形になります。\n今回紹介するもの以外にも以下のようなCropperをメインにしているライブラリは多数存在...",
          "link": "https://zenn.dev/nana/articles/c6e27ded863a95",
          "publishedOn": "2021-07-31T13:59:54.000Z",
          "wordCount": 209,
          "title": "画像の切り抜きライブラリVue Cropperを使ってみた。",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--fwBQYB8i--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25AA%25E3%2581%25AA%25E3%2581%25AA%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%2594%25BB%25E5%2583%258F%25E3%2581%25AE%25E5%2588%2587%25E3%2582%258A%25E6%258A%259C%25E3%2581%258D%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAVue%2520Cropper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTc4ZDExMWNiZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uedayou/articles/ee4a2ba1b5bd0a",
          "author": "uedayou",
          "description": "Linked Open Addresses Japan という住所オープンデータ提供サイトで使用している周辺情報データを検索できる Web API を公開しました。\nhttps://uedayou.net/loa/\n実際には以下で使用しているものになります。\n\nAPI には GraphQL と SPARQLエンドポイントの2種類があります。GraphQL は簡易、SPARQLエンドポイントはより詳細に検索ができます。用途によって使い分けてください。\n\n 特徴\n一般的に、位置情報を持つ情報を検索する場合、緯度経度で範囲を絞り込んで検索することが一般的だと思います。今回公開する周辺情報 AP...",
          "link": "https://zenn.dev/uedayou/articles/ee4a2ba1b5bd0a",
          "publishedOn": "2021-07-31T03:22:27.000Z",
          "wordCount": 1065,
          "title": "住所で検索可能な周辺情報 GraphQL/SPARQL API",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--2BTgW-GJ--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uedayou%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BD%258F%25E6%2589%2580%25E3%2581%25A7%25E6%25A4%259C%25E7%25B4%25A2%25E5%258F%25AF%25E8%2583%25BD%25E3%2581%25AA%25E5%2591%25A8%25E8%25BE%25BA%25E6%2583%2585%25E5%25A0%25B1%2520GraphQL%252FSPARQL%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjE1ODQxMjJlMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dialbird/articles/a63e9f1c838462",
          "author": "dialbird",
          "description": "まずはHasura Cloudでプロジェクトを作っておきましょう\nhttps://hasura.io/docs/latest/graphql/cloud/projects/create.html\n接続に必要なGraphQLのAPIエンドポイントと、アクセス時にヘッダーに必要なAdmin Secretを控えておきます\n\n次にNuxtプロジェクトをnpxで作ります\n\n      \n        \n        $ npx create-nuxt-app nuxt-composable-hasura\n\n\n      \n      次に必要なライブラリ群をインストールしていきましょう（各ライ...",
          "link": "https://zenn.dev/dialbird/articles/a63e9f1c838462",
          "publishedOn": "2021-07-27T13:13:32.000Z",
          "wordCount": 237,
          "title": "Nuxt x Composition API x Hasura x TypeScriptを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/zenn/image/upload/s--0D0rDbAG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dialbird%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%2520x%2520Composition%2520API%2520x%2520Hasura%2520x%2520TypeScript%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lYZl96c2pGMDVnZlVCaUJYR1NwVlB3aXFYZlJKTElqWFlHYkVPdGc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1627274783/default/og-base_z4sxah.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "author": "Yuku Kotani",
          "description": "Nuxt.js で開発されていたAI受診相談ユビーのフロントエンドを Next.js で作り直しました。\nまだまだ仮説検証を繰り返すフェーズのスタートアップのため、機能開発を止めて一気に置き換えることはできず、機能ごとに少しずつ置き換えてリリースをしました。結果、5人のプロダクト開発チームによる機能開発と並走して、全体の移行を1人で1ヶ月の短期間で終わらせることができたので、その意思決定や過程、工夫を紹介します。\n\n詳細な設計を話すと長くなるため別の機会として、この記事では移行についてのみ書きます。\n\n\nNext.js と Nuxt.js が似ていて読みにくいので、区別のために Nuxt...",
          "link": "https://zenn.dev/yuku/articles/a9edd53e13bb26",
          "publishedOn": "2021-07-26T10:08:53.000Z",
          "wordCount": 312,
          "title": "150万MAUのNuxt.js製サービスを機能開発を止めずに1ヶ月&1人でNext.jsに置き換えた話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--DH5GJ0ks--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuku%2520Kotani%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:150%25E4%25B8%2587MAU%25E3%2581%25AENuxt.js%25E8%25A3%25BD%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E6%25A9%259F%25E8%2583%25BD%25E9%2596%258B%25E7%2599%25BA%25E3%2582%2592%25E6%25AD%25A2%25E3%2582%2581%25E3%2581%259A%25E3%2581%25AB1%25E3%2583%25B6%25E6%259C%2588%25261%25E4%25BA%25BA%25E3%2581%25A7Next.js%25E3%2581%25AB%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEQVVDNDRXNTlSbWgyMjVIR2ZycENZQmRlNUJNZ0VCaDl3TGY0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/4bf52f97165058",
          "author": "ryo_kawamata",
          "description": "esa を CMS に VuePress v2 でサイトを作る機会があったので紹介します。\n\n 🛠 何を作った？\nこちらのツイートで紹介されている LAPRAS 組織ハンドブックというサイトの基盤を esa  と VuePress v2 で作りました。\nhttps://twitter.com/320KZCD/status/1417679812114616321\n\n 👨‍💻 システム構成\n基本構成はこちらです。\n\nesa の GitHub Webhook (β) を使い、esa 上の特定のディレクトリ配下に記事を追加したとき、Webhook で指定した GitHub リポジトリの特定のディ...",
          "link": "https://zenn.dev/ryo_kawamata/articles/4bf52f97165058",
          "publishedOn": "2021-07-26T03:52:40.000Z",
          "wordCount": 726,
          "title": "esa を CMS に VuePress v2 で管理しやすいドキュメントサイトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--CgZCL2y2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:esa%2520%25E3%2582%2592%2520CMS%2520%25E3%2581%25AB%2520VuePress%2520v2%2520%25E3%2581%25A7%25E7%25AE%25A1%25E7%2590%2586%25E3%2581%2597%25E3%2582%2584%25E3%2581%2599%25E3%2581%2584%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/0b8e8b7863b4f2",
          "author": "おしうみなおき",
          "description": "Vueのファイルの方で.envの値を使いたいことがあったので調べて実装してみました。\n\n 手順1. .envにMIX_という接頭辞を付けて環境設定を設定する\n例えば APP_ENVの値をvue側で使いたい場合、 MIX_APP_ENV という風に MIX」 というprefixをつけて.envに登録します。\n\n      \n        \n        APP_ENV=local\nMIX_APP_ENV=\"${APP_ENV}\"\n\n\n      \n      \n 手順2. ローカルサーバーを立ち上げなおし、再コンパイルする\n僕はこれをしていなかったので、なかなか値が反映されずしばらく困...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/0b8e8b7863b4f2",
          "publishedOn": "2021-07-25T23:12:37.000Z",
          "wordCount": 35,
          "title": "vue側でlaravelのenvファイルの値を使用する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q6zchQZ6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue%25E5%2581%25B4%25E3%2581%25A7laravel%25E3%2581%25AEenv%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%25AE%25E5%2580%25A4%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/century/articles/e67dc676ab81b0",
          "author": "Century",
          "description": "ゲームの紹介\n\n再現して作ったゲーム\n\n参考にした本家のゲーム\nhttps://github.com/Century-ss/BlockGame-like-TokyoFriendPark\n今回作ったゲームは、動くブロックを止めて、左から繋げていき、右の壁に到達するとクリアするというものになっています。\nこの記事では、このゲームを作ることで得たノウハウや行き詰まった点などを紹介していこうと思います。\n\n 作った経緯\n単純にVueの勉強のためです。\nハンズオンをやったり、公式ドキュメントを眺めるだけではなかなか頭に入ってこなかったので、\n自分で考えながら手を動かしてプログラミングをしたいと...",
          "link": "https://zenn.dev/century/articles/e67dc676ab81b0",
          "publishedOn": "2021-07-25T04:49:42.000Z",
          "wordCount": 106,
          "title": "東京フレンドパーク風ブロックゲームをVue.jsで作った話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--skQgtiNE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Century%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259D%25B1%25E4%25BA%25AC%25E3%2583%2595%25E3%2583%25AC%25E3%2583%25B3%25E3%2583%2589%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25AF%25E9%25A2%25A8%25E3%2583%2596%25E3%2583%25AD%25E3%2583%2583%25E3%2582%25AF%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592Vue.js%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTc4MTFjODcxMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sakots/articles/fb6529ee401fd3",
          "author": "sakots",
          "description": "やあ、さこつです。\nこれは最初の記事だよ！　お手柔らかに。\n\n 今作ってるやつ\n\nこのお絵かき掲示板はSQLiteとさらにBladeを（以下略\nGithub\n\nphpとBladeでつくったお絵描き掲示板です。データベースにSQLiteを使用。\n\n なぜまた新しく作るのか\n\n 新技術のへの渇望\nとにかくいろいろできたほうが仕事が多い。んで、ReactとVueでどっちからやるか比べてたんですけども、どうもJSXに慣れるまで時間がかかりそうだったのでVueから勉強することに決定。\n\n というわけで\nGithubにページだけ作りました。こんごともよろしく。\nveita\n\nにゃー",
          "link": "https://zenn.dev/sakots/articles/fb6529ee401fd3",
          "publishedOn": "2021-07-23T17:48:15.000Z",
          "wordCount": 22,
          "title": "Vue3で掲示板（BBS）を作ろうという試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qZdiimEB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sakots%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue3%25E3%2581%25A7%25E6%258E%25B2%25E7%25A4%25BA%25E6%259D%25BF%25EF%25BC%2588BBS%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXQ3MycUNwUnFXdFJNZFFmRC1jR0ROSUVVVHpqZGJQWmdwUkxldHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yusuke_akiyama/articles/1c786c10a22fa8",
          "author": "Yusuke Akiyama",
          "description": "Tailwindcssとは、ユーティリティファーストのCSSフレームワークです。\nhttps://tailwindcss.com/\nユーティリティファーストなのでCSS設計など考慮しなくてもいいので、個人的に好きです！\n\n Tailwindcssのカードデザイン\ncodepenに残しておいたのでHTMLのコードはそこから拾って使ってみてください。\n\n\n できなかったこと\n\n当然ですがクリック時の「ripple efect」（波紋のアニメーション）の表現ができないのは残念ですね...。\nボタンを押した後のアクションなどの指定をしたかったのですが、設定ファイルに記述が必要でCDNでは無理そ...",
          "link": "https://zenn.dev/yusuke_akiyama/articles/1c786c10a22fa8",
          "publishedOn": "2021-07-23T12:23:07.000Z",
          "wordCount": 27,
          "title": "TailwindcssでMaterial UI風のカードデザイン作ってみました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--B1KtBiC6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Akiyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Tailwindcss%25E3%2581%25A7Material%2520UI%25E9%25A2%25A8%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p6ZFpmbTBUMzdyZEhHZUFCTVpGWndPek9Wd2tLQjRET0cweThXR3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/0f463859b6b462",
          "author": "おしうみなおき",
          "description": "僕の場合はLaravel×Vueを使っており本来であれば、Laravelの方でsocialiteというパッケージを使用してgoogle oauth認証を行うのが一般的なのですが、\n諸事情でVue側でgoogle oauth認証を行いアクセストークンを使用してから、バックエンドにリクエストを送るという方法をしたかったのです。\nそこで今回はvue側でgoogle認証を実装する方法をメモとして残しておきます。\n\n 1-1. Google Cloud Platformにアクセスし、プロジェクトを作成する\nGoogle Cloud Platformにアクセスしてプロジェクトを作成してください。\nこ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/0f463859b6b462",
          "publishedOn": "2021-07-23T00:19:37.000Z",
          "wordCount": 125,
          "title": "VueからGoogle OAuthを使用してログインする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--UpVZZVA4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%258B%25E3%2582%2589Google%2520OAuth%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/b509c1d9b08816",
          "author": "gamine🍑",
          "description": "概要\nmutation 処理で、親子コンポーネントでデータのやりとりをする時。\n例えば、親コンポーネントの中に\n\n      \n        \n        XXX - XXXX\n\n\n      \n      みたいな郵便番号の Input box が連なっている子コンポーネントがある時を考える。\n郵便番号自体はサーバから XXX-XXXX と、一つのまとまりで送られてくる。\n仮に郵便番号の Input box がハイフンつなぎでふたつあるとする。ふたつあるので、どこかでデータをふたつに整形するる必要がある。\nさてさて fetch、 親、 子、どこで整形するのが正しいのだろうか？...",
          "link": "https://zenn.dev/gamin/articles/b509c1d9b08816",
          "publishedOn": "2021-07-22T03:35:55.000Z",
          "wordCount": 52,
          "title": "データの整形は末端で行うようにしている",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--i7RBx_TF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%25AF%25E6%259C%25AB%25E7%25AB%25AF%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/20920804228834",
          "author": "yukihirop",
          "description": "はじめに\nこの記事はvue-i18nの翻訳ファイルをコンポーネント毎に管理したいという思いで書いた前回の記事の改良版です。\nhttps://zenn.dev/yukihirop/articles/b36c43014355fd\n前回のやり方が「ほぼタラバガニ」なら今回のやり方は「タラバガニ」です。🦀\n前回のやり方には以下の問題がありました。\n\n      \n        \n        - $etという$tを拡張したグローバルなプロパティーをVueプラグインで用意しなくちゃいけなかった\n- 生成物にファイル構造が分かってしまう情報が出てしまう\n - 翻訳のルートキーをSFCへの相対...",
          "link": "https://zenn.dev/yukihirop/articles/20920804228834",
          "publishedOn": "2021-07-18T05:34:39.000Z",
          "wordCount": 397,
          "title": "vue-i18nの翻訳をyamlファイルかつコンポーネント(SFC)毎にする普通ではない方法[改良版]",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4JjmdK_m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592yaml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2581%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%255B%25E6%2594%25B9%25E8%2589%25AF%25E7%2589%2588%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nappa/articles/e7759c7e65df9a",
          "author": "nappa",
          "description": "ども、今月スタートアップ企業に転職した nappa です。現在新規事業の開発に携わっています。\n今日は転職後2週間でフロントエンドの環境を大工事 & React 導入した話を書きます。\n\n 面接まで\n面接では「新規事業では Vue.js を使っている」と言われて、ある程度フロントエンドの環境が整ってるだろうと思っていました。サーバサイドは Rails を使っているとのことだったので、技術的には前職の経験もあるので、大丈夫だろうと思っていました。\n\n 入社後、フタを開けてみたら...\n入社後、ソースコードを拝見して度肝を抜かれました。\n当初、面接から入社まで Vue.js を使って...",
          "link": "https://zenn.dev/nappa/articles/e7759c7e65df9a",
          "publishedOn": "2021-07-17T11:46:33.000Z",
          "wordCount": 136,
          "title": "転職後2週間でフロントエンドの開発環境を大工事して、React を導入した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JAHoEoUl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nappa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25BB%25A2%25E8%2581%25B7%25E5%25BE%258C2%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%25A4%25A7%25E5%25B7%25A5%25E4%25BA%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581React%2520%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTgzZjQ1NjcwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/8c99581ca5bdd0",
          "author": "おしうみなおき",
          "description": "vue.jsには算出プロパティを意味する「computed」と関数を意味する「methods」があります。\n少しオブジェクト指向を知っている人ならプロパティ とメソッドは全然別物だということが分かりますが、Vue.jsのcomputedでは計算ができてしまうので、実際にできることととしてはほとんど変わらないのです。\nでは、どういうときにプロパティを使って、どういうときにメソッドを使えば良いのでしょうか？\n\n computedとmethodsの大きな違いはキャッシュ機能があるかどうか\ncomputedにはキャッシュ機能がありページをリロードしてもキャッシュした値を表示するため、データが変わ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/8c99581ca5bdd0",
          "publishedOn": "2021-07-16T02:14:23.000Z",
          "wordCount": 95,
          "title": "vue.jsのcomputedとmethodsの使い分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--V-x4f4Gz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue.js%25E3%2581%25AEcomputed%25E3%2581%25A8methods%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "author": "博ノ助",
          "description": "ほんと適当ですみません。\n\n Install\n\n      \n        \n        $ npm install vue-chartjs@2 chart.js@2\n\n\n      \n      なんかこのバージョンじゃないとだめだった。よくわかんないけど両方2にした。\nvue-chartjsの導入を忘れないこと。\n\n      \n        \n        $ npm install @nuxtjs/moment\n\n\n      \n      時間の管理しやすさのためにMoment.jsを。入らなくてもいいかも。\n\n      \n        \n        $ np...",
          "link": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "publishedOn": "2021-07-15T13:00:42.000Z",
          "wordCount": 269,
          "title": "Chart.jsをNuxt.jsで使って時間の折線を作ったので個人的にメモした",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--k9JKkQCd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%258D%259A%25E3%2583%258E%25E5%258A%25A9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Chart.js%25E3%2582%2592Nuxt.js%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E6%258A%2598%25E7%25B7%259A%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmNjNzg4YzUzOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "author": "syuri",
          "description": "ドラムロールとは・・・\n数字がじゃかじゃか回るやつです。\n今回は数字が画面内に入ってきたら、数字のドラムロールが開始されるというアニメーションをプラグインを使わずに実装したいと思います。(Nuxt＋Typescriptで開発しています。)\n\n\n 目次\n最初に考えた方法\nもうちょっと賢い方法\n最終型を見たい方はもうちょっと賢い方法から見てください。\n\n 最初に考えた方法\nまずはコードから。\n\n      \n        \n        <div data-destination=\"2000\"　class=\"number\">0</div>\n\n\n      \n   ...",
          "link": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "publishedOn": "2021-07-13T13:58:19.000Z",
          "wordCount": 626,
          "title": "Vueでドラムロールを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZEgqWODG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syuri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kai/articles/try-nuxt-vite",
          "author": "カイ",
          "description": "最近話題となっている Vite を Nuxt で試してみました。\nVite とは簡単に言ってしまうと、速い、フロントエンドのビルドツールです。\n調べてみると、Nuxt Vite というのがあるんですね。\nそちらで試したことを書いていきます。\n\n Nuxt に Vite を導入する\n\n Nuxt のプロジェクトを作成\n\n      \n        \n        $ yarn create nuxt-app vite-nuxt\n\n\n      \n      vite-nuxtのところは任意の名前で大丈夫です。\nVite を試したいだけなので、とりあえず最小限の構成にしました。\ntarg...",
          "link": "https://zenn.dev/kai/articles/try-nuxt-vite",
          "publishedOn": "2021-07-13T13:36:11.000Z",
          "wordCount": 111,
          "title": "ViteをNuxtで試した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--gLF2MdI9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vite%25E3%2582%2592Nuxt%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTllM2UwYWYxOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kendai/articles/b6a3467eafb7db",
          "author": "Kendai",
          "description": "先日、誰でも最短1分でYouTubeの切り抜きを作れるウェブサービスを公開しました。\n私はプログラミングの勉強を始めて1年半の初学者ですが、個人開発でサービスを公開するまでに、数多くの失敗と苦労をしてきました(そして今もしてます笑)。後ほど詳しく書きますが、以下のような経験をしました。\n\nハッキングを受けデータを盗まれる\nα版をリリースするも作り直しを決意する\n巻き返しのため海外フリーランサーを雇うも無駄金となる\n公開前に本家が同じ機能を発表し諦めかける\nβ版をリリースするも使われない\n\n同じようにプログラミングの勉強をし始めたばかりの方や、個人開発でいつかはサービスを公開したいと考えて...",
          "link": "https://zenn.dev/kendai/articles/b6a3467eafb7db",
          "publishedOn": "2021-07-13T03:19:32.000Z",
          "wordCount": 133,
          "title": "１００万円失いながらハッキングを乗り越え誰でも１分で切り抜きを作れるサービスを公開するまでの失敗と学び",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--GOZbN5Zh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kendai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25EF%25BC%2591%25EF%25BC%2590%25EF%25BC%2590%25E4%25B8%2587%25E5%2586%2586%25E5%25A4%25B1%25E3%2581%2584%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E4%25B9%2597%25E3%2582%258A%25E8%25B6%258A%25E3%2581%2588%25E8%25AA%25B0%25E3%2581%25A7%25E3%2582%2582%25EF%25BC%2591%25E5%2588%2586%25E3%2581%25A7%25E5%2588%2587%25E3%2582%258A%25E6%258A%259C%25E3%2581%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%25A8%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjBiOTJmMTEyNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fjsh/articles/aa17332a126162",
          "author": "Sho Fujimoto",
          "description": "Vue3 を使ってフォーム操作のサンプルを作ります。\n\n プロジェクトの作成\n\n      \n        \n        $ vue create form-handling\n\n? Please pick a preset: Manually select features\n? Check the features needed for your project: Choose Vue version, TS, Linter\n? Choose a version of Vue.js that you want to start the project with 3.x\n? Use ...",
          "link": "https://zenn.dev/fjsh/articles/aa17332a126162",
          "publishedOn": "2021-07-12T16:21:10.000Z",
          "wordCount": 579,
          "title": "Vue3 + Composition API でフォーム操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--v0-4WOsX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sho%2520Fujimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue3%2520%252B%2520Composition%2520API%2520%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTk1ODEzMjk0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/af1723805deef4",
          "author": "おしうみなおき",
          "description": "vue-clipboardを使えば、vue.jsでクリップボードにコピーがめちゃくちゃ簡単に実現することができます！\n\n VueClipboard2をインストールする\n普通にインストールしていきます\n\n      \n        \n        npm install --save vue-clipboard2\n\n\n      \n      \n VueClipboard2をインポートする\n\n      \n        \n        import VueClipboard from 'vue-clipboard2'\nVue.use(VueClipboard)\n\n\n      \n ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/af1723805deef4",
          "publishedOn": "2021-07-11T23:35:18.000Z",
          "wordCount": 78,
          "title": "vue-clipboard2でクリップボードにコピーを簡単に実現する（laravel×vue.js）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZUCRBYkk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:vue-clipboard2%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588laravel%25C3%2597vue.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ymkn8crz/articles/25c7962dd20d54",
          "author": "ymkn8crz",
          "description": "以前実装に使ったVueのライブラリについてメモ。\nスライドアップダウンメニュー、ドロップダウンメニュー、アコーディオンメニューなど言い方がいろいろあるやつ。\n\n 今回の仕様\n「詳しくはこちら」と書いてある赤色ヘッダーをクリックすると、\n\nスライドがアニメーションで開き、詳細を表示する。周りの要素もスライドに合わせて移動する。\n\nもう一度クリックすると元に戻る。\n\n vue-slide-up-down\nVue.jsの開発で、スライド機能を実装するならvue-slide-up-downを使うと簡単に実装できた。\nhttps://github.com/danieldiekmeier/vue-s...",
          "link": "https://zenn.dev/ymkn8crz/articles/25c7962dd20d54",
          "publishedOn": "2021-07-10T15:20:44.000Z",
          "wordCount": 271,
          "title": "【Vue.js】スライドアップダウン・ドロップダウン・アコーディオン",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--C1pLbYOA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymkn8crz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Vue.js%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A2%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AA%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODJlZmMzNWNmZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/lemonadern/articles/6194cc19b71d61",
          "author": "Taishi",
          "description": "チーム開発でVueを使っていると、突然$hoge(hogeは任意の文字列)とかいう変数や関数に遭遇することがある。\n中途半端にVueを知っていると、\n「知らない機能だな、$emit()みたいなやつかな？」\nと思ってGoogle検索をするも、何も結果が得られない...\n「じゃあ普通に関数とかかな？」\nと思ってコード内を検索しても、定義箇所が見当たらない...　　\nという状況に陥ることがある。\nかなり困惑したので調べた。\n\n $hogeとは？\nVueの場合、$hogeというのはすべてのコンポーネントからアクセスできるデータやメゾッドを示している可能性が高い。\nもしファイル内で宣言もなく、im...",
          "link": "https://zenn.dev/lemonadern/articles/6194cc19b71d61",
          "publishedOn": "2021-07-10T07:43:20.000Z",
          "wordCount": 43,
          "title": "Vueで「$」から始まる謎のモノに困惑した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--L505w2oc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Taishi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%25A7%25E3%2580%258C%2524%25E3%2580%258D%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E8%25AC%258E%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%258E%25E3%2581%25AB%25E5%259B%25B0%25E6%2583%2591%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTgwMmRmNmYzNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "author": "gamine🍑",
          "description": "これまでの経緯\njest で Unit Test 描けるようになった。\n次のステップ行ってみよう。\n「「 Component Test だ！」」\n\n 環境とか\n\nJest\nVue.js Composition API\n\n\n 環境を整える\n必要なものを import する。\n\n      \n        \n        import { createLocalVue, shallowMount } from '@vue/test-utils'\nimport VueCompositionApi from '@vue/composition-api'\nimport CalendarTe...",
          "link": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "publishedOn": "2021-07-10T02:21:24.000Z",
          "wordCount": 295,
          "title": "Composition API で @vue/test-utils 使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--PNTJLfiF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Composition%2520API%2520%25E3%2581%25A7%2520%2540vue%252Ftest-utils%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/3c829d8669e188",
          "author": "おしうみなおき",
          "description": "vue-toastedは処理成功したときの「処理が完了しました」やエラーが発生したときの「エラーが発生しました」の実装がかんたんにできるライブラリです。\nそもそも、 真ん中の下や右上あたりからすっと通知が出てきて、すっと隠れるやつを「トースター」っていうんですね。\nではさっそく使ってみます。\n\n vue-toastedをインストールする\nささっとインストールしちゃいます。\n\n      \n        \n        npm install vue-toasted --save\n\n\n      \n      \n app.jsでインポートする\nこのあたりはライブラリを使うときのルーティ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/3c829d8669e188",
          "publishedOn": "2021-07-08T23:56:57.000Z",
          "wordCount": 98,
          "title": "vue-toastedで処理成功時・エラー時の通知を楽に実装する（laravel×vue.js）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--E9s359o2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:vue-toasted%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E6%2588%2590%25E5%258A%259F%25E6%2599%2582%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E6%2599%2582%25E3%2581%25AE%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588laravel%25C3%2597vue.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}
{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "JSer.info",
      "feedUrl": "http://jser.info/rss",
      "siteUrl": "https://jser.info/",
      "articles": [
        {
          "id": "https://jser.info/2021/07/20/node.js-16.5.0whatwg-stream-npm-7.20.0npm-pkg-ember-4/",
          "author": null,
          "description": "JSer.info #549 - Node.js 16.5.0がリリースされました。\nNode v16.5.0 (Current) | Node.js\n16.5.0では試験的に、WHATWGで仕様策定されウェブブラウザに実装されているWHATWG Streams APIが実装されました。(stream/web)\nNode.js Stream APIがありますが、これとは異なる実装です。\nNode.js StreamとWHATWG Streamの違いについては次のドキュメントにも書かれています。\nstreams/FAQ.md at main · whatwg/streams\nNode.jsでWHATWG Streamを実装している理由としてはQUIC/HTTP3のサポートなどが挙げられています。\nHTTP/3 support · Issue #38478 · nodejs/node\nまた、Node.js StreamとWHATWG Streamの棲み分けや相互運用性については次のIssueで議論されています。\nFuture of streams · Issue #39093 · nodejs/node\nnpm 7.20.0がリリースされました。\nRelease v7.20.0 · npm/cli\nnpm 7.20.0では、package.jsonの任意のフィールドを読み書きできるnpm pkgコマンドが追加されています。\nfeat: npm pkg by ruyadorno · Pull Request #3487 · npm/cli\nThe Road to Ember 4.0という記事では、Ember 4のロードマップが公開されています。\nEmber 4は2021年9月20日にリリース予定としています。\nそれぞれのマイグレーションガイドも公開されています。\nEmber.js…",
          "link": "https://jser.info/2021/07/20/node.js-16.5.0whatwg-stream-npm-7.20.0npm-pkg-ember-4/",
          "publishedOn": "2021-07-20T02:16:58.000Z",
          "wordCount": 460,
          "title": "2021-07-20のJS: Node.js 16.5.0(WHATWG Stream)、npm 7.20.0(`npm pkg`)、Ember 4のロードマップ"
        },
        {
          "id": "https://jser.info/2021/07/14/firefox-90-npm-audit-access-guide/",
          "author": null,
          "description": "JSer.info #548 - Firefox 90がリリースされました。\nFirefox 90.0, See All New Features, Updates and Fixes\nFirefox 90 for developers - Mozilla | MDN\nFirefox 90ではECMAScript Proposal Stage 4のPrivate class fieldsをデフォルトでサポート、Stage 3のString/Arrayのat()をサポートしています。FTPサポートの削除、WheelEventの互換性を改善なども含まれています。\nまた、Chromeでも実装されていたFetch metadata request headersが実装されています。\nSec-Fetch-Site、Sec-Fetch-Mode、Sec-Fetch-User、Sec-Fetch-Destのリクエストヘッダがそれぞれのリクエストに追加され、サーバ側でのチェックに利用できます。\nFirefox 90 supports Fetch Metadata Request Headers - Mozilla Security Blog\nProtect your resources from web attacks with Fetch Metadata\nFetch metadata request headersはSafariとIE以外のブラウザで実装されています。\nnpm audit: Broken by Design — Overreactedという記事では、create-react-appを例に npm audit で報告される脆弱性の問題について書かれています。\n報告される脆弱性の殆どはReDOSとなっていて、devDependenciesとして扱うツールにおいてはfalse…",
          "link": "https://jser.info/2021/07/14/firefox-90-npm-audit-access-guide/",
          "publishedOn": "2021-07-14T03:24:13.000Z",
          "wordCount": 480,
          "title": "2021-07-14のJS: Firefox 90、npm auditの問題、Access Guide"
        },
        {
          "id": "https://jser.info/2021/07/06/typescript-4.4-beta-immutable-js-4.0.0-rc.13-petite-vue/",
          "author": null,
          "description": "JSer.info #547 - TypeScript 4.4 betaがリリースされました。\nAnnouncing TypeScript 4.4 Beta | TypeScript\nControl Flow Analysisの改善され、Type Gurdeの結果を変数に入れてから扱うようなAliasのケースも正しく推論されるようになっています。\nunknown型にするuseUnknownInCatchVariablesオプションの追加と\nundefined値の区別をするexactOptionalPropertyTypesオプションの追加されています。\nその他には、declarationの生成やstrictモードでのビルドパフォーマンスの改善も含まれています。\nimmutable-js 4.0.0-rc.13がリリースされています。\nRelease 4.0.0-rc.13 · immutable-js/immutable-js\nimmutable-jsはv4.0.0-rc.12でメンテナンスが停止して、immutable-oss organiztionにてforkとしてメンテナンスがされていました。\n今回のリリースでは、immutable-js organizationにimmutable-ossのメンテナが追加され、immutable-ossの変更内容もimmutable-js 4.0.0-rc.13へとマージされています。\nimmutable-jsとしてメンテナンスを再開するリリースとなっています。\nImmutable.js is essentially unmaintained · Issue #1689 · immutable-js/immutable-js\nIntegrate immutable-js-oss fork into main repository b…",
          "link": "https://jser.info/2021/07/06/typescript-4.4-beta-immutable-js-4.0.0-rc.13-petite-vue/",
          "publishedOn": "2021-07-05T22:36:05.000Z",
          "wordCount": 403,
          "title": "2021-07-06のJS: TypeScript 4.4 Beta、immutable-js 4.0.0-rc.13、petite-vue"
        },
        {
          "id": "https://jser.info/2021/06/29/es2021-storybook-6.3-styled-components/",
          "author": null,
          "description": "JSer.info #546 - ECMAScript 2021(ES2021)がEcma Internationalに承認され、正式にリリースされました。 \nEcma International approves new standards - Ecma International\nES2021では、主に次の機能や構文が追加されています。\nNumeric separators\nPromise combinators\nWeak references and finalizers\nString.prototype.replaceAll\nLogical assignment\nまた、JavaScriptの入門書のJavaScript PrimerもES2021対応した更新がされています。\nES2021に対応したJavaScript Primer 3.0を公開しました - JavaScript入門 | Web Scratch\nStorybook 6.3リリースされました。\nメジャーやアウトライン表示などの視覚的なデバッグ機能の追加がされています。\nまた@storybook/testing-vueと@storybook/testing-reactでのテストのサポート。 Angular 12、Lit 2のサポート、webpack 5のサポートのStable化、Viteのサポートが追加されています。\nStorybook for Vite\nDemystifying styled-componentsという記事では、styled-componentsのミニクローンを作りながらどのような仕組みで動いているのかを解説しています。\nヘッドライン\n[Release News] TOAST UI Editor 3.0 is here! | by TOAST UI | Jun, 2021 | Mediu…",
          "link": "https://jser.info/2021/06/29/es2021-storybook-6.3-styled-components/",
          "publishedOn": "2021-06-29T01:10:45.000Z",
          "wordCount": 411,
          "title": "2021-06-29のJS: ES2021公開、Storybook 6.3、styled-componentsの仕組み"
        }
      ]
    },
    {
      "title": "Zennの「Next.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nextjs/feed",
      "siteUrl": "https://zenn.dev/topics/nextjs",
      "articles": [
        {
          "id": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "author": "だむは",
          "description": "Notion Blogでブログを開設しました\nちょっと前になりますが、Notion Blogでsisterのブログを開設したので、開設するまでの流れを書いてみようと思います。\n▼sisterのブログはこちらです↓\nhttps://blog.sisterwith.com/\n▼ Notion Blogはこちらです↓\nhttps://notion-blog.vercel.app/\n▼ 参考記事はこちらです↓\nhttps://blog.35d.jp/2020-05-23-notion-blog-1\n\n Notion Blogとは\nNotion Blog とは、Notion（バックエンド）で作...",
          "link": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "publishedOn": "2021-07-24T13:06:29.000Z",
          "wordCount": 274,
          "title": "【Notion】Notion Blogでブログ開設〜10分でできるもん〜（デプロイ〜ローカル環境構築まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4mMAgDe---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2582%2580%25E3%2581%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Notion%25E3%2580%2591Notion%2520Blog%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E9%2596%258B%25E8%25A8%25AD%25E3%2580%259C10%25E5%2588%2586%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2582%25E3%2582%2593%25E3%2580%259C%25EF%25BC%2588%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%259C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzk2NmZiMTdiNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "author": "dl10yr",
          "description": "こちらを参考にさせていただきながら（なぞりながら）やってみました。詳しい解説はこちらの方が良いです。\nhttps://sunday-morning.app/posts/2020-12-25-next-js-10-tailwind-2-hybrid-amp\n\n まずはNext.js × Tailwind.cssの環境構築\n以前自分が作ったコマンドを調整して（storybookを外して）環境構築を行いました。\nhttps://zenn.dev/dl10yr/articles/0e31819e983a28\n\n      \n        \n         git clone -b not-i...",
          "link": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "publishedOn": "2021-07-23T13:53:31.000Z",
          "wordCount": 299,
          "title": "Next.js × Tailwind.cssでAMP対応させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zK9HZAU_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25C3%2597%2520Tailwind.css%25E3%2581%25A7AMP%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ihsan/articles/506510db3ba233",
          "author": "マレーシア人のイサン",
          "description": "BEYONDMAGのマガジンサイトに連載と特集機能の画像アップロードを実装したときに、気づいたメモです。\n\n\n 前提🙇🏽‍♂️\n本記事は、コーディングの仕方を教えるよりかは、ベストプラクティスを教えます。\n画像アップロードのコーディングを学びたい人はこの記事を参考にしてください。\n\n 初めに🏁\n\n「画像を更新する時ってどうやるんだろう？」 という疑問持っている人いっぱいいますよね？\n僕もその一人です😅。\n\n 僕が知っている画像の更新方法🙋🏽\n僕が知っている画像の更新方法は二つあります🤔\n\n 1. 同じURLを使用し、画像の中身だけ変える方法\n\n\nつまり画像をS3に同じURLかつ違う画像の...",
          "link": "https://zenn.dev/ihsan/articles/506510db3ba233",
          "publishedOn": "2021-07-23T10:01:09.000Z",
          "wordCount": 48,
          "title": "「NEXTJS / S3 画像アップロード」画像を更新する時にこれやっちゃダメ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5XFlpAxc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2583%25AC%25E3%2583%25BC%25E3%2582%25B7%25E3%2582%25A2%25E4%25BA%25BA%25E3%2581%25AE%25E3%2582%25A4%25E3%2582%25B5%25E3%2583%25B3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%258CNEXTJS%2520%252F%2520S3%2520%25E7%2594%25BB%25E5%2583%258F%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%2589%25E3%2580%258D%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2599%25E3%2582%258B%25E6%2599%2582%25E3%2581%25AB%25E3%2581%2593%25E3%2582%258C%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A1%25E3%2582%2583%25E3%2583%2580%25E3%2583%25A1%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDdDdnajdUQW5kZDREaWFfX1oxYkx4YzZTYVc0TklVWTFPSS1IZ2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kaibuki0315/articles/39fe0e38f6635e",
          "author": "かわみつ",
          "description": "今回は認証サーバとしてLaravelを使った場合を想定したOAuth2の認可コードフローに基づいた認証機能の実装をしていきます。\nNext.jsでは認証を楽に作れるNextAuthというライブラリがあるので、今回はそれを使っていきますが、NextAuthはパスワードなしの認証(Passwordless Authentication)を推奨しているということもあり、OAuth2の認可コードフロー実装に関する情報が少ないように思えたので備忘録も兼ねて記事として残してみます。\n今回Laravel側で認証基盤を実装するためのものとしてLaravel Passportを使います。\nOAuthで定義...",
          "link": "https://zenn.dev/kaibuki0315/articles/39fe0e38f6635e",
          "publishedOn": "2021-07-21T12:59:55.000Z",
          "wordCount": 732,
          "title": "Next.js + TypeScript + Laravel Passportで実装するOAuth2認証",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--HpUOSroa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258B%25E3%2582%258F%25E3%2581%25BF%25E3%2581%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%2520%252B%2520TypeScript%2520%252B%2520Laravel%2520Passport%25E3%2581%25A7%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258BOAuth2%25E8%25AA%258D%25E8%25A8%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTk5NmU1N2I4OC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hokaccha/articles/887e1af361faa8",
          "author": "hokaccha",
          "description": "https://github.com/hokaccha/electron-template-2021\n作ったので公開しておくが、こういうテンプレートはメンテしないとすぐ腐ってしまうけどメンテするモチベーションも特にないのでスナップショットという意味合いも込めて2021をつけている。\n\n electron-next\nベースに electron-next というのを使っていて、これがけっこうよくできていた。やっていることはシンプルで、レンダラプロセスに Next.js を使っていて、開発時は Next.js のサーバーを起動し、production build では next export ...",
          "link": "https://zenn.dev/hokaccha/articles/887e1af361faa8",
          "publishedOn": "2021-07-20T14:58:32.000Z",
          "wordCount": 262,
          "title": "Electron アプリのテンプレート 2021",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4FBoJrGv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hokaccha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Electron%2520%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25202021%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpYWctanVyZUl3Q21TY0ZpclkwaUo0eXppaGZYekxOc1RfejZNX3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nshiro/articles/49b0c7b5fabef5",
          "author": "nshiro",
          "description": "Laravel 作成者の Taylor さんより、Next.js スターターキットがリリースされました。\nhttps://twitter.com/taylorotwell/status/1417148351506681859\nhttps://github.com/taylorotwell/next-example-frontend\nhttps://github.com/taylorotwell/next-example-backend\nTaylor さん個人のリポジトリなので、Laravel 公式という訳では無いですが、まぁ、Laravel 作成者の方ですからね。半分公式と言えなくはない...",
          "link": "https://zenn.dev/nshiro/articles/49b0c7b5fabef5",
          "publishedOn": "2021-07-20T07:16:47.000Z",
          "wordCount": 41,
          "title": "Laravel 非公式（半分公式？）な Next.js スターターキット登場",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--W-oCjHNV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nshiro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Laravel%2520%25E9%259D%259E%25E5%2585%25AC%25E5%25BC%258F%25EF%25BC%2588%25E5%258D%258A%25E5%2588%2586%25E5%2585%25AC%25E5%25BC%258F%25EF%25BC%259F%25EF%25BC%2589%25E3%2581%25AA%2520Next.js%2520%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%25BC%25E3%2582%25AD%25E3%2583%2583%25E3%2583%2588%25E7%2599%25BB%25E5%25A0%25B4%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODU5NTMxMmFlNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "author": "白雀",
          "description": "Next + typescript で i18n 対応し、SSR、SSG を行う example\n本項では、Next を使用して i18n 対応(SSR, SSG)を方法を解説します。\n\n 記事の要約\n\n\nnext-i18nextを使うとi18nextを使用して、SSR、SSG を比較的手軽に行う事ができる\n\nreact-i18nextは typescript 対応を行っているので、.d.tsでネームスペースごとに追加の定義を行うと便利\n\n参考\n\n\ni18n 対応時はnext-seoが便利\n\ni18n 対応していない場合も便利\ni18n 対応時はalternatesの設定をきちんとす...",
          "link": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "publishedOn": "2021-07-19T10:11:01.000Z",
          "wordCount": 801,
          "title": "Next + typescript で i18n対応し、SSR、SSGを行うexample",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--w9oO3BM3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%2599%25BD%25E9%259B%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next%2520%252B%2520typescript%2520%25E3%2581%25A7%2520i18n%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2580%2581SSR%25E3%2580%2581SSG%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODcyNGZlMmIxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "author": "15",
          "description": "まえがき\nこのあたりを参考に環境構築をしたが、そのままでは動かない or 好みに変えたい部分があったので自分の手順を作ってみた。\n詳しい手順の理解が必要であればリンク先を参照してほしい。\nhttps://zenn.dev/66ed3gs/articles/99aa613a86f21f\nhttps://zenn.dev/januswel/articles/402774d76424e71ac906\n\n create-next-app\nts版で実行する。\n\n      \n        \n        npx create-next-app --ts sample-app\ncd samp...",
          "link": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "publishedOn": "2021-07-18T04:27:20.000Z",
          "wordCount": 104,
          "title": "Next.js 開発環境構築メモ 2021年7月版 - Yarn, TypeScript, ESLint, Prettier, VSCode",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JOauVqs9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:15%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2583%25A1%25E3%2583%25A2%25202021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2520-%2520Yarn%252C%2520TypeScript%252C%2520ESLint%252C%2520Prettier%252C%2520VSCode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "author": "minguu",
          "description": "はじめに\nこの記事では, Firebase Authentication を使って TypeScript を使用した Next アプリに Google ログインを実装する方法を記述します.\nJavaScript を使用した Next アプリに Google ログインを実装する方法はこちらに記述しています.\nこの記事が他の人の参考になれば幸いです.\nまた, この記事の内容に間違った記載がありましたら, 指摘してもらえるとありがたいです.\n\n 環境\n\n\n\n名前\nバージョン\n\n\n\n\nmacOS Big Sur\n11.4\n\n\nNode.js\n16.4.1\n\n\nTypeScript\n4.3.5...",
          "link": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "publishedOn": "2021-07-18T00:16:08.000Z",
          "wordCount": 542,
          "title": "Next.js（TypeScript）で Firebase を利用し, Google ログインを",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZjMUES8F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minguu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25EF%25BC%2588TypeScript%25EF%25BC%2589%25E3%2581%25A7%2520Firebase%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%252C%2520Google%2520%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lMaU1RSm1OSlUyZXBOWldpcWpTOTV6eXBVeFQxSDRjU2FVVUNvbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/aiji42/articles/1de8f9ea7b8a10",
          "author": "aiji42",
          "description": "https://twitter.com/aiji42_dev/status/1415711986608795648?s=20\n\n\nWhy Next.js\n私は、業務でもプライベートでも Next.js を使っています。\nNext.js は \"Zero Config\" をうたっているわけですが、実際業務で使うとなると、なかなか Zero とはいきません。IE11用にトランスパイルが必要になったり、ソースマップのアップロードのために webpack の拡張が必要なるケースにおいては、next.config.js のカスタマイズが必要になります。\nそういったカスタマイズをサポートし、設定のスト...",
          "link": "https://zenn.dev/aiji42/articles/1de8f9ea7b8a10",
          "publishedOn": "2021-07-17T14:43:03.000Z",
          "wordCount": 364,
          "title": "【Next.js】みんな next.confing.js にどんなプラグイン入れてる？",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--0yXqxaFf--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:aiji42%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Next.js%25E3%2580%2591%25E3%2581%25BF%25E3%2582%2593%25E3%2581%25AA%2520next.confing.js%2520%25E3%2581%25AB%25E3%2581%25A9%25E3%2582%2593%25E3%2581%25AA%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E5%2585%25A5%25E3%2582%258C%25E3%2581%25A6%25E3%2582%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTczOGQyOGQwMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "author": "Yuuya Miyamae",
          "description": "Firebase AppCheck 導入\n\n 対応サービス\n\nRealtime Database\nCloud Storage\nCloud Functions (callable functions)\n\n\n 前提\nFirebase のプロジェクト作成まで完了している\n\n 1. reCAPTCHA 登録\nhttps://www.google.com/recaptcha/admin/create\n\n以下の情報を登録\n\nラベル\nreCAPTCHA タイプ: \"reCAPTCHA v3\" を選択\nドメイン: ドメイン設定\n\n\n 2. コンソール画面からAppCheck登録\nhttps://co...",
          "link": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "publishedOn": "2021-07-15T19:54:35.000Z",
          "wordCount": 108,
          "title": "Firebase: AppCheck 導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--oTNttJXm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuuya%2520Miyamae%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%253A%2520AppCheck%2520%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjYyY2JiMzAyYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "author": "Eringi_V3",
          "description": "フロントエンドアプリケーションの開発を行う上で避けては通れないデータフェッチの実装。\nREST APIを使うか、GraphQLを使うか、クライアントでキャッシュするか、APIレスポンスにどのようにして型を付けるか、状態管理はどうするのかなど、開発者の悩みが尽きないけれども、それに関しての設計を考えたり議論を行うのはフロントエンド開発の楽しいポイントだと僕は思っています。\nこの記事では、バックエンドにHasura、フロントエンドにNext.jsを使用する場合に僕が最強だと感じたツールの組み合わせ・使い方を紹介します。\n\n モチベーション\n\nAPIからのレスポンスにはTypeScriptの型...",
          "link": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "publishedOn": "2021-07-15T15:16:24.000Z",
          "wordCount": 768,
          "title": "ぼくのかんがえたさいきょうのデータフェッチ 2021Summer🏄‍♂️【Next.js / Hasura】",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--82ifwyxV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Eringi_V3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2581%25BC%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25E3%2582%2593%25E3%2581%258C%25E3%2581%2588%25E3%2581%259F%25E3%2581%2595%25E3%2581%2584%25E3%2581%258D%25E3%2582%2587%25E3%2581%2586%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%25202021Summer%2520%25E3%2580%2590Next.js%2520%252F%2520Hasura%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDU2Y2U2YjAzNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "author": "リーナーテックブログ",
          "description": "Leaner Technologies の黒曜(@kokuyouwind)です。\n以前 Leaner の技術スタックを記事にまとめましたが、Copilot CLIでのコンテナ化やAmplify ConsoleでのSPA配信で技術スタックが更新されたことで少々古い内容になっています。\nhttps://zenn.dev/leaner_tech/articles/20210608-leaner-techstack\nまた新規プロダクトの立ち上げが始まっており、そちらでは従前のプロダクトと異なる技術選定をした部分もあります。\nこれらの点を踏まえ、本記事では Leaner で採用している現在の技術ス...",
          "link": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "publishedOn": "2021-07-15T01:51:12.000Z",
          "wordCount": 280,
          "title": "Leaner の技術スタック紹介(2021年7月版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--j47hoymn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Leaner%2520%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E7%25B4%25B9%25E4%25BB%258B%25282021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGZiYzhkYzg5MS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/quocca/articles/36182859d30b22",
          "author": "quocca",
          "description": "したかったので開発しました！\nhttps://quocca-works.com/accela/\nドキュメントはサイト内にあるので、この記事ではNext.jsとの対比や簡単なコードで、Accelaの特徴を紹介していきます。実際にどういった動作をするかは当サイトで確認することができ、サイトのデータ自体もダウンロードできるので、サンプルとしてお使いください。\n\n Next.jsを参考にした機能\nNext.js(React)の設計思想やNode.jsのエコシステムは素晴らしいものですが、Accelaはその全てを参考にして作っているわけではありません。主に以下の3点を踏襲した上で、別のコンセプトを...",
          "link": "https://zenn.dev/quocca/articles/36182859d30b22",
          "publishedOn": "2021-07-14T13:36:47.000Z",
          "wordCount": 144,
          "title": "PHPでもNextしたい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--J0Ldggk3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:quocca%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:PHP%25E3%2581%25A7%25E3%2582%2582Next%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjZmODA0YjU1Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nihashi/articles/f532d43bd52e6f",
          "author": "nihashi",
          "description": "Next.jsの導入\n\n      \n        \n        npx create-next-app project-name\n\n\n      \n      typescriptを導入したい場合はオプションに--typescript（もしくは--ts）を追加するか、プロジェクト作成後に必要なファイルの作成およびパッケージのインストールを行います。\n\n      \n         プロジェクト作成時に導入\n        npx create-next-app project-name --typescript\n\n\n      \n      \n      \n        ...",
          "link": "https://zenn.dev/nihashi/articles/f532d43bd52e6f",
          "publishedOn": "2021-07-14T11:48:49.000Z",
          "wordCount": 588,
          "title": "Next.jsの環境を構築する（+TypeScript, Storybook, Hygen）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--xeTR771G--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nihashi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588%252BTypeScript%252C%2520Storybook%252C%2520Hygen%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzczMzgyM2EwYi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "author": "din",
          "description": "はじめに\nなろう形式のタイトルってわかりやすいですね。\n初投稿です。\nReactの学習のため、Todoアプリを作成しました。\nどうせなら最新のライブラリを使用しようとRecoil, React Hook Form v7を使ってみましたので、備忘録がてらその内容を紹介します。\n\n 環境\nWindows10 64bit(20H2)\nWSL(Ubuntu 18.) v1\nnode v14.17.1\nyarn 1.22.5\nVSCode\n\n 完成図\nこんな感じの簡単なtodoアプリを作ってみました。\n見た目は完全に度外視しています。\n\n\n install\nまずWSLで下記コマンドを実行して、...",
          "link": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "publishedOn": "2021-07-11T15:01:45.000Z",
          "wordCount": 462,
          "title": "Next.jsでtodoアプリ を作ろうとしたらRecoil + React Hook Form v7で楽ができた件",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5ysT6Zxi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:din%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%25E3%2581%25A7todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Recoil%2520%252B%2520React%2520Hook%2520Form%2520v7%25E3%2581%25A7%25E6%25A5%25BD%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzcxZDU3OTNkZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/c091602d3060d3",
          "author": "mattun",
          "description": "こちらの記事の続きになります。\nhttps://zenn.dev/articles/6e260f3a5af117\n\n serverless-nextjs\n2021年7月11日現在\nhttps://www.serverless.com/plugins/serverless-nextjs-plugin/\nこちらを使うことによって、Next.jsの10系の機能をAWSにデプロイできると歓喜してそちらをつかいながら実装しておりました。\n\n ISRを設定したページで503エラーの頻発\nこちらエラーの全文を載せておきます。\n\n      \n        \n        503 ERROR\nThe...",
          "link": "https://zenn.dev/makumattun/articles/c091602d3060d3",
          "publishedOn": "2021-07-11T08:10:46.000Z",
          "wordCount": 148,
          "title": "Vercelを使わずにNext.jsするのはまだ早かった",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--VhcVs2MA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vercel%25E3%2582%2592%25E4%25BD%25BF%25E3%2582%258F%25E3%2581%259A%25E3%2581%25ABNext.js%25E3%2581%2599%25E3%2582%258B%25E3%2581%25AE%25E3%2581%25AF%25E3%2581%25BE%25E3%2581%25A0%25E6%2597%25A9%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/a_da_chi/articles/7ba871c23c5510",
          "author": "adachi",
          "description": "はじめに\n※この記事は下記記事の延長です。下記記事を読まなくても問題ないように書いていますが、ご興味ありましたらご一読ください。\nhttps://zenn.dev/a_da_chi/articles/181ea4ccc39580#スナップショットテスト導入\n今回はNext.jsプロジェクトにCypressを導入してGitHub ActionsでVercelのPreview環境のE2Eテストをするまでの手順を書いていきたい思います。\n\n 前提\n\nNext.jsでsrcディレクトリ配下にアプリケーションコードを配置していること\nVercelを使用しており、PRごとにPreview環境がデ...",
          "link": "https://zenn.dev/a_da_chi/articles/7ba871c23c5510",
          "publishedOn": "2021-07-11T07:56:28.000Z",
          "wordCount": 301,
          "title": "Next.jsプロジェクトにCypressを導入してGitHub ActionsでVercelのPreview環境のE2Eテストをする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q3wXf_4b--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:adachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABCypress%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6GitHub%2520Actions%25E3%2581%25A7Vercel%25E3%2581%25AEPreview%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEE2E%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hvU1F2dTVtTFZ2WUdOVUt1bE5kVE9Gd2Q5Z3VlTFhCaWJ3LTRHS2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mo_ri_regen/articles/implement-ssg-article",
          "author": "モーリー",
          "description": "Next.jsではAPIを叩くときにgetStaticPropsを使うことで、ビルド時にデータを取得して事前にHTMLファイルのレンダリングを行うことができます。ビルド時にデータを取得して事前にHTMLファイルのレンダリングを行うことをSSGと呼びます。\nTypeScriptを使う場合はgetStaticPropsの型にGetStaticProps[1]を指定します。\nSSG(StaticSiteGeneration)とは\nStatic Generationと呼ばれることもあります。\nビルド時にデータを取得することでpre-renderされるため高速にデータを読むことができます。\nリアル...",
          "link": "https://zenn.dev/mo_ri_regen/articles/implement-ssg-article",
          "publishedOn": "2021-07-11T02:03:43.000Z",
          "wordCount": 154,
          "title": "【簡単】Next.jsによるSSGの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KQl-hxC---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E7%25B0%25A1%25E5%258D%2598%25E3%2580%2591Next.js%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258BSSG%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h5X0w2OU5jR2tiM3dLVU1LMUUzb3J4b29MMmZWQmEzdFNwV0tNV3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/st43/articles/ff9ac1b0c7d057",
          "author": "蔀",
          "description": "一ヶ月くらいかけて、念願だった個人サイトをつくりました。\nhttps://www.shetommy.com/\nポートフォリオサイト + 個人ブログ + Web技術の実験場的な使い方をするためにつくりました。\nポートフォリオサイトとしての実装は割とすぐできたんですが、ブログ機能が大変でした。\nこの記事ではそこメインで書きたいと思います。\nNotion APIをガチャガチャした詳細は長くなるので、後で記事を書いて、とりあえずこの記事は個人サイト開発のまとめとしてもうちょっと雑多に書いていきます。\n同じようなことをしたい方の参考になれば幸いです。\n\n ソース\n公開しています。\nhttps://...",
          "link": "https://zenn.dev/st43/articles/ff9ac1b0c7d057",
          "publishedOn": "2021-07-09T09:28:10.000Z",
          "wordCount": 128,
          "title": "Next.js x Notion APIで個人ブログをつくりました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--iszGFuMT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E8%2594%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520x%2520Notion%2520API%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258A%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTMwYzI0MTEwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/okuninoshi/articles/a63131abf7d9ae",
          "author": "okuninoshi",
          "description": "How to Rebuild the mdn express local library website with strapi and nextjs\n\n 1-Intro\nWelcome to the \"Local Library\" Strapijs, Nextjs tutorial, in which we develop a web app that might be used to manage the catalog for a local library.\nthis tutorial is a rebuild of the MDN \"Local Library\" Expre...",
          "link": "https://zenn.dev/okuninoshi/articles/a63131abf7d9ae",
          "publishedOn": "2021-07-08T13:02:52.000Z",
          "wordCount": 3386,
          "title": "mdn expressJs local library website rebuilt with Strapi and NextJS",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--C0lbhXnT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:okuninoshi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:mdn%2520expressJs%2520local%2520library%2520website%2520rebuilt%2520with%2520Strapi%2520and%2520NextJS%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hSa2ZzUlBNUlJGOGNUQjUzS00xN3QzY1VlVllMeDFzeUFkRlRSRlE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/urasaku77/articles/7fefb518fe91db",
          "author": "urasaku77",
          "description": "経緯\nStorybookの公式に沿ってインストールして実行する際、下記のようなエラーが発生\n\nTypeError: Cannot read property 'get' of undefined\n\n\n 原因\n見ただけではなんのことではわからなかったのだが、調べてみると使っているwebpackのバージョンが違うことが原因だった\n公式のinitコマンドを打つと、自動的にwebpack4が使われるらしく、webpack5を使っている場合はエラーが出るみたい（もう少しわかりやすいエラー出してほしい・・・）\n\n 解決策\n.storybook/main.jsを書き換えることでwebpack5を適...",
          "link": "https://zenn.dev/urasaku77/articles/7fefb518fe91db",
          "publishedOn": "2021-07-08T07:45:05.000Z",
          "wordCount": 51,
          "title": "Storybook導入時に、webpackのバージョンで詰まった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--EWaSgXbt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:urasaku77%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Storybook%25E5%25B0%258E%25E5%2585%25A5%25E6%2599%2582%25E3%2581%25AB%25E3%2580%2581webpack%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTdjYThhOWM0Ny5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ignorant_kenji/articles/3c74e04a99bb0362c554",
          "author": "Kenji",
          "description": "経緯\n業務でさわることになり、学習としてアウトプットさせて頂きます。\n\n はじめに\nNext.js はReactを基礎としたフレームワークです。そして、Vercel社が提供するOSS プロジェクトになっています。\nWebのデプロイ・ホスティングサービス Vercel を運営しており Next.js と Vercel を合わせて使用し、容易にWebサイトを制作することができるようになっています。\nSPA (Single Page Application)　では,Webサイトへ遷移するとローディングが表示され、次々にコンポーネントが表示されることがあったのではないでしょうか？ユーザの行動...",
          "link": "https://zenn.dev/ignorant_kenji/articles/3c74e04a99bb0362c554",
          "publishedOn": "2021-07-08T00:25:45.000Z",
          "wordCount": 93,
          "title": "今更だけど、Next.jsをさわるんだ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qOzAILVr--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kenji%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E4%25BB%258A%25E6%259B%25B4%25E3%2581%25A0%25E3%2581%2591%25E3%2581%25A9%25E3%2580%2581Next.js%25E3%2582%2592%25E3%2581%2595%25E3%2582%258F%25E3%2582%258B%25E3%2582%2593%25E3%2581%25A0%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDk0MmE0YWEyNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuku/articles/f5a728808c4efa",
          "author": "Yuku Kotani",
          "description": "Next.js には強力な Incremental Static Regeneration がありますが、Vercel 以外にホストしている場合は使うことができません。そのとき、Cache-Control や Surrogate-Control ヘッダを用いて Fastly のような CDN にキャッシュを持たせたくなります。\nこのヘッダの持たせ方に少しクセがあったので備忘録的に書きます。\n例えば、/articles/[id] にヘッダを持たせたいとします。\n\n 方法1. next.config.js で設定\nnext.config.js の headers で設定する方法です。\n\n  ...",
          "link": "https://zenn.dev/yuku/articles/f5a728808c4efa",
          "publishedOn": "2021-07-07T12:35:13.000Z",
          "wordCount": 152,
          "title": "Next.js で SSR/SSG したページに Cache-Control などのヘッダを設定する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--B4IWN0ev--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuku%2520Kotani%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%2520%25E3%2581%25A7%2520SSR%252FSSG%2520%25E3%2581%2597%25E3%2581%259F%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2581%25AB%2520Cache-Control%2520%25E3%2581%25AA%25E3%2581%25A9%25E3%2581%25AE%25E3%2583%2598%25E3%2583%2583%25E3%2583%2580%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEQVVDNDRXNTlSbWgyMjVIR2ZycENZQmRlNUJNZ0VCaDl3TGY0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/minguu42/articles/20210705-nextjs-auth",
          "author": "minguu",
          "description": "はじめに\nこの記事では, Firebase Authentication を使って Next アプリに Google ログインを実装する方法を記述します.\nNext アプリの初期化, Firebase アカウントの作成は済んでいることを前提とします.\nこの記事が他の人の参考になれば幸いです.\nまた, この記事の内容に間違った記載がありましたら, 指摘してもらえるとありがたいです.\n\n 環境\n\n\n\n名前\nバージョン\n\n\n\n\nmacOS Big Sur\n11.4\n\n\nNode.js\n16.4.1\n\n\nNext.js\n11.0.1\n\n\nReact\n17.0.2\n\n\nFirebase Jav...",
          "link": "https://zenn.dev/minguu42/articles/20210705-nextjs-auth",
          "publishedOn": "2021-07-05T11:20:37.000Z",
          "wordCount": 460,
          "title": "Next.js で Firebase Authentication を利用し, Google ログインを実装した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vAjubluh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minguu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%2520%25E3%2581%25A7%2520Firebase%2520Authentication%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%252C%2520Google%2520%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lMaU1RSm1OSlUyZXBOWldpcWpTOTV6eXBVeFQxSDRjU2FVVUNvbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ken505/articles/c049a64f3a2989",
          "author": "ken505",
          "description": "以下の公式ドキュメントを参考にしながら、Next.js で ESLint を設定します\n\n ESLint.org\n\n\n docs/rules\n\n\n npm/ESLint\n\n\n Next.js/ESLint\n\n\nバージョン11.0.0以降、Next.jsは統合されたESLint体験をすぐに提供します。\nnext lintをスクリプトとしてpackage.jsonに追加します。\n\n\n      \n        \n        \"scripts\": {\n  \"lint\": \"next lint\"\n}\n\n\n      \n      とのことなので npx create-next-app を実...",
          "link": "https://zenn.dev/ken505/articles/c049a64f3a2989",
          "publishedOn": "2021-07-05T07:08:15.000Z",
          "wordCount": 360,
          "title": "Next.js version 11.0.0 で ESLint を使うために公式ドキュメントを紐解く",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Oc6OVKya--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ken505%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%2520version%252011.0.0%2520%25E3%2581%25A7%2520ESLint%2520%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AB%25E5%2585%25AC%25E5%25BC%258F%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E7%25B4%2590%25E8%25A7%25A3%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjIyMmIxYWU1OC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mo_ri_regen/articles/nextjs-environment-variables",
          "author": "モーリー",
          "description": "Nextjsでは、たとえばデータベースに接続するときに使う環境変数を設定することができます。\n設定方法は、ルートディレクトリ直下にあるnext.config.jsにあるmodule.exports...とあるところに変数を追加すればOKです。(ファイルがなければnext.config.jsをルート直下に作ってください)\n\n      \n        next.config.js\n        module.exports = {\n  env: {\n    // customKeyは任意の変数名でOK\n    // 'my-value'のところで値を設定する\n    customKey...",
          "link": "https://zenn.dev/mo_ri_regen/articles/nextjs-environment-variables",
          "publishedOn": "2021-07-04T22:23:27.000Z",
          "wordCount": 67,
          "title": "Next.jsの環境変数取得方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--LHC6G5sB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%25AA%25E3%2583%25BC%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Next.js%25E3%2581%25AE%25E7%2592%25B0%25E5%25A2%2583%25E5%25A4%2589%25E6%2595%25B0%25E5%258F%2596%25E5%25BE%2597%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h5X0w2OU5jR2tiM3dLVU1LMUUzb3J4b29MMmZWQmEzdFNwV0tNV3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mast1ff/articles/efc41938236c51",
          "author": "Mast1ff",
          "description": "半年くらい前にこんな記事を書きました。\nhttps://zenn.dev/mast1ff/articles/3d6f4b9e4a38bb\n様々なプロダクトにメインとして使用しているNext.js製のフロントエンドをStimulusとTurboに書き換えて運用してみました。\nhttps://hotwired.dev/\n今回は実際に運用してみた所管などをまとめたいと思います。\n\n はじめに\nとはいえ、Hotwireたちは飽くまでフロントエンドのみ。バックエンド側のロジックを持つことのできないこれらのライブラリとの単純な比較対象としては、サーバーレスでも運用できるNext.jsとは若干ズレが出...",
          "link": "https://zenn.dev/mast1ff/articles/efc41938236c51",
          "publishedOn": "2021-07-04T12:39:28.000Z",
          "wordCount": 660,
          "title": "React vs Hotwire ~ 私とHotwireとその後",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--90H55BdL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Mast1ff%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:React%2520vs%2520Hotwire%2520%7E%2520%25E7%25A7%2581%25E3%2581%25A8Hotwire%25E3%2581%25A8%25E3%2581%259D%25E3%2581%25AE%25E5%25BE%258C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2czMFpoemRvdlNKaEpDNVhTdVdBVlFSbm9DVGQ1eFdDdjRIR2d0dFE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fujiyama/articles/50b0a73acd89b7",
          "author": "Fujiyamayama",
          "description": "経緯\nFirebase Storageを初めて使ってみて，とても使いやすいと感じたので共有したいと思いました．\nNext.jsをフレームワークとして利用しています．\n\n\n 環境\n\n      \n        \n        react@17.0.2\nfirebase@8.6.8\ntypescript@4.3.4\nnext@11.0.1\ntailwindcss@2.2.4\n\n\n      \n      \n 事前準備\n事前にFirebaseプロジェクトを作成し，Reactのfirebase.jsなどにfirebaseの設定を記述してください．また\n\n      \n        \n ...",
          "link": "https://zenn.dev/fujiyama/articles/50b0a73acd89b7",
          "publishedOn": "2021-07-04T11:35:45.000Z",
          "wordCount": 811,
          "title": "【Next.js】Firebase Storageに画像をアップしてURLを取得する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zUA0ew2h--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Fujiyamayama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590Next.js%25E3%2580%2591Firebase%2520Storage%25E3%2581%25AB%25E7%2594%25BB%25E5%2583%258F%25E3%2582%2592%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25A6URL%25E3%2582%2592%25E5%258F%2596%25E5%25BE%2597%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hlMHpabHhNbXBzTEQ4NlJqZTFGUnVJd1dBcTJFNUxXWkd3S0U4QVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/takanopontaro/articles/dde9458c32f3f9",
          "author": "takanopontaro",
          "description": "数年前に Kindle を購入してから結構本を読むようになり、今はだいたい年間 80 冊程度読んでいます。半額セールとか 50% ポイント還元とか、そういったセールを Kindle ストアは頻繁に行っているので、そういうときに一気にまとめ買いするのが習慣になりました。\nアマゾンのほしい物リストに本を登録しておくと、安くなったときにその旨表示されて便利なんですが、これってポイント還元の時は分からないのでちょっと困っていました。どんなキャンペーンなのかはあまり重要ではなく、欲しい本が得になっているかどうかだけ分かればいいので、そういった事が簡単に分かるサービスはないかな〜と探してみたんですが...",
          "link": "https://zenn.dev/takanopontaro/articles/dde9458c32f3f9",
          "publishedOn": "2021-07-04T01:51:37.000Z",
          "wordCount": 195,
          "title": "Kindle のセール本をウォッチできるサイトを作った。",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--bM3GHwub--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:takanopontaro%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Kindle%2520%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%25BC%25E3%2583%25AB%25E6%259C%25AC%25E3%2582%2592%25E3%2582%25A6%25E3%2582%25A9%25E3%2583%2583%25E3%2583%2581%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pwWFRKdlNHR1dIR3Q4SHZpQW9VZTZ2UEw3aGU1OC1NSXp6QXQwPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/itomise/articles/20356a794b665f",
          "author": "itomise",
          "description": "next/image での画像最適化が最近のホットなトピックではありますが、見た感じ、next/imageは画像の最適化をサーバサイドで処理する前提のコンポーネントのようです。\nNext.jsでサーバを立てられる場合は使っていきたいのですが、個人的に案件でそういう構成になっていることはあまりないです。\nそこで、next export で使える画像最適化についてまとめてnext/imageっぽいコンポーネントを作ってみようと考えました。\n一応、公式の next export での next/image の使用法についてのページはこちら です。\n\n 前提\n今回はnext/imageのソースを...",
          "link": "https://zenn.dev/itomise/articles/20356a794b665f",
          "publishedOn": "2021-07-03T14:26:36.000Z",
          "wordCount": 333,
          "title": "next-optimized-images で next/image っぽいものをつくる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s---15vqTrb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:itomise%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:next-optimized-images%2520%25E3%2581%25A7%2520next%252Fimage%2520%25E3%2581%25A3%25E3%2581%25BD%25E3%2581%2584%25E3%2582%2582%25E3%2581%25AE%25E3%2582%2592%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fN2E1Y2RlZmViYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/thim/articles/7c8ceba730dad35d27dc",
          "author": "thim",
          "description": "Next.js のプロジェクトにCSSModules(Sass)+Storybookをセットアップしようとしてハマり倒したので手順を記録しておきます。\nセットアップ完了状態のソースはこちら\nhttps://github.com/TakahiroHimi/Next-CSSModules-SB-sample\n\n Next.js アプリ作成\n\n      \n        \n        npx create-next-app --example with-typescript myapp\n\n\n      \n      \n CSSModules(Sass)セットアップ\n\n パッケージ追加\n\n...",
          "link": "https://zenn.dev/thim/articles/7c8ceba730dad35d27dc",
          "publishedOn": "2021-07-03T12:41:24.000Z",
          "wordCount": 275,
          "title": "Next.js+CSSModules(Saas)+Storybookのセットアップ",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ju-0kqe0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:thim%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%252BCSSModules%2528Saas%2529%252BStorybook%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDQwMTY2ZjMyOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/b592e36d852e8c",
          "author": "dl10yr",
          "description": "Next.jsでd3使おうとしたら、ハマりました。\nNext.jsがESModuleフォーマットをサポートしてないのが原因のようです。\nhttps://github.com/vercel/next.js/issues/9607\n\n      \n        \n        Error [ERR_REQUIRE_ESM]: Must use import to load ES Module: /Users/hogehoge/node_modules/robust-predicates/index.js\nrequire() of ES modules is not supported.\n...",
          "link": "https://zenn.dev/dl10yr/articles/b592e36d852e8c",
          "publishedOn": "2021-07-03T01:23:44.000Z",
          "wordCount": 169,
          "title": "Next.jsがESModuleフォーマットサポートしてない問題（ERR_REQUIRE_ESM）の回避策",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--a9iA35R7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%25E3%2581%258CESModule%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%259E%25E3%2583%2583%25E3%2583%2588%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25AA%25E3%2581%2584%25E5%2595%258F%25E9%25A1%258C%25EF%25BC%2588ERR_REQUIRE_ESM%25EF%25BC%2589%25E3%2581%25AE%25E5%259B%259E%25E9%2581%25BF%25E7%25AD%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/a_da_chi/articles/0ea66053a8b778",
          "author": "adachi",
          "description": "はじめに\n※この記事は下記記事の延長です。下記記事を読まなくても問題ないように書いていますが、ご興味ありましたらご一読ください。\nhttps://zenn.dev/a_da_chi/articles/181ea4ccc39580#スナップショットテスト導入\nReactでユニットテストといえばJestですよね。\n今回はNext.jsプロジェクトにJestを導入してGitHub Actionsでユニットテストをするまでの手順を書いていきたい思います。\n\n 前提\n\nNext.jsでsrcディレクトリ配下にアプリケーションコードを配置していること。\n\n\n 導入手順\n\n必要なパッケージをインス...",
          "link": "https://zenn.dev/a_da_chi/articles/0ea66053a8b778",
          "publishedOn": "2021-07-02T13:43:28.000Z",
          "wordCount": 337,
          "title": "Next.jsプロジェクトにJestを導入してGitHub Actionsでユニットテストをする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--iy6-cD5d--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:adachi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25ABJest%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%25A6GitHub%2520Actions%25E3%2581%25A7%25E3%2583%25A6%25E3%2583%258B%25E3%2583%2583%25E3%2583%2588%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E3%2582%2592%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hvU1F2dTVtTFZ2WUdOVUt1bE5kVE9Gd2Q5Z3VlTFhCaWJ3LTRHS2c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/manalink/articles/manalink-for-teachers-renewal-202107",
          "author": "マナリンク Tech Blog",
          "description": "マナリンクCTOの名人です。\n2021年7月1日に、弊社が運営しているマナリンクTeachersというメディアサイトをリニューアルしました！\nhttps://for-teachers.manalink.jp/\nこのメディアサイトはNext.js×microCMSで構築されています。初回リリースは2020年秋ごろだったので、半年以上運用してのリニューアルとなりガッツリ実装を書き換えました。\nそのため本記事では前回の復習も兼ねて、リニューアルの流れやTipsをまとめてみようと思います。\n\n メディアの概要\nマナリンクTeachersは、オンライン家庭教師向けの情報をまとめているメディアサイト...",
          "link": "https://zenn.dev/manalink/articles/manalink-for-teachers-renewal-202107",
          "publishedOn": "2021-07-02T09:25:52.000Z",
          "wordCount": 227,
          "title": "Next.js×microCMS製のメディアサイトをリニューアルした話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--yodqENXn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%259E%25E3%2583%258A%25E3%2583%25AA%25E3%2583%25B3%25E3%2582%25AF%2520Tech%2520Blog%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25C3%2597microCMS%25E8%25A3%25BD%25E3%2581%25AE%25E3%2583%25A1%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25A2%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2582%2592%25E3%2583%25AA%25E3%2583%258B%25E3%2583%25A5%25E3%2583%25BC%25E3%2582%25A2%25E3%2583%25AB%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODNjZWUyZDUxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/renshimosawa/articles/266b780292aadd",
          "author": "Ren Shimosawa",
          "description": "今回はこのようなサイト内のニュース欄をmicroCMSを用いて作ります。\nデプロイはAWS amplifyでする前提です。\n\n\n microCMSの設定\n\n (1)プロジェクトを作る\n\n\n個人開発レベルではHobbyで事足りるかと（検証中）。\n\n (2)APIを作成\n\nリスト形式を選択\n\n\n (3)投稿したい項目を定義\n\n\n APIで取得したデータをmapで出す\n\n (1)API keyを.envに書き込む\n\n      \n        .env.production\n        NEXT_PUBLIC_API_KEY=your key\n\n\n      \n      keyはこちら...",
          "link": "https://zenn.dev/renshimosawa/articles/266b780292aadd",
          "publishedOn": "2021-07-01T13:50:49.000Z",
          "wordCount": 382,
          "title": "Next.jsのサイトにmicroCMSをAPI接続する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vxR2NyAa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Ren%2520Shimosawa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%25E3%2581%25AE%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E3%2581%25ABmicroCMS%25E3%2582%2592API%25E6%258E%25A5%25E7%25B6%259A%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2ptcmlXRGR5UjRXLUdpUHd4eUZHbGphX1Q0cUVRS3hqcXhNU1NPPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Nuxt.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/nuxtjs/feed",
      "siteUrl": "https://zenn.dev/topics/nuxtjs",
      "articles": [
        {
          "id": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "author": "sasigume",
          "description": "ずっとNext.jsを使っていたんだが、Nuxt.jsに切り替えるにあたって何回も挫折したので、正直二度とやりたくないが 一応メモする。\n\n最終更新: 2021年7月17日\n筆者はNuxtに関しては初心者ですので、細かい説明が不正確かもしれません。また、Vue/Nuxtはすごい速度で進化しています。仕様変更に注意してください\n\n\n 何をセットアップするか\n\n\nyarn create nuxt-appで以下を済ませる\n\nTypeScript化\nPrettier+ESLint\nTailwindCSS対応\nPWA対応\n\n\nコンフィグをTS化する\n\nsrcディレクトリにまとめる\nOGPを設定する...",
          "link": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "publishedOn": "2021-07-17T13:08:22.000Z",
          "wordCount": 689,
          "title": "Nuxt+TS+CompositionAPI+Vercel+VSCodeのセットアップ手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--I8cpjTY0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasigume%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%252BTS%252BCompositionAPI%252BVercel%252BVSCode%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYmMzZWY2ZjdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "author": "Yuuya Miyamae",
          "description": "Firebase AppCheck 導入\n\n 対応サービス\n\nRealtime Database\nCloud Storage\nCloud Functions (callable functions)\n\n\n 前提\nFirebase のプロジェクト作成まで完了している\n\n 1. reCAPTCHA 登録\nhttps://www.google.com/recaptcha/admin/create\n\n以下の情報を登録\n\nラベル\nreCAPTCHA タイプ: \"reCAPTCHA v3\" を選択\nドメイン: ドメイン設定\n\n\n 2. コンソール画面からAppCheck登録\nhttps://co...",
          "link": "https://zenn.dev/yuuyamiyamae/articles/83b4c6a5157031",
          "publishedOn": "2021-07-15T19:54:35.000Z",
          "wordCount": 108,
          "title": "Firebase: AppCheck 導入",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--oTNttJXm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuuya%2520Miyamae%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%253A%2520AppCheck%2520%25E5%25B0%258E%25E5%2585%25A5%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjYyY2JiMzAyYS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "author": "博ノ助",
          "description": "ほんと適当ですみません。\n\n Install\n\n      \n        \n        $ npm install vue-chartjs@2 chart.js@2\n\n\n      \n      なんかこのバージョンじゃないとだめだった。よくわかんないけど両方2にした。\nvue-chartjsの導入を忘れないこと。\n\n      \n        \n        $ npm install @nuxtjs/moment\n\n\n      \n      時間の管理しやすさのためにMoment.jsを。入らなくてもいいかも。\n\n      \n        \n        $ np...",
          "link": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "publishedOn": "2021-07-15T13:00:42.000Z",
          "wordCount": 269,
          "title": "Chart.jsをNuxt.jsで使って時間の折線を作ったので個人的にメモした",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--k9JKkQCd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%258D%259A%25E3%2583%258E%25E5%258A%25A9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Chart.js%25E3%2582%2592Nuxt.js%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E6%258A%2598%25E7%25B7%259A%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmNjNzg4YzUzOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "author": "リーナーテックブログ",
          "description": "Leaner Technologies の黒曜(@kokuyouwind)です。\n以前 Leaner の技術スタックを記事にまとめましたが、Copilot CLIでのコンテナ化やAmplify ConsoleでのSPA配信で技術スタックが更新されたことで少々古い内容になっています。\nhttps://zenn.dev/leaner_tech/articles/20210608-leaner-techstack\nまた新規プロダクトの立ち上げが始まっており、そちらでは従前のプロダクトと異なる技術選定をした部分もあります。\nこれらの点を踏まえ、本記事では Leaner で採用している現在の技術ス...",
          "link": "https://zenn.dev/leaner_tech/articles/20210709-leaner-techstack-202107",
          "publishedOn": "2021-07-15T01:51:12.000Z",
          "wordCount": 280,
          "title": "Leaner の技術スタック紹介(2021年7月版)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--j47hoymn--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Leaner%2520%25E3%2581%25AE%25E6%258A%2580%25E8%25A1%2593%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2583%25E3%2582%25AF%25E7%25B4%25B9%25E4%25BB%258B%25282021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGZiYzhkYzg5MS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "author": "JQinglong",
          "description": "タイトル長すぎですね。途中で切れました。\n本当は\n\n Nuxt TypeScript（Composition API）、Django REST Framework で、Docker Compose上での開発基盤を作る\nこいつの続きというか。\nhttps://zenn.dev/jqinglong/scraps/168d1bb5dd4832\nこの悪戦苦闘の結果、まあまあ良い構成ができたと思っており、それを使って、さらにもう一つアプリを作ってます。スッキリいくと思うので、そのスッキリした記録を残そうと思ったのですが、そうは問屋はおろさず・・・それでも、上記よりは落ち着いてできたので、こちらに残...",
          "link": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "publishedOn": "2021-07-12T12:49:03.000Z",
          "wordCount": 2610,
          "title": "Nuxt TypeScript（Composition API）、Django REST Framework で、・・・",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4GeR-cU7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JQinglong%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nuxt%2520TypeScript%25EF%25BC%2588Composition%2520API%25EF%25BC%2589%25E3%2580%2581Django%2520REST%2520Framework%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGS0FRWHBJUllSRHdIbVgyb1dHSUwyLTd4RHZ5RkN3Zkw3OThnTUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tanoken729/articles/a0b556cd6d53ec",
          "author": "tanoken",
          "description": "Laravel側\nhttps://jwt-auth.readthedocs.io/en/docs/laravel-installation/\n\n JWTライブラリ（tymon/jwt-auth）をインストール\nLaravel 6 の場合はバージョンに:1.0.0-rc.5を指定しないとエラーになります\n\n      \n        \n        composer require tymon/jwt-auth:1.0.0-rc.5\n\n\n      \n      \n 設定を一部変更\n以下コマンドでconfig/jwt.phpというファイルを生成\n\n      \n        \n ...",
          "link": "https://zenn.dev/tanoken729/articles/a0b556cd6d53ec",
          "publishedOn": "2021-07-04T15:57:58.000Z",
          "wordCount": 101,
          "title": "【ログイン機能】jwt（JSON Web Token Authentication）でログイン機能実装手順（Laravel/Nuxt）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--27buZ1Ic--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tanoken%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2580%2590%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2591jwt%25EF%25BC%2588JSON%2520Web%2520Token%2520Authentication%25EF%25BC%2589%25E3%2581%25A7%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E6%25A9%259F%25E8%2583%25BD%25E5%25AE%259F%25E8%25A3%2585%25E6%2589%258B%25E9%25A0%2586%25EF%25BC%2588Laravel%252FNuxt%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dzSWFrN3BqZU13dW9saWduTXdqRHpoeFI5NTQyb2Fvb0w5cVJ1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/foxtail88/articles/574fab811df26d",
          "author": "こぎつね",
          "description": "はじめに\nこちらのサイトの作成備忘録です。インフラ等の全体像は別途記事にしたいと思います。\nhttps://tenkoh.github.io/fgo-scenes/\nFate/Grand Orderというスマートフォン向けゲームのコラージュ画像を生成するお遊びサイトです😇\n\n\n(C) TYPE-MOON\n\n\n 方針検討\nやりたいことは 「既存の画像に、セリフだけ好きに挿入する」 という簡単なものです。なんとなくフロントだけでもできそうですが、ある程度フォントを原作に近づけたいと考えたので、特定のフォントを気兼ねなく使えるかな？と思い、バックエンドも構築することにしました。\nまたお遊び...",
          "link": "https://zenn.dev/foxtail88/articles/574fab811df26d",
          "publishedOn": "2021-07-03T23:13:01.000Z",
          "wordCount": 234,
          "title": "【FGO】「村正ぁーーー！」するためのネタサイト作成記録",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--BE4WPnP9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2593%25E3%2581%258E%25E3%2581%25A4%25E3%2581%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590FGO%25E3%2580%2591%25E3%2580%258C%25E6%259D%2591%25E6%25AD%25A3%25E3%2581%2581%25E3%2583%25BC%25E3%2583%25BC%25E3%2583%25BC%25EF%25BC%2581%25E3%2580%258D%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E3%2583%258D%25E3%2582%25BF%25E3%2582%25B5%25E3%2582%25A4%25E3%2583%2588%25E4%25BD%259C%25E6%2588%2590%25E8%25A8%2598%25E9%258C%25B2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjZmNTZjZTExMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ytr0903/articles/eacee1dee6b055",
          "author": "ykoizumi0903",
          "description": "この記事は、昨日会社のテックブログに寄稿した記事\nhttps://tech.andpad.co.jp/entry/2021/07/01/170000\nに入りきらなかった情報の補足です。\n元の記事では、Vue + JSX + Nuxt Composition APIという組み合わせで開発を行う際の、環境設定・導入方法、メリットとデメリット、そしてJSXに限らないComposition APIのTipsまでいろいろ書いていますので、興味のある方は先にそちらの記事をご覧ください【PR】！\n\nさて、冒頭の記事ではVue + JSX（TSX）の組み合わせでの開発のメリデメを挙げる中で、\n現状のVu...",
          "link": "https://zenn.dev/ytr0903/articles/eacee1dee6b055",
          "publishedOn": "2021-07-02T11:46:58.000Z",
          "wordCount": 132,
          "title": "Vue 2 × TSX で完璧な型サポートを手に入れる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zFxN9enk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ykoizumi0903%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25202%2520%25C3%2597%2520TSX%2520%25E3%2581%25A7%25E5%25AE%258C%25E7%2592%25A7%25E3%2581%25AA%25E5%259E%258B%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%2589%258B%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/leaner_tech/articles/20210630-replace-spa-with-amplify",
          "author": "リーナーテックブログ",
          "description": "Leaner Technologies の黒曜(@kokuyouwind)です。\n最近は Nintendo Switch のはじめてゲームプログラミングでプログラミングを勉強しています。めっちゃ褒められるので最高。\nhttps://twitter.com/kokuyouwind/status/1406600715426926595\nいろんなゲームが作れそうでワクワクしますね。任天堂はいいものを作るなぁ。\n\n Elastic Beanstalk を Amplify Console で置き換えた\nLeaner の技術スタック紹介 で「配信環境が Beanstalk になっているのはちょっと冗...",
          "link": "https://zenn.dev/leaner_tech/articles/20210630-replace-spa-with-amplify",
          "publishedOn": "2021-07-01T01:22:13.000Z",
          "wordCount": 327,
          "title": "Amplify ConsoleでSPA配信を置き換えたら最高だった",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--DAiRwcTl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2583%25AA%25E3%2583%25BC%25E3%2583%258A%25E3%2583%25BC%25E3%2583%2586%25E3%2583%2583%25E3%2582%25AF%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Amplify%2520Console%25E3%2581%25A7SPA%25E9%2585%258D%25E4%25BF%25A1%25E3%2582%2592%25E7%25BD%25AE%25E3%2581%258D%25E6%258F%259B%25E3%2581%2588%25E3%2581%259F%25E3%2582%2589%25E6%259C%2580%25E9%25AB%2598%25E3%2581%25A0%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNGZiYzhkYzg5MS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/katsuking/articles/16578da99271aa",
          "author": "KatsuKiNG👑",
          "description": "note社の記事で、共通コンポーネントにSvelteを使うと聞いて、なるほど面白いと思ってやってみました。\nhttps://note.jp/n/n7f757d7050f6\n今回は、Nuxt上でSvelteコンポーネントを動かすまでをやっていきます。\n上記の記事にもある通り、通常Svelteを動かすには以下のようにtargetにnewすると動くのですが、SSRでは動きません。\n\n      \n        \n        import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tpro...",
          "link": "https://zenn.dev/katsuking/articles/16578da99271aa",
          "publishedOn": "2021-06-30T06:14:36.000Z",
          "wordCount": 152,
          "title": "NuxtでSvelteコンポーネントを動かしてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--VnyrfdWL--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:KatsuKiNG%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Nuxt%25E3%2581%25A7Svelte%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E5%258B%2595%25E3%2581%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjBhYjVmM2Q0Mi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jqinglong/articles/c8843bce4c475e",
          "author": "JQinglong",
          "description": "ちょいぶりに、create nuxt-app してみたら、ちょっとロゴが変わってました。\n\n以上です・・・",
          "link": "https://zenn.dev/jqinglong/articles/c8843bce4c475e",
          "publishedOn": "2021-06-29T13:40:01.000Z",
          "wordCount": 8,
          "title": "Nuxtのロゴは変わったの？",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--_9PtJIxq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JQinglong%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Nuxt%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B4%25E3%2581%25AF%25E5%25A4%2589%25E3%2582%258F%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGS0FRWHBJUllSRHdIbVgyb1dHSUwyLTd4RHZ5RkN3Zkw3OThnTUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uta_mory/articles/f8bad2ffa86d99",
          "author": "utamori",
          "description": "今までは、プロジェクトを作りたいディレクトリに何かファイルがあるとエラーになった\n\n      \n        \n        projects/test-pj\n> touch Makefile\n\n\n      \n      \n      \n        \n        projects/test-pj\n> npx create-nuxt-app .\n\n\ncreate-nuxt-app v3.7.0\nCould not create project in test-pj because the directory is not empty.\n\n\n      \n    ...",
          "link": "https://zenn.dev/uta_mory/articles/f8bad2ffa86d99",
          "publishedOn": "2021-06-28T10:24:38.000Z",
          "wordCount": 135,
          "title": "create-nuxt-appで既存のディレクトリを上書きできるようになった",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wzB7J9HV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:utamori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:create-nuxt-app%25E3%2581%25A7%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%258A%25E6%259B%25B8%25E3%2581%258D%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tanoken729/articles/e9185ede462fc3",
          "author": "tanoken",
          "description": "全指定\nSignup.vue\n\n      \n        \n        await this.$axios.post('http://localhost:8000/api/register',this.user)\n\n\n      \n      baseURLの指定\nauth-moduleでの設定\nnuxt.config.js\n\n      \n        \n          axios: {\n    // baseURL: 'http://localhost:3000',\n    // baseURL: 'http://localhost:8000',\n    baseURL...",
          "link": "https://zenn.dev/tanoken729/articles/e9185ede462fc3",
          "publishedOn": "2021-06-27T17:27:09.000Z",
          "wordCount": 25,
          "title": "【新規ユーザー登録機能】axiosを使ったapi呼び出しメモ",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--WabQT7Co--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tanoken%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E6%2596%25B0%25E8%25A6%258F%25E3%2583%25A6%25E3%2583%25BC%25E3%2582%25B6%25E3%2583%25BC%25E7%2599%25BB%25E9%258C%25B2%25E6%25A9%259F%25E8%2583%25BD%25E3%2580%2591axios%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%259Fapi%25E5%2591%25BC%25E3%2581%25B3%25E5%2587%25BA%25E3%2581%2597%25E3%2583%25A1%25E3%2583%25A2%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dzSWFrN3BqZU13dW9saWduTXdqRHpoeFI5NTQyb2Fvb0w5cVJ1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tanoken729/articles/fc1e0079b9bd03",
          "author": "tanoken",
          "description": "laravel\n解決\nhttps://teratail.com/questions/178343\nnuxt側も出てくるから後で調査",
          "link": "https://zenn.dev/tanoken729/articles/fc1e0079b9bd03",
          "publishedOn": "2021-06-27T17:17:51.000Z",
          "wordCount": 11,
          "title": "【新規ユーザー登録機能】ブラウザが表示しているエラーメッセージ消えない",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--7uGuaH0q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tanoken%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_boldw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dzSWFrN3BqZU13dW9saWduTXdqRHpoeFI5NTQyb2Fvb0w5cVJ1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tatsuhiko/articles/d7cedc5a1a3f5a",
          "author": "tatsuhiko",
          "description": "前提\n\nVeturを利用している\njsconfig.jsonを書いている\nNuxtかVueで開発している\n\n\n 参考にしたサイト\nずっと理由がわからず、VS Codeくそやん！とか思ってしまいましたがどうやらVS Codeは悪くないようです。\nVetur Intellisense slow and incomplete if project has jsconfig #547\n\n\n 結論\njsconfigの「include」には、veturに適用する必要のあるフォルダーのみを含める。\nプロジェクトフォルダのjsconfig.jsonを\n\n      \n        \n       ...",
          "link": "https://zenn.dev/tatsuhiko/articles/d7cedc5a1a3f5a",
          "publishedOn": "2021-06-26T09:20:12.000Z",
          "wordCount": 102,
          "title": "VS CodeでVueのIntellisense(入力補完)が遅いとき",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--XaO6O-7a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tatsuhiko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520Code%25E3%2581%25A7Vue%25E3%2581%25AEIntellisense%2528%25E5%2585%25A5%25E5%258A%259B%25E8%25A3%259C%25E5%25AE%258C%2529%25E3%2581%258C%25E9%2581%2585%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzY4MmU0MzhkMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「TypeScript」のフィード",
      "feedUrl": "https://zenn.dev/topics/typescript/feed",
      "siteUrl": "https://zenn.dev/topics/typescript",
      "articles": [
        {
          "id": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "author": "だむは",
          "description": "Notion Blogでブログを開設しました\nちょっと前になりますが、Notion Blogでsisterのブログを開設したので、開設するまでの流れを書いてみようと思います。\n▼sisterのブログはこちらです↓\nhttps://blog.sisterwith.com/\n▼ Notion Blogはこちらです↓\nhttps://notion-blog.vercel.app/\n▼ 参考記事はこちらです↓\nhttps://blog.35d.jp/2020-05-23-notion-blog-1\n\n Notion Blogとは\nNotion Blog とは、Notion（バックエンド）で作...",
          "link": "https://zenn.dev/damuha/articles/f109e1f1cfe1e5",
          "publishedOn": "2021-07-24T13:06:29.000Z",
          "wordCount": 274,
          "title": "【Notion】Notion Blogでブログ開設〜10分でできるもん〜（デプロイ〜ローカル環境構築まで）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4mMAgDe---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%25A0%25E3%2582%2580%25E3%2581%25AF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590Notion%25E3%2580%2591Notion%2520Blog%25E3%2581%25A7%25E3%2583%2596%25E3%2583%25AD%25E3%2582%25B0%25E9%2596%258B%25E8%25A8%25AD%25E3%2580%259C10%25E5%2588%2586%25E3%2581%25A7%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2582%25E3%2582%2593%25E3%2580%259C%25EF%25BC%2588%25E3%2583%2587%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25A4%25E3%2580%259C%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25AB%25E3%2583%25AB%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%25BE%25E3%2581%25A7%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzk2NmZiMTdiNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/7d1fc9f0fb6538",
          "author": "kawarimidoll",
          "description": "先日、Deno標準ライブラリのバージョン0.102.0が公開されました。\nhttps://github.com/denoland/deno_std/releases/tag/0.102.0\nこちらで追加されたcollectionsというモジュールを紹介します。\nhttps://deno.land/std@0.102.0/collections\nその名の通り、集合の扱いを支援してくれるモジュールです。\nなお、READMEに載っているサンプルコードは記述にミスがあるのでそのままでは動作しません。\nPRが出ているのでそのうち解決されると思います。\nhttps://github.com/deno...",
          "link": "https://zenn.dev/kawarimidoll/articles/7d1fc9f0fb6538",
          "publishedOn": "2021-07-24T06:54:18.000Z",
          "wordCount": 808,
          "title": "Deno標準ライブラリ0.102.0で追加されたcollectionsの紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Mv03ujOO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E6%25A8%2599%25E6%25BA%2596%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA0.102.0%25E3%2581%25A7%25E8%25BF%25BD%25E5%258A%25A0%25E3%2581%2595%25E3%2582%258C%25E3%2581%259Fcollections%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mouritania/articles/0ea0412deb4256",
          "author": "mouritania",
          "description": "こんにちは。もうりです。\nwebエンジニアとしてフロントエンド(React + Typescript)およびバックエンド(Rails)の開発をしています。\n未経験からエンジニアになって2ヶ月目の振り返りをします。\nぜひ最後まで読んでいただけると嬉しいです。\n1ヶ月目の振り返りは下のリンクから御覧ください。\nhttps://zenn.dev/mouritania/articles/9821ee3457aa10\n\n 今月のトピック\n今月は主にこんなことがありました。\n\nはじめての社外開発\nはじめて触れる技術(React, Typescript, Cypress, ActionMailer.....",
          "link": "https://zenn.dev/mouritania/articles/0ea0412deb4256",
          "publishedOn": "2021-07-24T00:32:32.000Z",
          "wordCount": 80,
          "title": "エンジニア1年生、2ヶ月目の振り返り",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qTI9p-dM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mouritania%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25A8%25E3%2583%25B3%25E3%2582%25B8%25E3%2583%258B%25E3%2582%25A21%25E5%25B9%25B4%25E7%2594%259F%25E3%2580%25812%25E3%2583%25B6%25E6%259C%2588%25E7%259B%25AE%25E3%2581%25AE%25E6%258C%25AF%25E3%2582%258A%25E8%25BF%2594%25E3%2582%258A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOThiMmMzMDE1Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "author": "dl10yr",
          "description": "こちらを参考にさせていただきながら（なぞりながら）やってみました。詳しい解説はこちらの方が良いです。\nhttps://sunday-morning.app/posts/2020-12-25-next-js-10-tailwind-2-hybrid-amp\n\n まずはNext.js × Tailwind.cssの環境構築\n以前自分が作ったコマンドを調整して（storybookを外して）環境構築を行いました。\nhttps://zenn.dev/dl10yr/articles/0e31819e983a28\n\n      \n        \n         git clone -b not-i...",
          "link": "https://zenn.dev/dl10yr/articles/582fd609078cea",
          "publishedOn": "2021-07-23T13:53:31.000Z",
          "wordCount": 299,
          "title": "Next.js × Tailwind.cssでAMP対応させてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zK9HZAU_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dl10yr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Next.js%2520%25C3%2597%2520Tailwind.css%25E3%2581%25A7AMP%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2595%25E3%2581%259B%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvZC5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sojiro/articles/3d678492f1d94b",
          "author": "So Koyama",
          "description": "Nest.js Version 8が7月7日にリリース!\nhttps://trilon.io/blog/announcing-nestjs-8-whats-new\n\n 新機能: API Versioning\nController及び各Routesをバージョン管理できるようになりました。\n\n 1.URI Versioning\nURIの中にVersion情報を含める。\n\n      \n        \n        import { VersioningType } from '@nestjs/common';\n\nconst app = await NestFactory.create...",
          "link": "https://zenn.dev/sojiro/articles/3d678492f1d94b",
          "publishedOn": "2021-07-23T06:52:48.000Z",
          "wordCount": 257,
          "title": "Nest.js Version8がリリースされたので新機能についてまとめる : API Versioning編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KjBjn6En--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:So%2520Koyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nest.js%2520Version8%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2582%258B%2520%253A%2520API%2520Versioning%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDE1YmJhYWI1YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ulcttku/articles/conversion-of-camel-case-and-snake-case-types",
          "author": "ulcttku",
          "description": "TypeScript で、(Lower)CamelCase な型を SnakeCase な型に、SnakeCase な型を(Lower)CamelCase な型に変換する型を作りました。\n具体的には、\n\n      \n        \n        type camelCase = SnakeToCamel<\"camel_case\">;\n// type camelCase = \"camelCase\"\n\ntype snakeCase = CamelToSnake<\"snakeCase\">;\n// type snakeCase = \"snake_case\";\n\n\n ...",
          "link": "https://zenn.dev/ulcttku/articles/conversion-of-camel-case-and-snake-case-types",
          "publishedOn": "2021-07-23T04:33:05.000Z",
          "wordCount": 883,
          "title": "CamelCase な型と SnakeCase な型の変換",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Z_yFO-Dv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ulcttku%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CamelCase%2520%25E3%2581%25AA%25E5%259E%258B%25E3%2581%25A8%2520SnakeCase%2520%25E3%2581%25AA%25E5%259E%258B%25E3%2581%25AE%25E5%25A4%2589%25E6%258F%259B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yamo/articles/prisma-express-rest-api",
          "author": "yamo",
          "description": "はじめに\n前から気になっていた Prisma を触ってみました。\n公式ドキュメントを読みながら、練習として Prisma + Express で REST API を作ってみました。\n自分と同じように入門してみたい人の参考になれば幸いです。\nソースコードはこちらになります。\nhttps://github.com/yamosan/prisma-rest-api\n\n 環境構築\n\n プロジェクトの作成\n\n      \n        \n        $ npm init -y\n\n\n      \n      \n パッケージのインストール\n必要なパッケージを予めインストールしていきます。\nつ...",
          "link": "https://zenn.dev/yamo/articles/prisma-express-rest-api",
          "publishedOn": "2021-07-22T16:45:04.000Z",
          "wordCount": 1654,
          "title": "prisma と express でつくる REST API",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--p0Sb5lw9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yamo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:prisma%2520%25E3%2581%25A8%2520express%2520%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%258F%25E3%2582%258B%2520REST%2520API%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTE1NjU5YzQyMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hokaccha/articles/a665b7406b9773",
          "author": "hokaccha",
          "description": "TypeScript version: v4.3.5\n元々やりたかったのは以下のようなこと。外部入力の文字列を Union Type にマッチするか検証してマッチしなければデフォルト値を返すみたいなやつ。\n\n      \n        \n        const colors = [\"red\", \"blue\", \"yellow\"] as const;\ntype Color = typeof colors[number];\nconst defaultColor = colors[0];\n\nfunction toColor(color: string): Color {\n  return...",
          "link": "https://zenn.dev/hokaccha/articles/a665b7406b9773",
          "publishedOn": "2021-07-22T13:58:02.000Z",
          "wordCount": 216,
          "title": "TypeScript で値が Union Type にマッチするかを検証したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kWi-b3Bm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hokaccha%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%2520%25E3%2581%25A7%25E5%2580%25A4%25E3%2581%258C%2520Union%2520Type%2520%25E3%2581%25AB%25E3%2583%259E%25E3%2583%2583%25E3%2583%2581%25E3%2581%2599%25E3%2582%258B%25E3%2581%258B%25E3%2582%2592%25E6%25A4%259C%25E8%25A8%25BC%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lpYWctanVyZUl3Q21TY0ZpclkwaUo0eXppaGZYekxOc1RfejZNX3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/karibash/articles/c093902e8294d1",
          "author": "Karibash",
          "description": "https://www.npmjs.com/package/@karibash/pixel-units\n\n 設計の大幅な見直し\n以前作成したライブラリをとある記事を参考に、クラスに依存しない設計へと大幅に改修を加え作り直しました。\nインスタンス化が不要になったのでパフォーマンスもたぶん上がってると思います。しらんけど。\n\n      \n        \n        // old\nconst pixel = new Pixel(16);\nconsole.log(`${pixel}`}\n// -> 16px\n\n// new\nconst pixel: Unit<'px'>...",
          "link": "https://zenn.dev/karibash/articles/c093902e8294d1",
          "publishedOn": "2021-07-22T12:06:19.000Z",
          "wordCount": 73,
          "title": "CSSの単位を型安全にしつつ相互に変換出来るライブラリを更新した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--_Q7MaULm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Karibash%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CSS%25E3%2581%25AE%25E5%258D%2598%25E4%25BD%258D%25E3%2582%2592%25E5%259E%258B%25E5%25AE%2589%25E5%2585%25A8%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A4%25E3%2581%25A4%25E7%259B%25B8%25E4%25BA%2592%25E3%2581%25AB%25E5%25A4%2589%25E6%258F%259B%25E5%2587%25BA%25E6%259D%25A5%25E3%2582%258B%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2582%2592%25E6%259B%25B4%25E6%2596%25B0%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dPMW45d0ZmU3FpV21hNW9HWlAzczc4YnRIN0VBUXE5aDdaOU5VZ3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/5756a54d94230a",
          "author": "chida",
          "description": "概要\nリポジトリパターンは、データの操作（作成、削除など）をビジネスロジックから分離します。ビジネスロジック内でAxiosをインスタンス化すると単体テストが難しくなったり、各ファイルにエンドポイントの定義を書いている場合、そのエンドポイントが変わった時に多数のファイルを更新しなければいけません。\nリポジトリパターンはそのような問題を解決し、コードの柔軟性・保守性を高めてくれます。\n\n 実装\n\nAPIはJSONPlaceholderというサービスを使い、userを取得します\nリポジトリパターンのコードをすぐに動作確認したい場合は、CodeSandboxなどのオンラインエディタを使うと良...",
          "link": "https://zenn.dev/chida/articles/5756a54d94230a",
          "publishedOn": "2021-07-22T08:53:00.000Z",
          "wordCount": 165,
          "title": "Type Script × Axios リポジトリパターン",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JbDSCruK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Type%2520Script%2520%25C3%2597%2520Axios%2520%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2583%2591%25E3%2582%25BF%25E3%2583%25BC%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fujiyama/articles/53ec18ca9367e8",
          "author": "Fujiyamayama",
          "description": "始めに\nReactのhooksを使うことは多いと思うのですが，recoilでログインユーザーの状態管理を勉強しているときにカスタムフックをちゃんと勉強しようと思ったのでまとめます.\n\n 公式解説\n公式にチャットアプリでのフレンドがオンラインかどうかを示すコンポーネントがありました．\n\n      \n        FriendStatus.tsx\n        import React, { useState, useEffect } from 'react';\n\nfunction FriendStatus(props) {\n  const [isOnline, setIsOnli...",
          "link": "https://zenn.dev/fujiyama/articles/53ec18ca9367e8",
          "publishedOn": "2021-07-22T07:40:34.000Z",
          "wordCount": 190,
          "title": "【連休】Reactのカスタムフックを勉強してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--6XxyiNox--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Fujiyamayama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590%25E9%2580%25A3%25E4%25BC%2591%25E3%2580%2591React%25E3%2581%25AE%25E3%2582%25AB%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%25A0%25E3%2583%2595%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%25E5%258B%2589%25E5%25BC%25B7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hlMHpabHhNbXBzTEQ4NlJqZTFGUnVJd1dBcTJFNUxXWkd3S0U4QVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kondo_script/articles/adef37669545a1",
          "author": "kondo_script",
          "description": "前編の続きです\n\n 要約\n\nAndroid/iOSともに殆どネイティブアプリを触ったことがない人が頑張った話\n\nKotlin/Objective-Cデビューしながらの体験記です\n誤記/誤解などありましたらDiscussionで教えてください🙏\n\n\nReact Native 対応は結構しんどい\n\n公式から RN のライブラリは出ていない  - サンプル はある\nkotlin/Objective-Cの知識が必要\nios/androidともにシミュレータだと動作に問題があるため開発には 実機が必須 となる\n\n\n\n\n 前提 amazon-chime-sdkとreact-native\n公式からre...",
          "link": "https://zenn.dev/kondo_script/articles/adef37669545a1",
          "publishedOn": "2021-07-21T15:00:39.000Z",
          "wordCount": 155,
          "title": "amazon-chime-sdk でWebとReact Nativeでビデオ通話ができるアプリを作る(後編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--hbcZezl---/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kondo_script%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:amazon-chime-sdk%2520%25E3%2581%25A7Web%25E3%2581%25A8React%2520Native%25E3%2581%25A7%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E9%2580%259A%25E8%25A9%25B1%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528%25E5%25BE%258C%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzdhYjk3MmU5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mryhryki/articles/2021-07-21-parse-cloudfront-logs",
          "author": "Moriya Hiroyuki",
          "description": "はじめに\nCloudFront のログを解析して、リクエストされたパスごとの転送容量を出したい、という場面があったので、その時にやったことのメモです。\n半分は備忘録として、半分は誰かやってみたい人もいるかも、と思ったので書き残しておこうと思った次第です。\n\n CloudFront のログ\nCloudFront で設定しておけば、S3バケットに出力されます。\n詳しくはこちらの公式ドキュメントをご覧ください。\nhttps://docs.aws.amazon.com/ja_jp/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html\n\n...",
          "link": "https://zenn.dev/mryhryki/articles/2021-07-21-parse-cloudfront-logs",
          "publishedOn": "2021-07-21T09:55:56.000Z",
          "wordCount": 473,
          "title": "CloudFront のログを JS (TS) で分析する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--i5w7bVVI--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Moriya%2520Hiroyuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:CloudFront%2520%25E3%2581%25AE%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%2592%2520JS%2520%2528TS%2529%2520%25E3%2581%25A7%25E5%2588%2586%25E6%259E%2590%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pqUDk2YWdEUGQzSllKWi1DT0NlemZQcVVvOVVHRmR0Q3p3UTF3PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/wok/articles/0017_multi-players-gameplay-with-chime",
          "author": "wok",
          "description": "この記事は、こちらの記事を改変したものになります。\nhttps://cloud.flect.co.jp/entry/2021/07/21/113845\n\nこんにちは。\nオリンピックの開催が間近になりましたが、最近はデジタルの界隈でもe-sportsがにわかに注目を集め始めていますね。これを後押しするというわけでもありませんが、今回はAmazon Chime SDK JSを用いてマルチプレイヤーゲームの実況配信システムを作ってみたいと思います。特に今回は、公式がファン創作についてポリシーを明確にしてくれているAmong Usを題材にしてみようと思います(ref)。\n具体的には下図のような...",
          "link": "https://zenn.dev/wok/articles/0017_multi-players-gameplay-with-chime",
          "publishedOn": "2021-07-21T02:41:12.000Z",
          "wordCount": 223,
          "title": "マルチプレイヤーゲーム実況システムをAmazon Chime SDK JSで作る。 - Among Us Auto Mute -",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--nit7nRdd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:wok%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E3%2583%259E%25E3%2583%25AB%25E3%2583%2581%25E3%2583%2597%25E3%2583%25AC%25E3%2582%25A4%25E3%2583%25A4%25E3%2583%25BC%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E5%25AE%259F%25E6%25B3%2581%25E3%2582%25B7%25E3%2582%25B9%25E3%2583%2586%25E3%2583%25A0%25E3%2582%2592Amazon%2520Chime%2520SDK%2520JS%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E3%2580%2582%2520-%2520Among%2520Us%2520Auto%2520Mute%2520-%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hZemxmeFk4WFJDTHJzM1VvRWI2YmI0cEVhem1kTDg5ejFXQnFZdVE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tak_iwamoto/articles/8b32b27bd577b1",
          "author": "tak_iwamoto",
          "description": "Ptera\n\nDenoのDateTimeライブラリであるPteraをリリースしたので、その紹介(宣伝)をします。\n素敵なロゴはDenoのイラストを数多く書いてらっしゃる hashrockさんにデザインしていただきました！\nこれまでNode.jsのライブラリはMoment.js、Day.js、Luxon、date-fns\nなどいくつか選択肢がありました。\nただ、Denoで書かれているThird Partyライブラリは自分が調査した限り見当たらなかったので、作ってみました。\n\n Getting Started\nメインで使用するAPIはdatetimeです。\n引数なしの場合、ローカルの現在...",
          "link": "https://zenn.dev/tak_iwamoto/articles/8b32b27bd577b1",
          "publishedOn": "2021-07-20T00:48:58.000Z",
          "wordCount": 360,
          "title": "DenoのDateTimeライブラリPteraをリリースしました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kw-t9byB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tak_iwamoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25E3%2581%25AEDateTime%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AAPtera%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYWZjMDRlNjU3OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/himenon/articles/4c6d7ed8b7df30",
          "author": "Himenon",
          "description": "配列操作を利用した検索機能を紹介します。UI化することで利便性が一気に向上する機能を紹介します。\n\n DEMO\nまずはデモです。入力欄に適当なアルファベットを入力することで、続くリストが増減します。\n\n※ DemoのサンプルデータはWikipediaのプログラミング言語を利用しています。\n\n 基本的な仕組み\n基本的な仕組みはfitlerを利用した配列操作です。\n\n      \n        \n        [\"a\", \"b\", \"c\"].filter((text) => {\n  return text === \"a\";\n});\n// #=> [\"a\"];\n\n\n      ...",
          "link": "https://zenn.dev/himenon/articles/4c6d7ed8b7df30",
          "publishedOn": "2021-07-19T12:36:13.000Z",
          "wordCount": 169,
          "title": "Reactで作る簡易検索機能",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s---kmYUMvB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Himenon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:React%25E3%2581%25A7%25E4%25BD%259C%25E3%2582%258B%25E7%25B0%25A1%25E6%2598%2593%25E6%25A4%259C%25E7%25B4%25A2%25E6%25A9%259F%25E8%2583%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDJhOTlkZTcwNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "author": "白雀",
          "description": "Next + typescript で i18n 対応し、SSR、SSG を行う example\n本項では、Next を使用して i18n 対応(SSR, SSG)を方法を解説します。\n\n 記事の要約\n\n\nnext-i18nextを使うとi18nextを使用して、SSR、SSG を比較的手軽に行う事ができる\n\nreact-i18nextは typescript 対応を行っているので、.d.tsでネームスペースごとに追加の定義を行うと便利\n\n参考\n\n\ni18n 対応時はnext-seoが便利\n\ni18n 対応していない場合も便利\ni18n 対応時はalternatesの設定をきちんとす...",
          "link": "https://zenn.dev/sirosuzume/articles/393b17b21034a7",
          "publishedOn": "2021-07-19T10:11:01.000Z",
          "wordCount": 801,
          "title": "Next + typescript で i18n対応し、SSR、SSGを行うexample",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--w9oO3BM3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%2599%25BD%25E9%259B%2580%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next%2520%252B%2520typescript%2520%25E3%2581%25A7%2520i18n%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2597%25E3%2580%2581SSR%25E3%2580%2581SSG%25E3%2582%2592%25E8%25A1%258C%25E3%2581%2586example%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODcyNGZlMmIxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eitches/articles/2021-0719-api-routes-http-request-type",
          "author": "eitches",
          "description": "前提\nNext.jsでAPI Routesを使用する際、以下のようなコードを書くと思います。\n\n      \n        \n        const handler = (req, res) => { \n  res.status(200).json({ ... })\n}\n\nexport default handler\n\n\n      \n      このreq, resに型をつける方法がわからなかったので調べました。\n\n Next.jsの公式ページを確認する\n公式ページのAPI Routesの部分にreq, resについての情報がありました。\nhttps://nextjs....",
          "link": "https://zenn.dev/eitches/articles/2021-0719-api-routes-http-request-type",
          "publishedOn": "2021-07-19T09:47:20.000Z",
          "wordCount": 180,
          "title": "[Next] API Routesのreq, resの型について",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--rkD4xzJB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:eitches%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%255BNext%255D%2520API%2520Routes%25E3%2581%25AEreq%252C%2520res%25E3%2581%25AE%25E5%259E%258B%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2584%25E3%2581%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzZkOTA5ZTVjNy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hiroga/articles/vscode-trigger-suggestion-macos",
          "author": "hiroga",
          "description": "VSCodeでTypescriptを書くときに、「一文字も入力していないんだけど、予測変換が出てほしいな...」と思うことはありませんか？\nそれ、Trigger Suggestion で可能です。macOSユーザーで「何それ？」って人は、私のようにOSのショートカットと衝突しているせいで見逃しているかもしれないです。\n\n デモ\nCtrl + Spaceでショートカットを表示しています。\n\n\n Trigger Suggestionについて\nVSCodeには Trigger Suggestionというショートカットがあります。\nいまVSCodeを開いている人は、Cmd + Shift + P...",
          "link": "https://zenn.dev/hiroga/articles/vscode-trigger-suggestion-macos",
          "publishedOn": "2021-07-18T12:22:01.000Z",
          "wordCount": 79,
          "title": "VSCodeのTrigger Suggestionの紹介と、macOSで有効化するための工夫",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KojUJ8-g--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hiroga%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:VSCode%25E3%2581%25AETrigger%2520Suggestion%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%25E3%2581%25A8%25E3%2580%2581macOS%25E3%2581%25A7%25E6%259C%2589%25E5%258A%25B9%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%25E5%25B7%25A5%25E5%25A4%25AB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pfZHF2VHk5OFdpTG1EZ1Q1Ry1jLVNmWjRwaEdCcGdncGVKSjhqUzhzPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sprout2000/books/9325fe6c9c1ba9",
          "author": "sprout2000",
          "description": "TypeScript を使ってオリジナルの NPM パッケージを作ろう！",
          "link": "https://zenn.dev/sprout2000/books/9325fe6c9c1ba9",
          "publishedOn": "2021-07-18T08:17:52.000Z",
          "wordCount": 22,
          "title": "NPM パッケージ作成講座",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--A6tGhsjn--/g_center%2Ch_280%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYm9va19jb3Zlci8zZWQwMWM3Mjc1LmpwZw==%2Cw_200/v1604564438/og_book_base_ndpqis.jpg",
            "length": "0",
            "type": "image/jpeg"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/cec625e3b6aa7b",
          "author": "chida",
          "description": "はじめに\nMockとStubの違いをソースコードレベルで理解出来ていないと思い、記事を書いて整理してみました。色々検索して調べましたが、もし間違えている箇所がありましたら、ご指摘いただけると有り難いです。\n\n Test Doubleとは\nTest Doubleは、テストの対象が他のモジュール（クラスや関数など）に依存している場合、その代役として使われるモジュールのことです。\nTestsDoublesの作成者であるGerardMeszarosによると、Test Doubleは5つのカテゴリに分類できます。その中でも今回は、JestでMockとStubについて書きます。\n\nhttp://...",
          "link": "https://zenn.dev/chida/articles/cec625e3b6aa7b",
          "publishedOn": "2021-07-18T07:24:04.000Z",
          "wordCount": 248,
          "title": "【Test Double】JestでMockとStubを確認する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--SEVL0QjM--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Test%2520Double%25E3%2580%2591Jest%25E3%2581%25A7Mock%25E3%2581%25A8Stub%25E3%2582%2592%25E7%25A2%25BA%25E8%25AA%258D%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ezryow/articles/08d8a7bf16ac1f",
          "author": "EZryow",
          "description": "いつも忘れてしまうので，書きます．\nHogeButton.svelteがあります．\n\n      \n        \n        <button on:click>ClickMe</button>\n\n\n      \n      on:clickは通常on:click={f}などの形式で，呼び出し関数を波括弧の中に書きますが，上記例では何も書いていません．\nそして，propsとして呼び出したい関数は次のような形式で渡します．\n\n      \n        \n        <script lang=\"ts\">\n    import HogeButt...",
          "link": "https://zenn.dev/ezryow/articles/08d8a7bf16ac1f",
          "publishedOn": "2021-07-18T06:18:48.000Z",
          "wordCount": 30,
          "title": "【Svelte】on:clickで呼ばれる関数をpropsとして渡す方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Dglz5Ye3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:EZryow%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Svelte%25E3%2580%2591on%253Aclick%25E3%2581%25A7%25E5%2591%25BC%25E3%2581%25B0%25E3%2582%258C%25E3%2582%258B%25E9%2596%25A2%25E6%2595%25B0%25E3%2582%2592props%25E3%2581%25A8%25E3%2581%2597%25E3%2581%25A6%25E6%25B8%25A1%25E3%2581%2599%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzVkYzllOWQ1NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/20920804228834",
          "author": "yukihirop",
          "description": "はじめに\nこの記事はvue-i18nの翻訳ファイルをコンポーネント毎に管理したいという思いで書いた前回の記事の改良版です。\nhttps://zenn.dev/yukihirop/articles/b36c43014355fd\n前回のやり方が「ほぼタラバガニ」なら今回のやり方は「タラバガニ」です。🦀\n前回のやり方には以下の問題がありました。\n\n      \n        \n        - $etという$tを拡張したグローバルなプロパティーをVueプラグインで用意しなくちゃいけなかった\n- 生成物にファイル構造が分かってしまう情報が出てしまう\n - 翻訳のルートキーをSFCへの相対...",
          "link": "https://zenn.dev/yukihirop/articles/20920804228834",
          "publishedOn": "2021-07-18T05:34:39.000Z",
          "wordCount": 397,
          "title": "vue-i18nの翻訳をyamlファイルかつコンポーネント(SFC)毎にする普通ではない方法[改良版]",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4JjmdK_m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592yaml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2581%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%255B%25E6%2594%25B9%25E8%2589%25AF%25E7%2589%2588%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "author": "15",
          "description": "まえがき\nこのあたりを参考に環境構築をしたが、そのままでは動かない or 好みに変えたい部分があったので自分の手順を作ってみた。\n詳しい手順の理解が必要であればリンク先を参照してほしい。\nhttps://zenn.dev/66ed3gs/articles/99aa613a86f21f\nhttps://zenn.dev/januswel/articles/402774d76424e71ac906\n\n create-next-app\nts版で実行する。\n\n      \n        \n        npx create-next-app --ts sample-app\ncd samp...",
          "link": "https://zenn.dev/15/articles/aa8c322c85d27f",
          "publishedOn": "2021-07-18T04:27:20.000Z",
          "wordCount": 104,
          "title": "Next.js 開発環境構築メモ 2021年7月版 - Yarn, TypeScript, ESLint, Prettier, VSCode",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JOauVqs9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:15%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Next.js%2520%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2583%25A1%25E3%2583%25A2%25202021%25E5%25B9%25B47%25E6%259C%2588%25E7%2589%2588%2520-%2520Yarn%252C%2520TypeScript%252C%2520ESLint%252C%2520Prettier%252C%2520VSCode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lCd2p5Q0htOUYzcmF6SW9SNU1jcXVidDc1cFdBUzdlQlRJYnpiYWc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "author": "minguu",
          "description": "はじめに\nこの記事では, Firebase Authentication を使って TypeScript を使用した Next アプリに Google ログインを実装する方法を記述します.\nJavaScript を使用した Next アプリに Google ログインを実装する方法はこちらに記述しています.\nこの記事が他の人の参考になれば幸いです.\nまた, この記事の内容に間違った記載がありましたら, 指摘してもらえるとありがたいです.\n\n 環境\n\n\n\n名前\nバージョン\n\n\n\n\nmacOS Big Sur\n11.4\n\n\nNode.js\n16.4.1\n\n\nTypeScript\n4.3.5...",
          "link": "https://zenn.dev/minguu42/articles/20210717-nextjs-typescript-auth",
          "publishedOn": "2021-07-18T00:16:08.000Z",
          "wordCount": 542,
          "title": "Next.js（TypeScript）で Firebase を利用し, Google ログインを",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZjMUES8F--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:minguu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Next.js%25EF%25BC%2588TypeScript%25EF%25BC%2589%25E3%2581%25A7%2520Firebase%2520%25E3%2582%2592%25E5%2588%25A9%25E7%2594%25A8%25E3%2581%2597%252C%2520Google%2520%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lMaU1RSm1OSlUyZXBOWldpcWpTOTV6eXBVeFQxSDRjU2FVVUNvbVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "author": "sasigume",
          "description": "ずっとNext.jsを使っていたんだが、Nuxt.jsに切り替えるにあたって何回も挫折したので、正直二度とやりたくないが 一応メモする。\n\n最終更新: 2021年7月17日\n筆者はNuxtに関しては初心者ですので、細かい説明が不正確かもしれません。また、Vue/Nuxtはすごい速度で進化しています。仕様変更に注意してください\n\n\n 何をセットアップするか\n\n\nyarn create nuxt-appで以下を済ませる\n\nTypeScript化\nPrettier+ESLint\nTailwindCSS対応\nPWA対応\n\n\nコンフィグをTS化する\n\nsrcディレクトリにまとめる\nOGPを設定する...",
          "link": "https://zenn.dev/sasigume/articles/nuxt-ts-composition-vercel",
          "publishedOn": "2021-07-17T13:08:22.000Z",
          "wordCount": 689,
          "title": "Nuxt+TS+CompositionAPI+Vercel+VSCodeのセットアップ手順",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--I8cpjTY0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sasigume%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Nuxt%252BTS%252BCompositionAPI%252BVercel%252BVSCode%25E3%2581%25AE%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E6%2589%258B%25E9%25A0%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYmMzZWY2ZjdkNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/b36c43014355fd",
          "author": "yukihirop",
          "description": "はじめに\nvue-i18nを使っている人なら一度や二度は翻訳のキーのつけ方に悩んだ人は多いかと思います。\nしかも複数人で開発していると人によってキーのつけ方の癖が違ったり、ルール化していてもそのルールを常に意識しながら開発するのは辛いです。そういう問題に対しての一つの解決策を提示してみようかと思います。\n「コンポーネント専用の翻訳ファイルでルートキーがユニークならそれに続くキーは適当でも大して問題ないのではないか？ キーのつけ方が適当になってしまったとしてもそれはそのコンポーネントの翻訳で閉じているし、影響範囲は明確なので大して問題ないのではなかろうか？」\nです。\n\n 環境\n\nvue...",
          "link": "https://zenn.dev/yukihirop/articles/b36c43014355fd",
          "publishedOn": "2021-07-17T11:27:48.000Z",
          "wordCount": 476,
          "title": "vue-i18nの翻訳をコンポーネント(SFC)毎にする普通ではない方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ctKAMofK--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/54d9167e7b5624",
          "author": "hashito",
          "description": "現象\n\n      \n        \n        type History=Array<string>;\nhistory:History=new History();\n\n\n      \n      下記のようなエラーが出る。\n\nTS2693: 'History' only refers to a type, but is being used as a value here.\n\n\n 解決\n下記のように修正すれば解決される。\n\n      \n        \n        type History=Array<string>;\nhistory:Histo...",
          "link": "https://zenn.dev/hashito/articles/54d9167e7b5624",
          "publishedOn": "2021-07-17T00:31:52.000Z",
          "wordCount": 39,
          "title": "TypeScriptでベース配列型で新しい型を作って初期化するとエラーになる。",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--8mGXOq_Q--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7%25E3%2583%2599%25E3%2583%25BC%25E3%2582%25B9%25E9%2585%258D%25E5%2588%2597%25E5%259E%258B%25E3%2581%25A7%25E6%2596%25B0%25E3%2581%2597%25E3%2581%2584%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E5%2588%259D%25E6%259C%259F%25E5%258C%2596%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E3%2581%25AB%25E3%2581%25AA%25E3%2582%258B%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jpn_asane/articles/d7f44682b74fdc",
          "author": "Asane",
          "description": "環境構築をしっかりするメリット\n正直な話、React+TypeScriptは公式にあるコマンドを一個打ち込めばプロジェクト自体は出来ます。\n環境構築がめんどくさくてそれだけで済ませていた人も多いと思いますが、今回紹介する環境構築をする事で、様々なメリットがあります。\n\nチーム制作などでコーディングルールを厳格化できる\n->チーム一人一人が我流のコーディングをすると誰も読み取る事が出来ないモノが完成します。\n初心者のうちからコーディングの変な癖をなくす\n->初心者のうちから変な癖がついてしまうと、修正するのが大変です。\nコーディングの穴をなくす\n->JavaScrip...",
          "link": "https://zenn.dev/jpn_asane/articles/d7f44682b74fdc",
          "publishedOn": "2021-07-15T18:19:10.000Z",
          "wordCount": 536,
          "title": "React+TypeScript+ESLint+Prettierをまとめて環境構築",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--K9drwuRx--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Asane%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:React%252BTypeScript%252BESLint%252BPrettier%25E3%2582%2592%25E3%2581%25BE%25E3%2581%25A8%25E3%2582%2581%25E3%2581%25A6%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kwbnYxXzJnTFZYYWQ4TzlvRWR1cW5ZVnlTem1iMVktNm5VRm9Lanc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "author": "Eringi_V3",
          "description": "フロントエンドアプリケーションの開発を行う上で避けては通れないデータフェッチの実装。\nREST APIを使うか、GraphQLを使うか、クライアントでキャッシュするか、APIレスポンスにどのようにして型を付けるか、状態管理はどうするのかなど、開発者の悩みが尽きないけれども、それに関しての設計を考えたり議論を行うのはフロントエンド開発の楽しいポイントだと僕は思っています。\nこの記事では、バックエンドにHasura、フロントエンドにNext.jsを使用する場合に僕が最強だと感じたツールの組み合わせ・使い方を紹介します。\n\n モチベーション\n\nAPIからのレスポンスにはTypeScriptの型...",
          "link": "https://zenn.dev/eringiv3/articles/56f2b9f90a0632",
          "publishedOn": "2021-07-15T15:16:24.000Z",
          "wordCount": 768,
          "title": "ぼくのかんがえたさいきょうのデータフェッチ 2021Summer🏄‍♂️【Next.js / Hasura】",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--82ifwyxV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Eringi_V3%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2581%25BC%25E3%2581%258F%25E3%2581%25AE%25E3%2581%258B%25E3%2582%2593%25E3%2581%258C%25E3%2581%2588%25E3%2581%259F%25E3%2581%2595%25E3%2581%2584%25E3%2581%258D%25E3%2582%2587%25E3%2581%2586%25E3%2581%25AE%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%25202021Summer%2520%25E3%2580%2590Next.js%2520%252F%2520Hasura%25E3%2580%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMDU2Y2U2YjAzNC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f0c4c0441b4cd2",
          "author": "hashito",
          "description": "問題\n下記のように|undefinedなどがある場合に、HTML上で参照しようとすると、下記のようなエラーが出る。\n\n      \n        \n        import {\n  Component\n} from '@angular/core';\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: { name: string; a...",
          "link": "https://zenn.dev/hashito/articles/f0c4c0441b4cd2",
          "publishedOn": "2021-07-15T13:42:14.000Z",
          "wordCount": 72,
          "title": "Angularでundefinedな可能性のある要素を表示する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kMevm_1R--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Angular%25E3%2581%25A7undefined%25E3%2581%25AA%25E5%258F%25AF%25E8%2583%25BD%25E6%2580%25A7%25E3%2581%25AE%25E3%2581%2582%25E3%2582%258B%25E8%25A6%2581%25E7%25B4%25A0%25E3%2582%2592%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f9b9c2401e0318",
          "author": "hashito",
          "description": "結論\n下記のようにする。\n\n      \n        \n        import {\n  Component,\n  ViewChild,\n  AfterViewInit,\n  OnInit,\n  ElementRef\n} from '@angular/core';\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterVi...",
          "link": "https://zenn.dev/hashito/articles/f9b9c2401e0318",
          "publishedOn": "2021-07-15T13:19:13.000Z",
          "wordCount": 89,
          "title": "Angularで生のDOMを操作する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ClAKpmku--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Angular%25E3%2581%25A7%25E7%2594%259F%25E3%2581%25AEDOM%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ibaraki/articles/7a6368bdfb890f",
          "author": "いばらき",
          "description": "やりたかったこと\nNode.jsでAPIを書いたら、OpenAPIドキュメントを自動生成して欲しい\n\n 背景\nAPIを書く場合に使うFrameworkにおいてPythonではDjangoやFlaskが有名ですが、最近注目されているFrameworkにFastAPIというものがあります。FastAPIは、動作がNode.js並に早いとか習得が容易といった特徴もありますが、コードを書くと自動でOpenAPIドキュメントを作ってくれてwebインターフェースも用意してくれる機能がとても便利です。\n詳しくは知りたい方は、ドキュメントを読んでください。\nhttps://fastapi.tiang...",
          "link": "https://zenn.dev/ibaraki/articles/7a6368bdfb890f",
          "publishedOn": "2021-07-15T12:17:44.000Z",
          "wordCount": 228,
          "title": "Node.js環境で、PythonのFastAPIみたいなOpenAPIドキュメント自動生成を求めて、Fastifyに手を出してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s---YQTuKwp--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%2584%25E3%2581%25B0%25E3%2582%2589%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:Node.js%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25A7%25E3%2580%2581Python%25E3%2581%25AEFastAPI%25E3%2581%25BF%25E3%2581%259F%25E3%2581%2584%25E3%2581%25AAOpenAPI%25E3%2583%2589%25E3%2582%25AD%25E3%2583%25A5%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2588%25E8%2587%25AA%25E5%258B%2595%25E7%2594%259F%25E6%2588%2590%25E3%2582%2592%25E6%25B1%2582%25E3%2582%2581%25E3%2581%25A6%25E3%2580%2581Fastify%25E3%2581%25AB%25E6%2589%258B%25E3%2582%2592%25E5%2587%25BA%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXRjZXeUJCMTBrRDZNaV9Fa0tLQi13WFJSUC04eFlJbDV5eWljPXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/terrierscript/articles/2021-07-13-i18n",
          "author": "terrierscript",
          "description": "Reactアプリケーションをi18nをするにあたって、t(\"Hello\", \"こんにちは\")のように日本語をfallback値として設定するようにしたらわりと良かったのでまとめる\n\n 前提\nあくまで今回の話は下記のような前提としている。\n\n小規模で、複雑な多言語化処理を要する部分が少ない\n日本語から他言語への変換である\n多言語化の種類は少なく、多言語化後も日本語が中心。\n組織のコミュニケーションパスが少なく、実装者がUIを変更する事が出来る環境である\n\n\n 準備\n本題に入る前の前提として、ライブラリと外部サービス選びについて。\n\n ライブラリ選び\ni18n自体はマッピングさえできれば十分...",
          "link": "https://zenn.dev/terrierscript/articles/2021-07-13-i18n",
          "publishedOn": "2021-07-14T10:10:29.000Z",
          "wordCount": 363,
          "title": "小規模環境のi18nで、t(\"Hello\",\"こんにちは\")のように日本語をfallbackに入れる運用したら良かった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jFMxq2rh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:terrierscript%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E5%25B0%258F%25E8%25A6%258F%25E6%25A8%25A1%25E7%2592%25B0%25E5%25A2%2583%25E3%2581%25AEi18n%25E3%2581%25A7%25E3%2580%2581t%2528%2522Hello%2522%252C%2522%25E3%2581%2593%25E3%2582%2593%25E3%2581%25AB%25E3%2581%25A1%25E3%2581%25AF%2522%2529%25E3%2581%25AE%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E6%2597%25A5%25E6%259C%25AC%25E8%25AA%259E%25E3%2582%2592fallback%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%25E9%2581%258B%25E7%2594%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589%25E8%2589%25AF%25E3%2581%258B%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTQwYmE4ZjQ3ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/magurotuna/articles/deno-release-note-1-12-0",
          "author": "magurotuna",
          "description": "Copyright (c) 2018-2021 the Deno authors. MIT License.\n日本時間の昨日（2021 年 7 月 13 日）に Deno の v1.12.0 がリリースされました。\nhttps://deno.com/blog/v1.12\n詳細なリリース内容は上記のリリースノートにまとまっていますが、ざっと紹介していきたいと思います。\n\n\ngenerateKey, sign, verify の3つの Web Crypto API がサポート\nネイティブ HTTP サーバーでの WebSocket サポート\nREPL における TypeScript のサポ...",
          "link": "https://zenn.dev/magurotuna/articles/deno-release-note-1-12-0",
          "publishedOn": "2021-07-14T04:30:36.000Z",
          "wordCount": 1065,
          "title": "Deno 1.12.0 がリリースされたので新機能や変更点の紹介",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--1058S3yy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:magurotuna%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Deno%25201.12.0%2520%25E3%2581%258C%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2595%25E3%2582%258C%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2596%25B0%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2584%25E5%25A4%2589%25E6%259B%25B4%25E7%2582%25B9%25E3%2581%25AE%25E7%25B4%25B9%25E4%25BB%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dNUGF0cWN1MUh1d1dEcG5uVzRETFVxZlI5aDlOM1NFc3FmaWdYZkE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/e3e598ff8c6dd3",
          "author": "mattun",
          "description": "こちらの記事の続きです。\nhttps://zenn.dev/makumattun/articles/474fbe08a5111c\n※この記事ではEventStoreとmain関数の流れまでを紹介します。\nこの部分\n\n\n イベントソーシングでテーブル格納時にやりたいこと\nやりたいこと\n・一つのテーブルにすべてのイベントを格納したい\n・複数のドメインイベントをAcidに登録したい\n・整合性を持たせるために誤って２回登録のイベントが発火されたときは失敗させたい\nここらへんを満たすようにテーブルの設計をする必要があります。\n\n DynamoDBのインデックス設計\nごちゃごちゃ記載するよりも、Ev...",
          "link": "https://zenn.dev/makumattun/articles/e3e598ff8c6dd3",
          "publishedOn": "2021-07-14T01:20:29.000Z",
          "wordCount": 334,
          "title": "Serverless FrameworkとTypeScriptでCQRSを実現する 実装編1",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--nnaTDmGm--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Serverless%2520Framework%25E3%2581%25A8TypeScript%25E3%2581%25A7CQRS%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2520%25E5%25AE%259F%25E8%25A3%2585%25E7%25B7%25A81%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sykmhmh/articles/086eef9300ac2d",
          "author": "sykmhmh",
          "description": "概要\nViteで、React17以降のJSXトランスフォームに対応する方法です。\nhttps://ja.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\n\n 動機\nReact16以前では、JSXを利用するには明示的にReactをインポートする必要がありましたが、React 17以降は新しいトランスフォームの方法が提供され(現在は16以前のバージョンでも提供されています)、babelやtsconfigの設定を変更することで明示的にReactをインポートせずともJSXが利用できるようになりました。\nしかし...",
          "link": "https://zenn.dev/sykmhmh/articles/086eef9300ac2d",
          "publishedOn": "2021-07-13T14:13:21.000Z",
          "wordCount": 55,
          "title": "ViteでReact17以降のJSXトランスフォームに対応する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--MHxN-etN--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sykmhmh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vite%25E3%2581%25A7React17%25E4%25BB%25A5%25E9%2599%258D%25E3%2581%25AEJSX%25E3%2583%2588%25E3%2583%25A9%25E3%2583%25B3%25E3%2582%25B9%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E3%2581%25AB%25E5%25AF%25BE%25E5%25BF%259C%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTAxZTBjZDM5OS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "author": "syuri",
          "description": "ドラムロールとは・・・\n数字がじゃかじゃか回るやつです。\n今回は数字が画面内に入ってきたら、数字のドラムロールが開始されるというアニメーションをプラグインを使わずに実装したいと思います。(Nuxt＋Typescriptで開発しています。)\n\n\n 目次\n最初に考えた方法\nもうちょっと賢い方法\n最終型を見たい方はもうちょっと賢い方法から見てください。\n\n 最初に考えた方法\nまずはコードから。\n\n      \n        \n        <div data-destination=\"2000\"　class=\"number\">0</div>\n\n\n      \n   ...",
          "link": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "publishedOn": "2021-07-13T13:58:19.000Z",
          "wordCount": 626,
          "title": "Vueでドラムロールを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZEgqWODG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syuri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kupuma_ru21/articles/bb3d32e6e27102",
          "author": "くぷまーる",
          "description": "apollo graphqlを使ったUIテストのセットアップをしてみました。\n備忘録で残します。\nテストはreact-tesing-liblaryで行います。\n以下、テスト対象のアプリです。\nhttps://github.com/kupuma-ru21/apollo_relay_style_cursor_pagination\n(以前、書いた記事にテスト対象のアプリの作成方法を記載してます。読まなくてもできるように進めたいと思います。)\nhttps://zenn.dev/kupuma_ru21/articles/f56148ffcac7b0\n\n\n 前提\nまず、普通にreact-tesing...",
          "link": "https://zenn.dev/kupuma_ru21/articles/bb3d32e6e27102",
          "publishedOn": "2021-07-13T13:14:30.000Z",
          "wordCount": 352,
          "title": "apollo graphqlアプリのUIテスト",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Sn0THC1Y--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25B7%25E3%2581%25BE%25E3%2583%25BC%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:apollo%2520graphql%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2581%25AEUI%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjFkZGYxMjM1My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/huequica/articles/fix_module_decralation_in_vscode",
          "author": "Haru_Yakumo",
          "description": "悲しい時～～～～～悲し以下略\nJestには ModuleNameMapper なる、テスト対象のオブジェクトを import してくる際にパス名を特定の prefix で代用する機能があります。\n例えば、以下のようなディレクトリ構成のプロジェクトであると仮定します。\n\n      \n        \n        $ tree  -L 1\n.\n├── LICENSE\n├── README.md\n├── dist\n├── jest.config.js\n├── node_modules\n├── package.json\n├── src\n├── tests\n├── tsconfig.json...",
          "link": "https://zenn.dev/huequica/articles/fix_module_decralation_in_vscode",
          "publishedOn": "2021-07-12T18:13:43.000Z",
          "wordCount": 229,
          "title": "JestでModuleNameMapperを使うとVSCodeくんがモジュール参照してくれない時～～",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--3M_W_Pp6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Haru_Yakumo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Jest%25E3%2581%25A7ModuleNameMapper%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%25E3%2581%25A8VSCode%25E3%2581%258F%25E3%2582%2593%25E3%2581%258C%25E3%2583%25A2%25E3%2582%25B8%25E3%2583%25A5%25E3%2583%25BC%25E3%2583%25AB%25E5%258F%2582%25E7%2585%25A7%25E3%2581%2597%25E3%2581%25A6%25E3%2581%258F%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E6%2599%2582%25EF%25BD%259E%25EF%25BD%259E%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDRUNJM2xDR3ZjNWNrYWN6QVFIcm5QeTZTS2VsX3lZOFNKM05jMVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "author": "JQinglong",
          "description": "タイトル長すぎですね。途中で切れました。\n本当は\n\n Nuxt TypeScript（Composition API）、Django REST Framework で、Docker Compose上での開発基盤を作る\nこいつの続きというか。\nhttps://zenn.dev/jqinglong/scraps/168d1bb5dd4832\nこの悪戦苦闘の結果、まあまあ良い構成ができたと思っており、それを使って、さらにもう一つアプリを作ってます。スッキリいくと思うので、そのスッキリした記録を残そうと思ったのですが、そうは問屋はおろさず・・・それでも、上記よりは落ち着いてできたので、こちらに残...",
          "link": "https://zenn.dev/jqinglong/articles/e901ca698f2158",
          "publishedOn": "2021-07-12T12:49:03.000Z",
          "wordCount": 2610,
          "title": "Nuxt TypeScript（Composition API）、Django REST Framework で、・・・",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4GeR-cU7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:JQinglong%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Nuxt%2520TypeScript%25EF%25BC%2588Composition%2520API%25EF%25BC%2589%25E3%2580%2581Django%2520REST%2520Framework%2520%25E3%2581%25A7%25E3%2580%2581%25E3%2583%25BB%25E3%2583%25BB%25E3%2583%25BB%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2dGS0FRWHBJUllSRHdIbVgyb1dHSUwyLTd4RHZ5RkN3Zkw3OThnTUE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hashito/articles/f24b066962f58d",
          "author": "hashito",
          "description": "背景\nAngularでServiceを作成して下記の一文を入れておくとクラスがシングルストン構成となるはずです。\n\n      \n        \n        @Injectable({\n  providedIn: 'root'\n})\n\n\n      \n      シングルストン構成とは、アプリケーション上単一のインスタンスしか持たいない構成で、通常のクラスは複数の実態を持つが、シングルストンなクラスはどこからアクセスしても単一な実態へアクセスすることになります。\n詳しくは下記。\nhttps://ja.wikipedia.org/wiki/Singleton_パターン\nこれで構成...",
          "link": "https://zenn.dev/hashito/articles/f24b066962f58d",
          "publishedOn": "2021-07-11T23:32:45.000Z",
          "wordCount": 84,
          "title": "AngularでRoutingしてもServiceが再作成されるときの原因",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Z4Egesx3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hashito%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Angular%25E3%2581%25A7Routing%25E3%2581%2597%25E3%2581%25A6%25E3%2582%2582Service%25E3%2581%258C%25E5%2586%258D%25E4%25BD%259C%25E6%2588%2590%25E3%2581%2595%25E3%2582%258C%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%258E%259F%25E5%259B%25A0%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMWYyZGE5MTQwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210",
          "author": "ryo_kawamata",
          "description": "GAS を書くたびに開発環境構築を調べている気がするので、GAS 開発用の Template リポジトリを作ってみました。\n\n Templateリポジトリ\nhttps://github.com/kawamataryo/google-app-script-starter-template\n機能はこちらです。\n\n\nclaspによる App Script へのデプロイ\nTypeScript 対応\nWebpack5 でのビルド※\n\nESLint / prettier でのコード整形\n\nhusky / lint-stage でのプレコミットフック\n\n\nClasp を使えば TypeScrip での...",
          "link": "https://zenn.dev/ryo_kawamata/articles/2c6cc4e7c27210",
          "publishedOn": "2021-07-11T23:15:22.000Z",
          "wordCount": 167,
          "title": "Google App Script 開発 のための Templateリポジトリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vtNuzhZt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Google%2520App%2520Script%2520%25E9%2596%258B%25E7%2599%25BA%2520%25E3%2581%25AE%25E3%2581%259F%25E3%2582%2581%25E3%2581%25AE%2520Template%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/schrosis/articles/ec2e43e2bd72c2",
          "author": "シュレシス",
          "description": "作ったもの\n以下のテストが通る Find 型\n\n型テストのための Equal ,  Expect は @type-challenges/utils の型\n\n\n      \n        \n        import { Equal, Expect } from '@type-challenges/utils'\n\ntype Lang = 'TypeScript'|'PHP'|'Swift'|'Python'\n\ntype cases = [\n  // 配列側が確定していて、探す要素が1通りしかないとき\n  // 探していた要素か undefined を明確に返す\n  Expect&l...",
          "link": "https://zenn.dev/schrosis/articles/ec2e43e2bd72c2",
          "publishedOn": "2021-07-11T20:08:43.000Z",
          "wordCount": 471,
          "title": "TypeScriptでFind型を作ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Wv-8UTqb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B7%25E3%2583%25A5%25E3%2583%25AC%25E3%2582%25B7%25E3%2582%25B9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2581%25A7Find%25E5%259E%258B%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZmJiNzM1MzgxMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kanasugi/articles/368d0b39c94daf",
          "author": "Kanasugi",
          "description": "TL;DR\nnew PrismaClient() を複数回書いてる可能性があるので、\nroot直下でlibのようなファイルを作り、そこで、PrsimaClientのインスタンスを１度だけ生成し、そこからimportする形で、PrismaClientのインスタンスを使用すれば解決。\n\n 概要\nPrismaを使用している時、\nwarn(prisma-client) Already 10 Prisma Clients are actively runningというメッセージがコンソールに表示されることがある。\n本番Build時にこの箇所が原因で、DBのコネクション数の制限のエラーになること...",
          "link": "https://zenn.dev/kanasugi/articles/368d0b39c94daf",
          "publishedOn": "2021-07-11T15:45:42.000Z",
          "wordCount": 124,
          "title": "warn(prisma-client) Already 10 Prisma Clients are actively runningの対処",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q6sKV5JH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kanasugi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:warn%2528prisma-client%2529%2520Already%252010%2520Prisma%2520Clients%2520are%2520actively%2520running%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDMwZjhjZDhmOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/makumattun/articles/474fbe08a5111c",
          "author": "mattun",
          "description": "CQRS イベントソーシングやってますか？\nなかなかCQRSとイベントソーシングを個人でちゃんとやろうと思うと難しいですよね。\nそして本気でパフォーマンス考えるならスナップショットなども考慮してAkka一択な感じがありますよね。\nでもそれなりのパフォーマンスを実現するのであれば、\nそれを実現できるデータベースはいくつかあります。そうDynamoDBもね！\n\n 参考\nhttps://zenn.dev/j5ik2o/articles/368e0ab78f105f2a0fae\nhttps://techblog.zozo.com/entry/zozomat-cqrs\nzozo technol...",
          "link": "https://zenn.dev/makumattun/articles/474fbe08a5111c",
          "publishedOn": "2021-07-11T15:02:47.000Z",
          "wordCount": 65,
          "title": "Serverless FrameworkとTypeScriptでCQRSを実現する 概要編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--O_qWN-JE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mattun%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Serverless%2520Framework%25E3%2581%25A8TypeScript%25E3%2581%25A7CQRS%25E3%2582%2592%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%2520%25E6%25A6%2582%25E8%25A6%2581%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTkzOWQ3MzE0ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "author": "din",
          "description": "はじめに\nなろう形式のタイトルってわかりやすいですね。\n初投稿です。\nReactの学習のため、Todoアプリを作成しました。\nどうせなら最新のライブラリを使用しようとRecoil, React Hook Form v7を使ってみましたので、備忘録がてらその内容を紹介します。\n\n 環境\nWindows10 64bit(20H2)\nWSL(Ubuntu 18.) v1\nnode v14.17.1\nyarn 1.22.5\nVSCode\n\n 完成図\nこんな感じの簡単なtodoアプリを作ってみました。\n見た目は完全に度外視しています。\n\n\n install\nまずWSLで下記コマンドを実行して、...",
          "link": "https://zenn.dev/din/articles/15d27a4bff3b5c",
          "publishedOn": "2021-07-11T15:01:45.000Z",
          "wordCount": 462,
          "title": "Next.jsでtodoアプリ を作ろうとしたらRecoil + React Hook Form v7で楽ができた件",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--5ysT6Zxi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:din%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Next.js%25E3%2581%25A7todo%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%2520%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2597%25E3%2581%259F%25E3%2582%2589Recoil%2520%252B%2520React%2520Hook%2520Form%2520v7%25E3%2581%25A7%25E6%25A5%25BD%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2581%259F%25E4%25BB%25B6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzcxZDU3OTNkZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/6d1882c2e00d0a",
          "author": "chida",
          "description": "テスト駆動開発の本を買って少し読みましたが、実際に自分でコードを書いて表現してみたく、TypeScriptとJestでテスト駆動開発を実践します。\nhttps://www.amazon.co.jp/-/en/Kent-Beck/dp/4274217884/ref=sr_1_1?crid=29A7GYVAMFT8E&dchild=1&keywords=テスト駆動開発&language=ja_JP&qid=1625801931&sprefix=テスト駆動%2Caps%2C282&sr=8-1\nこの記事では簡単なコードをテスト駆動開発の手順に沿っ...",
          "link": "https://zenn.dev/chida/articles/6d1882c2e00d0a",
          "publishedOn": "2021-07-11T09:59:28.000Z",
          "wordCount": 338,
          "title": "テスト駆動開発（TDD）でコードを書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--BP88TuIG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2586%25E3%2582%25B9%25E3%2583%2588%25E9%25A7%2586%25E5%258B%2595%25E9%2596%258B%25E7%2599%25BA%25EF%25BC%2588TDD%25EF%25BC%2589%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%2592%25E6%259B%25B8%25E3%2581%258F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/meijin/articles/vite-react-ts-vanilla-extract-playground",
          "author": "Meijin",
          "description": "概要\n以下のGitHubリポジトリに、Vite + React + TS + vanilla-extract +α が動作するサンプルリポジトリを作った。\nhttps://github.com/TeXmeijin/vite-react-playground\n本記事では動作させるための設定のポイントや、各利用技術、ライブラリの概要について説明する。\nリポジトリ名をplaygroundとしているとおり、今後このリポジトリには色々なライブラリ(react-hook-form, SWRなど)の検証内容を追記していく予定だが、ひとまず環境構築で一段落したので記事を書いた。\n\n\n 動作確認時のバ...",
          "link": "https://zenn.dev/meijin/articles/vite-react-ts-vanilla-extract-playground",
          "publishedOn": "2021-07-10T08:32:49.000Z",
          "wordCount": 248,
          "title": "Vite + React + TS + vanilla-extract +α が動作するサンプルリポジトリを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--TAfsEyLo--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Meijin%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:Vite%2520%252B%2520React%2520%252B%2520TS%2520%252B%2520vanilla-extract%2520%252B%25CE%25B1%2520%25E3%2581%258C%25E5%258B%2595%25E4%25BD%259C%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AB%25E3%2583%25AA%25E3%2583%259D%25E3%2582%25B8%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pPWmtyWk1nS3djRXl5a2w1X2lVTFZFVmtVVUpkNzkzcjlfejhERjRzPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/garmi/articles/e761f112d9c48a",
          "author": "がーみ",
          "description": "JavaScriptで書かれたReact NativeアプリをTypeScriptへ変換しているのですが、その際にReactNavigation（v5）で画面遷移を実装している箇所に型を定義する際に躓いたのでその時の設定方法を載せておきます。\n以下は公式ドキュメントをなぞって実装しています。\nhttps://reactnavigation.org/docs/typescript/\n\n Navigator (Router)の設定\nまずは画面を管理しているファイルに型を定義します。（プロジェクトによって異なると思いますが、私の場合はRouter.tsx)\n\n      \n        \n ...",
          "link": "https://zenn.dev/garmi/articles/e761f112d9c48a",
          "publishedOn": "2021-07-10T07:38:49.000Z",
          "wordCount": 89,
          "title": "【React Native】React Navigationで遷移時に受け渡すパラメータに型を設定する方法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wsV6aGp0--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2583%25BC%25E3%2581%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25E3%2580%2590React%2520Native%25E3%2580%2591React%2520Navigation%25E3%2581%25A7%25E9%2581%25B7%25E7%25A7%25BB%25E6%2599%2582%25E3%2581%25AB%25E5%258F%2597%25E3%2581%2591%25E6%25B8%25A1%25E3%2581%2599%25E3%2583%2591%25E3%2583%25A9%25E3%2583%25A1%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AB%25E5%259E%258B%25E3%2582%2592%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2599%25E3%2582%258B%25E6%2596%25B9%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2E5OTdhOTUyZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuki0410/articles/2ad97915768826",
          "author": "らんす🍐",
          "description": "はじめに\n最近、JESTとReact Testing Libraryを使ってテストを書く機会が増えてきました。\n最初は愚直にテストを書いていたのですが、以下のような課題が出てきたため、コンポーネント構成を見直してみました。\n\nコンポーネント外のパラメータ(Props や store, API など) と画面表示項目の間に複雑な変換ロジックが入っていてテストを書くのが大変\nUI の変更などによりテストが通らなくなる\n\n\n Before\n1 コンポーネントの中に表示値への変換ロジックが入っているコンポーネントになります。\n変換部分が複雑化するとテストを書くのがだんだん億劫になってきます。...",
          "link": "https://zenn.dev/yuki0410/articles/2ad97915768826",
          "publishedOn": "2021-07-10T06:35:05.000Z",
          "wordCount": 371,
          "title": "テスタブルなReact Componentの書き方",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--mY0FsmJ_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%2589%25E3%2582%2593%25E3%2581%2599%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2583%2586%25E3%2582%25B9%25E3%2582%25BF%25E3%2583%2596%25E3%2583%25AB%25E3%2581%25AAReact%2520Component%25E3%2581%25AE%25E6%259B%25B8%25E3%2581%258D%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjQ2M2NjMGI0My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/garmi/articles/6bdab5527ca325",
          "author": "がーみ",
          "description": "React Nativeでアプリを開発している際に、スマートフォンの端末で文字サイズを大きく設定している場合に文字サイズによってはレイアウトが崩れてしまうことがありました。一旦文字サイズを端末に影響されないよう固定にしたいと思ったのでそのときの調査メモです。\n\n 結論\nTextコンポーネントのPropsに以下の項目を設定\n\n      \n        \n        allowFontScaling={false}\n\n\n      \n      \n コンポーネント共通化\nExpo環境で実装しているので、app.jsonにフォントサイズの固定の設定などはあるか調べてみましたが見当たらな...",
          "link": "https://zenn.dev/garmi/articles/6bdab5527ca325",
          "publishedOn": "2021-07-10T06:34:13.000Z",
          "wordCount": 94,
          "title": "【React Native】端末で設定している文字サイズによる影響を制限したい",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--mChTTD78--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258C%25E3%2583%25BC%25E3%2581%25BF%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590React%2520Native%25E3%2580%2591%25E7%25AB%25AF%25E6%259C%25AB%25E3%2581%25A7%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E6%2596%2587%25E5%25AD%2597%25E3%2582%25B5%25E3%2582%25A4%25E3%2582%25BA%25E3%2581%25AB%25E3%2582%2588%25E3%2582%258B%25E5%25BD%25B1%25E9%259F%25BF%25E3%2582%2592%25E5%2588%25B6%25E9%2599%2590%25E3%2581%2597%25E3%2581%259F%25E3%2581%2584%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fM2E5OTdhOTUyZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "author": "gamine🍑",
          "description": "これまでの経緯\njest で Unit Test 描けるようになった。\n次のステップ行ってみよう。\n「「 Component Test だ！」」\n\n 環境とか\n\nJest\nVue.js Composition API\n\n\n 環境を整える\n必要なものを import する。\n\n      \n        \n        import { createLocalVue, shallowMount } from '@vue/test-utils'\nimport VueCompositionApi from '@vue/composition-api'\nimport CalendarTe...",
          "link": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "publishedOn": "2021-07-10T02:21:24.000Z",
          "wordCount": 295,
          "title": "Composition API で @vue/test-utils 使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--PNTJLfiF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Composition%2520API%2520%25E3%2581%25A7%2520%2540vue%252Ftest-utils%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kupuma_ru21/articles/8003e5dd765b72",
          "author": "くぷまーる",
          "description": "graphqL-code-generatorとは、GraphQLのスキーマからTypeScriptの型を自動生成してくれるライブラリです。便利です。\n普段、何気なく使ってたのですがセットアップ周りとか、あんま知らないなあ。。。\nと思ったのでセットアップしてみました。\n備忘録で残します。\n\n\n初期セットアップ\n\n\n      \n        \n        npx create-react-app graphql-codegen-github-app --template typescript\n\n\n      \n      でappを作成します。\n次に、パッケージをinstallします...",
          "link": "https://zenn.dev/kupuma_ru21/articles/8003e5dd765b72",
          "publishedOn": "2021-07-09T15:49:41.000Z",
          "wordCount": 295,
          "title": "graphqL-code-generatorをセットアップしますた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--owobexK3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258F%25E3%2581%25B7%25E3%2581%25BE%25E3%2583%25BC%25E3%2582%258B%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:graphqL-code-generator%25E3%2582%2592%25E3%2582%25BB%25E3%2583%2583%25E3%2583%2588%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2581%2597%25E3%2581%25BE%25E3%2581%2599%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjFkZGYxMjM1My5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/huequica/articles/first_npm_package",
          "author": "Haru_Yakumo",
          "description": "以前ヒカキンシンメトリーbotを書き直したという話をしたのですが一応まだメンテナンスを続けており、それなりに改善を続けています。\n今回はそのbotの新機能を入れるにあたりコードの分割の目的で自作パッケージをリリースした話をします。\n\n 内容\n\n既存の Array クラスに対し、最後の要素と引数が等しいかどうかを返す\n\n\n['hoge', fuga].lastItemIs('fuga') みたいに使いたい\n\n\n\nこれだけ。故に超軽量超簡単です。\nまあ今後なにか追加したいものを思いついたら追加していく感じの運用を考えているので、パッケージの名前としては @huequica/native_ex...",
          "link": "https://zenn.dev/huequica/articles/first_npm_package",
          "publishedOn": "2021-07-09T15:07:12.000Z",
          "wordCount": 478,
          "title": "npmのパッケージをリリースしてCI/CDさせるまでやってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--99bimqUP--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Haru_Yakumo%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:npm%25E3%2581%25AE%25E3%2583%2591%25E3%2583%2583%25E3%2582%25B1%25E3%2583%25BC%25E3%2582%25B8%25E3%2582%2592%25E3%2583%25AA%25E3%2583%25AA%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2597%25E3%2581%25A6CI%252FCD%25E3%2581%2595%25E3%2581%259B%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pDRUNJM2xDR3ZjNWNrYWN6QVFIcm5QeTZTS2VsX3lZOFNKM05jMVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yoneapp/articles/d01628752f3267",
          "author": "米本剛士",
          "description": "npm install --save-dev jest @types/jest\nnpm install --save-dev @firebase/rules-unit-testing\n\n\n      \n      package.json に test scripts を追加\n\n      \n        \n        \"scripts\": {\n  \"test\": \"firebase emulators:exec --only firestore jest\"\n}\n\n\n      \n      package.json に jest ...",
          "link": "https://zenn.dev/yoneapp/articles/d01628752f3267",
          "publishedOn": "2021-07-09T02:48:16.000Z",
          "wordCount": 81,
          "title": "Firebase Firestore Rule Jest Test Memo",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--cBTzQ1Wd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E7%25B1%25B3%25E6%259C%25AC%25E5%2589%259B%25E5%25A3%25AB%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Firebase%2520Firestore%2520Rule%2520Jest%2520Test%2520Memo%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lJVTIzdVRxSktmVFlhVFZtR2NJZzFWaXQzSlpyVnVPdzRhb3NQbTdRPXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kondo_script/articles/217a9d5285e35f",
          "author": "kondo_script",
          "description": "要約\n\namazon-chime-sdk を web + react-native で使う機会があって色々調べたのでまとめた\nAPI は素直で使いやすい。が、高機能な割にドキュメントがまとまりきっていない\n\naws のコンソールに管理画面もなく準備しなくてはいけないことはそこそこある\namazon-chime と amazon-chime-sdk は別物だが、ドキュメントは一つにまとまっている\n\nAmazon Chime Documentation\n\n\n\n\nとりあえず最初は web版/React版のサンプルを触って基本的なアーキテクチャを理解する。\n\namazon-chime-sdk...",
          "link": "https://zenn.dev/kondo_script/articles/217a9d5285e35f",
          "publishedOn": "2021-07-09T01:16:00.000Z",
          "wordCount": 286,
          "title": "amazon-chime-sdk でWebとReact Nativeでビデオ通話ができるアプリを作る(前編)",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jPYpLMvi--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kondo_script%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:amazon-chime-sdk%2520%25E3%2581%25A7Web%25E3%2581%25A8React%2520Native%25E3%2581%25A7%25E3%2583%2593%25E3%2583%2587%25E3%2582%25AA%25E9%2580%259A%25E8%25A9%25B1%25E3%2581%258C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2528%25E5%2589%258D%25E7%25B7%25A8%2529%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzdhYjk3MmU5Yi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/daikik/articles/b1a2061162ed83",
          "author": "daikik",
          "description": "概要\n最近退職に伴いTypeScriptプロジェクトのCI/CDの見直しを行っているので主にプルリクに対するCIを中心に何をやっているのか(やっていた＆やろうとしているもの含む)紹介します。\nそれぞれはさらっとした紹介のみです。\n\n tsc, prettier, eslint\n基本です。恐らく殆どのプロジェクトでやっているかと思います。\ntscは--noEmitオプションを付けて実行、eslintは--cacheと--quietオプションを付けて実行しています。\nprettierは--list-differentオプションを付けると差分があった場合(=prettierが適用されていな...",
          "link": "https://zenn.dev/daikik/articles/b1a2061162ed83",
          "publishedOn": "2021-07-09T00:44:31.000Z",
          "wordCount": 131,
          "title": "TypeScriptプロジェクトのCIでやってること",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--jmq1bgXG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:daikik%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25AECI%25E3%2581%25A7%25E3%2582%2584%25E3%2581%25A3%25E3%2581%25A6%25E3%2582%258B%25E3%2581%2593%25E3%2581%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKdzhodXdIZE9JSzVZTUMxbE95SmhmRkFZaC1KX0YtS1hWODVMNnE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ryo_kawamata/articles/github-api-v4-pagenation",
          "author": "ryo_kawamata",
          "description": "GitHub API v4 でページネーションを考慮してクエリを投げる機会があったので、その作業メモです。\n\n GitHub API v4のページネーション\nGitHub API v4 で nodes や edges を持つリソースには、PageInfoというオブジェクトフィールドがあり、以下 4 つのフィールドを持ちます。\n\nendCursor\nhasNextPage\nhasPreviousPage\nstartCursor\n\nページングでは、このendCursorとhasNextPageのペア又はstartCursorとhasPreviousPageのペアを使います。\nendCurso...",
          "link": "https://zenn.dev/ryo_kawamata/articles/github-api-v4-pagenation",
          "publishedOn": "2021-07-08T23:05:36.000Z",
          "wordCount": 254,
          "title": "GitHub API v4 でページネーションを考慮したクエリの実装",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--74xfStPW--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ryo_kawamata%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:GitHub%2520API%2520v4%2520%25E3%2581%25A7%25E3%2583%259A%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%258D%25E3%2583%25BC%25E3%2582%25B7%25E3%2583%25A7%25E3%2583%25B3%25E3%2582%2592%25E8%2580%2583%25E6%2585%25AE%25E3%2581%2597%25E3%2581%259F%25E3%2582%25AF%25E3%2582%25A8%25E3%2583%25AA%25E3%2581%25AE%25E5%25AE%259F%25E8%25A3%2585%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTY3Y2IxMjRlZi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/mpyw/articles/3c063143fe884a",
          "author": "mpyw",
          "description": "実装\n\n      \n        \n        /**\n * [α] T 型から undefined 不可キーの union を抽出\n */\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: Record<any, any> extends Pick<T, K>\n    ? never\n    : K;\n}[keyof T];\n\n/**\n * [β] α を利用し， Passed 型から Req 型の条件を満たさないものだけを抽出\n */\ntype MissingKeys<Req, Passed...",
          "link": "https://zenn.dev/mpyw/articles/3c063143fe884a",
          "publishedOn": "2021-07-08T15:50:06.000Z",
          "wordCount": 429,
          "title": "TypeScript で「コンストラクタで渡さなかった引数だけ後で必須にする」の型制約を書く",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Ils-pGZw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:mpyw%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:TypeScriptw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTRlYzc4ZTg0Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/urasaku77/articles/7fefb518fe91db",
          "author": "urasaku77",
          "description": "経緯\nStorybookの公式に沿ってインストールして実行する際、下記のようなエラーが発生\n\nTypeError: Cannot read property 'get' of undefined\n\n\n 原因\n見ただけではなんのことではわからなかったのだが、調べてみると使っているwebpackのバージョンが違うことが原因だった\n公式のinitコマンドを打つと、自動的にwebpack4が使われるらしく、webpack5を使っている場合はエラーが出るみたい（もう少しわかりやすいエラー出してほしい・・・）\n\n 解決策\n.storybook/main.jsを書き換えることでwebpack5を適...",
          "link": "https://zenn.dev/urasaku77/articles/7fefb518fe91db",
          "publishedOn": "2021-07-08T07:45:05.000Z",
          "wordCount": 51,
          "title": "Storybook導入時に、webpackのバージョンで詰まった話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--EWaSgXbt--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:urasaku77%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Storybook%25E5%25B0%258E%25E5%2585%25A5%25E6%2599%2582%25E3%2581%25AB%25E3%2580%2581webpack%25E3%2581%25AE%25E3%2583%2590%25E3%2583%25BC%25E3%2582%25B8%25E3%2583%25A7%25E3%2583%25B3%25E3%2581%25A7%25E8%25A9%25B0%25E3%2581%25BE%25E3%2581%25A3%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTdjYThhOWM0Ny5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nekoniki/articles/f8600d1ab7d908",
          "author": "nekoniki",
          "description": "はじめに\n今回はTypescript + Reactでstyled-componentsを使う場合のTipsを紹介します。\nstyleプロパティで直接記載するよりもスタイルの管理がしやすい+使い回しやすいといったメリットがあるのでおすすめです。\n※普段はReact Nativeを扱っていますが、styled-componentsに着目した場合の使用感はほぼ同じといっていいので、サンプルコードはReactのものになります。\n\n そもそもstyled-componentsとは\nstyled-componentsは所謂CSS in JSライブラリの一種になります。\n名前が表す通り、JSもし...",
          "link": "https://zenn.dev/nekoniki/articles/f8600d1ab7d908",
          "publishedOn": "2021-07-08T05:17:05.000Z",
          "wordCount": 371,
          "title": "styled-componentsをTypescriptで使う上でのTips",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--_dogaJNk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nekoniki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:styled-components%25E3%2582%2592Typescript%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E4%25B8%258A%25E3%2581%25A7%25E3%2581%25AETips%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZjU4Y2YzMzAxMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uttk/articles/ab7afa61eb481f",
          "author": "uttk",
          "description": "この記事について\nwebpackの設定ファイルであるwebpack.config.jsは、TypeScriptで書いてNode.js上で実行できます。しかし、本来であればTypeScriptのソースコードはNode.jsでは実行できないはずです。 この事が気になった私は、今回その仕組みを調べてみたので、この場を借りてその調査結果を共有したいと思います💪\n参照\nhttps://webpack.js.org/configuration/configuration-languages/\n\n 記事の概要\n概要のみ知りたい人に向けて、以下にこの記事で解説する内容のまとめを書いておきます👇\n\n\n...",
          "link": "https://zenn.dev/uttk/articles/ab7afa61eb481f",
          "publishedOn": "2021-07-08T04:36:31.000Z",
          "wordCount": 531,
          "title": "なぜWebpackの設定はTypeScriptで書けるのか？",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--9SBdy7us--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uttk%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2581%25AA%25E3%2581%259CWebpack%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%25E3%2581%25AFTypeScript%25E3%2581%25A7%25E6%259B%25B8%25E3%2581%2591%25E3%2582%258B%25E3%2581%25AE%25E3%2581%258B%25EF%25BC%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzdkM2Q1NTAxNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ysmtegsr/articles/c9077709acb67ff3f1d9",
          "author": "ysmtegsr",
          "description": "はじめに\nいきなりですが、みなさん読書の管理ってどうしていますか？\n僕は、ブクログ というサービスを使っています。以前は、読書メーター を使っていたんですが、ブクログは本に記載されている ISBN コードや Amazon の Asin コードから本を登録できる[1]ということを知って最近移行しました。\nどうせなら自動化したいなと思い、調べてみると同じことを考えた先人たちがいらっしゃったので参考にしつつやってみたのでその紹介です。\n\n 作ったもの\nKindle で書籍を購入した際に Amazon からメールが届きます。そのメールから使いたい Asin コードだけを抜き出して、購入した書...",
          "link": "https://zenn.dev/ysmtegsr/articles/c9077709acb67ff3f1d9",
          "publishedOn": "2021-07-07T14:35:50.000Z",
          "wordCount": 513,
          "title": "Kindle で購入した書籍をブクログへ自動で登録する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--bYkWaURG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ysmtegsr%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Kindle%2520%25E3%2581%25A7%25E8%25B3%25BC%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E6%259B%25B8%25E7%25B1%258D%25E3%2582%2592%25E3%2583%2596%25E3%2582%25AF%25E3%2583%25AD%25E3%2582%25B0%25E3%2581%25B8%25E8%2587%25AA%25E5%258B%2595%25E3%2581%25A7%25E7%2599%25BB%25E9%258C%25B2%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTMxZDc3MGI1Ny5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hugtech/articles/90abb52f28bc68",
          "author": "hugtech",
          "description": "https://www.npmjs.com/package/aws-cognito-temporary-password-generator\n\n      \n        \n        /**\n * Configuration of Password generation.\n * Only possible to specify length. default: 16\n * All Other requirements are automatically satisfy\n * Require numbers\n * Require a special character from t...",
          "link": "https://zenn.dev/hugtech/articles/90abb52f28bc68",
          "publishedOn": "2021-07-07T13:24:03.000Z",
          "wordCount": 268,
          "title": "Generate AWS Cognito password",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Plxq-mdb--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hugtech%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Generate%2520AWS%2520Cognito%2520password%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzc3MTRmYTM3YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuku/articles/45bb0d6cf3da85",
          "author": "Yuku Kotani",
          "description": "仕事で GraphQL を使ったプロダクトに DDD のエッセンスを取り入れたく、GraphQL で部分的にフェッチしたドメインモデルに堅牢な型付けを試みたので、まだまだ荒削りですが紹介します。\n\n やりたいこと\nこのような GraphQL スキーマがあったとします。\n\n      \n        \n        type Person {\n  firstName: String!\n  lastName: String!\n  age: Int!\n}\n\ntype Query {\n  person: Person!\n}\n\n\n      \n      この Person に対して、以下よう...",
          "link": "https://zenn.dev/yuku/articles/45bb0d6cf3da85",
          "publishedOn": "2021-07-07T08:53:13.000Z",
          "wordCount": 884,
          "title": "GraphQL でフェッチした部分的なモデルのドメインロジックを TypeScript と Proxy で表現する試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--pDNMZ-fu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yuku%2520Kotani%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:GraphQL%2520%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A7%25E3%2583%2583%25E3%2583%2581%25E3%2581%2597%25E3%2581%259F%25E9%2583%25A8%25E5%2588%2586%25E7%259A%2584%25E3%2581%25AA%25E3%2583%25A2%25E3%2583%2587%25E3%2583%25AB%25E3%2581%25AE%25E3%2583%2589%25E3%2583%25A1%25E3%2582%25A4%25E3%2583%25B3%25E3%2583%25AD%25E3%2582%25B8%25E3%2583%2583%25E3%2582%25AF%25E3%2582%2592%2520TypeScript%2520%25E3%2581%25A8%2520Proxy%2520%25E3%2581%25A7%25E8%25A1%25A8%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lEQVVDNDRXNTlSbWgyMjVIR2ZycENZQmRlNUJNZ0VCaDl3TGY0PXM4MC1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hugtech/articles/79d6d9f74e3deb",
          "author": "hugtech",
          "description": "tsdx\nhttps://github.com/formium/tsdx\n\n .launch.json\n\n      \n        \n        {\n\t\"version\": \"0.2.0\",\n\t\"configurations\": [\n\t\t{\n\t\t\t\"type\": \"node\",\n\t\t\t\"request\": \"launch\",\n\t\t\t\"name\": \"Jest All\",\n\t\t\t\"program\": \"${workspaceFolder}/node_modules/.bin/tsdx\",\n\t\t\t\"args\": [\"test\", \"--runInBand\"],\n\t\t\t\"conso...",
          "link": "https://zenn.dev/hugtech/articles/79d6d9f74e3deb",
          "publishedOn": "2021-07-07T08:04:34.000Z",
          "wordCount": 74,
          "title": "the launch.json of tsdx + jest + vscode",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--azPDiR0k--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hugtech%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:the%2520launch.json%2520of%2520tsdx%2520%252B%2520jest%2520%252B%2520vscode%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzc3MTRmYTM3YS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/masakitm/articles/8d8271b9fdbee8",
          "author": "masakitm",
          "description": "概要\nReactの環境構築はcreate-react-appで全然いい。\nNext.jsでもGatsbyでも全然いい。\nいいのだけど、サッと書きたいだけのときは重い。\nそう思って最低限必要だと思うものを1コマンド叩けばいいようにスクリプトを書いた。\n\n 解説\neslintやprettierは必要なら別途入れる。\n個人でサクッと書く分にはvscode側のlint拡張とかで済ませていいと思うので含めていない。\ncss in jsも必要なら後で入れればいい。プロダクト開発のテンプレートではないので。\nまずはtsconfigファイルを生成する関数を作る。\nシェルはzshを使っている。\n\n  ...",
          "link": "https://zenn.dev/masakitm/articles/8d8271b9fdbee8",
          "publishedOn": "2021-07-07T07:29:27.000Z",
          "wordCount": 345,
          "title": "サクッとReact + typescript書きたいとき一発で環境構築するシェルスクリプトを作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--xRhrbQuj--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:masakitm%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2582%25B5%25E3%2582%25AF%25E3%2583%2583%25E3%2581%25A8React%2520%252B%2520typescript%25E6%259B%25B8%25E3%2581%258D%25E3%2581%259F%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%25E4%25B8%2580%25E7%2599%25BA%25E3%2581%25A7%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%25E3%2582%25B7%25E3%2582%25A7%25E3%2583%25AB%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2597%25E3%2583%2588%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvbS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sota_yamaguchi/articles/a138b03e62595b",
          "author": "sota_yamaguchi",
          "description": "最近弊社の開発メンバーでブログを書こうという運動があります。\nネタ探しをしていたらよさげな記事を見つけたのでアイデアをお借りします。\nshohei さんありがとう🙏\n※決してパ○リではありません\nhttps://techblog.roxx.co.jp/entry/2021/04/23/064837\n毎週チーム内での読書会や、部署をまたいだエンジニアでの輪読会を行っているのですが、都度読み順を決めるのが面倒なので、参加メンバーをシャッフルしてリストで返す chrome 拡張機能を作ってみました。\nなお、弊社の読書会は Google Meet で行うことが多いため必然的に Google Me...",
          "link": "https://zenn.dev/sota_yamaguchi/articles/a138b03e62595b",
          "publishedOn": "2021-07-07T02:09:31.000Z",
          "wordCount": 139,
          "title": "輪読会の読み順をランダムで決める chrome 拡張機能を作る for Google Meet ［React + TypeScript］",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--digA9JFU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sota_yamaguchi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_57_bold:%25E8%25BC%25AA%25E8%25AA%25AD%25E4%25BC%259A%25E3%2581%25AE%25E8%25AA%25AD%25E3%2581%25BF%25E9%25A0%2586%25E3%2582%2592%25E3%2583%25A9%25E3%2583%25B3%25E3%2583%2580%25E3%2583%25A0%25E3%2581%25A7%25E6%25B1%25BA%25E3%2582%2581%25E3%2582%258B%2520chrome%2520%25E6%258B%25A1%25E5%25BC%25B5%25E6%25A9%259F%25E8%2583%25BD%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2520for%2520Google%2520Meet%2520%25EF%25BC%25BBReact%2520%252B%2520TypeScript%25EF%25BC%25BD%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjBjYWExZWI3Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/bonfireman/articles/400142b4d65409",
          "author": "Shota Nakano",
          "description": "オープン・クローズドの原則とは\nSOLID原則の、Open Closed Principle（以下：OCP）のことで、「ソフトウェアの構成要素は拡張に対して開いていて、修正に対して閉じていなければならない」という原則です。\n言い換えると、ソフトウェアの振る舞いは、既存の成果物を変更せず拡張できるようにすべきであるということです。\n以下の仕様になっているサンプルコードを見ながら実際にGoodコードとBadコードを見ながら、理解を深めてみます。\n\n      \n        \n        - ある会員制ECサイトの決済システムで、会員のグレードによって割引がされる\n- Discou...",
          "link": "https://zenn.dev/bonfireman/articles/400142b4d65409",
          "publishedOn": "2021-07-06T14:32:18.000Z",
          "wordCount": 332,
          "title": "SOLID原則 ◆オープン・クローズドの原則◆",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--YRbC-asU--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nakano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:SOLID%25E5%258E%259F%25E5%2589%2587%2520%25E2%2597%2586%25E3%2582%25AA%25E3%2583%25BC%25E3%2583%2597%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2582%25BA%25E3%2583%2589%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25E2%2597%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0c0tkOE1YUGFDbkJuNmdBY3Y3cWNwbzduYVE5T2ZabUZoUUR4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yiwa/articles/3d4b91fd4fb467",
          "author": "yiwa",
          "description": "Recoilを使ってみたいので、Firebase Authで使ってみました。\nなるべく複雑なことをしないようにRecoilでFirebaseのUserオブジェクトを保持して、認証状態でルーティングするだけのシンプルなものです。\n\n 使うもの\n\nReact\nRecoil\nReact Router Dom\nFirebase\n\n\n ディレクトリ\n\nsrc/\n\nindex.tsx\nApp.tsx\nfirebase.js\nhooks/Auth.tsx\npages/Login.tsx\n\n\n\n\n 1. Atomの設定\n\n      \n        /hooks/Auth.tsx\n        im...",
          "link": "https://zenn.dev/yiwa/articles/3d4b91fd4fb467",
          "publishedOn": "2021-07-06T03:22:43.000Z",
          "wordCount": 435,
          "title": "RecoilでFirebase Authを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--3Bgms2NB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yiwa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Recoil%25E3%2581%25A7Firebase%2520Auth%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2pkc1RqT0pCSEpYenVBQ1VoRFNIUlF2bmlOend0YVBvcndtSnJnQVE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/bonfireman/articles/736a5b5fa36b2c",
          "author": "Shota Nakano",
          "description": "単一責任の原則とは\nSOLID原則の、Single Reaponsibility Principleのことで、「モジュールはたったひとつのアクターに対して責務を負うべきである」という原則です。\n「モジュール」は、ここではいくつかの関数やデータをまとめた凝集性のあるのものと捉えてください。\n「アクター」はシステムを利用するユーザーやステークホルダーを指します。\nなぜ、モジュールはたったひとつのアクターに対して責務を負うべきなのでしょうか？\nそれは、1つのモジュールが複数のアクターに対して責務を持っている状態だと、1つのアクターに対するモジュールの役割を変更したい場合に、別のアクターへの...",
          "link": "https://zenn.dev/bonfireman/articles/736a5b5fa36b2c",
          "publishedOn": "2021-07-05T10:14:29.000Z",
          "wordCount": 131,
          "title": "SOLID原則 ◆単一責任の原則◆",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vnR2BY3c--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Shota%2520Nakano%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:SOLID%25E5%258E%259F%25E5%2589%2587%2520%25E2%2597%2586%25E5%258D%2598%25E4%25B8%2580%25E8%25B2%25AC%25E4%25BB%25BB%25E3%2581%25AE%25E5%258E%259F%25E5%2589%2587%25E2%2597%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2h0c0tkOE1YUGFDbkJuNmdBY3Y3cWNwbzduYVE5T2ZabUZoUUR4PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sosukesuzuki/articles/9c17507e7c34f1",
          "author": "Sosuke Suzuki",
          "description": "ESTree を CSS のセレクター風の記法で走査する esquery というライブラリがある。\nhttps://github.com/estools/esquery\n直接使ったことがある人は少ないかもしれないが、ESLint ルールを書くときに使ことがあるので esquery の構文を使ったことがある人は多いのではないだろうか。\nesquery は便利だが、長いクエリを文字列で渡したりするのが微妙。テンプレートリテラルでいい感じにしたい。ということで outdent と組み合わせる小さなラッパーを書いた。\n\n      \n        \n        import esquery...",
          "link": "https://zenn.dev/sosukesuzuki/articles/9c17507e7c34f1",
          "publishedOn": "2021-07-05T06:31:49.000Z",
          "wordCount": 122,
          "title": "esquery 便利ラッパー",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--31FFgw1L--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sosuke%2520Suzuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:esquery%2520%25E4%25BE%25BF%25E5%2588%25A9%25E3%2583%25A9%25E3%2583%2583%25E3%2583%2591%25E3%2583%25BC%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kzVm5WZHo2MC1CT3lMTS1VVnZaNmdNSDJlTlp1T0lTa1owT3lyNnc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/sosukesuzuki/articles/161ad4870a0f8c",
          "author": "Sosuke Suzuki",
          "description": "この記事では TypeScript から既存のパーサーライブラリを使って JavaScript をパースするときにどのように型をつけるか、自分がやっている方法を紹介する。TypeScript を使って1から JavaScript のパーサーを書く話ではないので注意。\n仕事で、TypeScript で JavaScript をパースして構文木をゴニョゴニョやるツールを書いていた。\nこういうとき、まずどのパーサーを使うかを考える。\nパースする対象が絶対に JavaScript であることがわかっている場合、自分は Acorn を使うことが多い(TypeScript や Flow をパースする...",
          "link": "https://zenn.dev/sosukesuzuki/articles/161ad4870a0f8c",
          "publishedOn": "2021-07-05T05:33:52.000Z",
          "wordCount": 107,
          "title": "TypeScript で JavaScript をパースするときの型",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--T0ESAVK3--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sosuke%2520Suzuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:TypeScript%2520%25E3%2581%25A7%2520JavaScript%2520%25E3%2582%2592%25E3%2583%2591%25E3%2583%25BC%25E3%2582%25B9%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%259E%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2kzVm5WZHo2MC1CT3lMTS1VVnZaNmdNSDJlTlp1T0lTa1owT3lyNnc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawarimidoll/articles/efed8ada433f24",
          "author": "kawarimidoll",
          "description": "Deno Deployの勉強をしています。\nhttps://zenn.dev/kawarimidoll/articles/b0a5064befcd31\n本記事では、Deno Deploy用のコードを書いている際に遭遇した[deno-ts 2339]エラーの対処をまとめました。\n\n 発生するエラー\nエラーはエディタ内で表示されるもので、[deno-ts 2339] [E] Property 'respondWith' does not exist on type 'Event'です。\n例として、公式ドキュメントのHello Worldページのコードを使います。\nhttps://deno.c...",
          "link": "https://zenn.dev/kawarimidoll/articles/efed8ada433f24",
          "publishedOn": "2021-07-05T02:28:21.000Z",
          "wordCount": 142,
          "title": "Deno Deploy用コードで[deno-ts 2339]が発生するときの対処法",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--vHrSd3NX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawarimidoll%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Deno%2520Deploy%25E7%2594%25A8%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25A7%255Bdeno-ts%25202339%255D%25E3%2581%258C%25E7%2599%25BA%25E7%2594%259F%25E3%2581%2599%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AE%25E5%25AF%25BE%25E5%2587%25A6%25E6%25B3%2595%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMjM3OWFjOGQ4Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/beeeyan/articles/d3c40cea9158075a3dcb",
          "author": "beeeyan",
          "description": "ことの経緯\nReact × TypeScript のプロジェクトでRebass使おうかな。\n↓\nRebassの開発者さんが最近開発しているのはTheme UIらしい。\n参考 : Theme UI で Theme Driven な快適 React スタイリング生活\n↓\nTheme UI使ってみよう。\n↓\n動かない（表示されない）。。。\n↓\n動かそう!!!\n※ TypeScriptでTheme UIを導入するときの注意点くらいの記事です。\n\n インストール方法\n公式サイトのGetting Startedには以下のコマンドが記載されている。\n\n      \n        \n       ...",
          "link": "https://zenn.dev/beeeyan/articles/d3c40cea9158075a3dcb",
          "publishedOn": "2021-07-05T02:08:52.000Z",
          "wordCount": 132,
          "title": "Theme UIをReact×TypeScriptのプロジェクトで使う。",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ypw8L8lO--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:beeeyan%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Theme%2520UI%25E3%2582%2592React%25C3%2597TypeScript%25E3%2581%25AE%25E3%2583%2597%25E3%2583%25AD%25E3%2582%25B8%25E3%2582%25A7%25E3%2582%25AF%25E3%2583%2588%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%2586%25E3%2580%2582%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNTg0NTA1OGQzYi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vim」のフィード",
      "feedUrl": "https://zenn.dev/topics/vim/feed",
      "siteUrl": "https://zenn.dev/topics/vim",
      "articles": [
        {
          "id": "https://zenn.dev/ssssssigma/articles/coding-on-smartphone-1",
          "author": "sigma",
          "description": "スマホでコードを書くとなると、パソコンの場合と前提条件が異なります。スマホは画面が小さく、可能な限りテキスト編集のみにリソースを割くべきで、また、スマホのIMEを使った快適なテキスト編集のため、高度な補完も大切です。任意のキーバインドが使えることもアドバンテージとなるでしょう。\n\n Vimを使う\nスマホでVimを使うことは非常に理に適っています。Vimはディスプレイが限られた文字数の文字しか表示できない時代から支持されてきたエディタであり、またスマホのテキストの表示能力はその時代のディスプレイよりもリッチです。\nまた、Vimはキーボードが標準化される前から存在していてスマホのIMEのよう...",
          "link": "https://zenn.dev/ssssssigma/articles/coding-on-smartphone-1",
          "publishedOn": "2021-07-21T18:26:58.000Z",
          "wordCount": 239,
          "title": "スマホでコード書く 環境構築編",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ICQ7Uvci--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sigma%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2582%25B9%25E3%2583%259E%25E3%2583%259B%25E3%2581%25A7%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E6%259B%25B8%25E3%2581%258F%2520%25E7%2592%25B0%25E5%25A2%2583%25E6%25A7%258B%25E7%25AF%2589%25E7%25B7%25A8%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZGZmYmRlM2I0Ni5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/skanehira/articles/2021-07-18-vim-denops-docker",
          "author": "シン・ゴリラ@上野動物園休園中",
          "description": "初めに\n最近denops.vimを使ってプラグインを作るのが自分の中で流行っています。\ndenops.vimはTypeScriptメインでVim/Neovim対応のプラグインを書けるところが魅力的で、型システムがあることでデータ構造が明確にわかるためとても書きやすいので、\n今後プラグインを作るときは基本denops.vimで書こうと考えています。\ndenops.vimの詳細に関してこれ以上触れないので、気になる方はこちらの記事を参照してください。\n本題ですが、Vimを初めたころにdocker.vimというプラグインを作りました。\n本記事はdocker.vimをdenops.vimで書...",
          "link": "https://zenn.dev/skanehira/articles/2021-07-18-vim-denops-docker",
          "publishedOn": "2021-07-19T01:50:16.000Z",
          "wordCount": 187,
          "title": "Vim/Neovimでdockerを操作できるdenops-docker.vimを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wUCkHOzF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25B7%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25B4%25E3%2583%25AA%25E3%2583%25A9%2540%25E4%25B8%258A%25E9%2587%258E%25E5%258B%2595%25E7%2589%25A9%25E5%259C%2592%25E4%25BC%2591%25E5%259C%2592%25E4%25B8%25AD%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vim%252FNeovim%25E3%2581%25A7docker%25E3%2582%2592%25E6%2593%258D%25E4%25BD%259C%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258Bdenops-docker.vim%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fY2VhMGI1MzMxMy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/hhatto/articles/38cc31b301ede3",
          "author": "hhatto",
          "description": "'sys' imported but unused はflake8による警告メッセージ\n\n 結論\nlet g:lsp_diagnostics_virtual_text_enabled = 0 の設定にしておく\n\n 使用環境\n\nneovim(NVIM): v0.5.0\n\n\n 設定ファイル\n\n      \n        .config/nvim/init.vim\n        call plug#begin('~/.config/nvim/plugged')\nPlug 'prabirshrestha/vim-lsp'\nPlug 'mattn/vim-lsp-settings'\ncall...",
          "link": "https://zenn.dev/hhatto/articles/38cc31b301ede3",
          "publishedOn": "2021-07-16T00:16:17.000Z",
          "wordCount": 71,
          "title": "neovim+pyls+flake8でテキスト領域に警告内容が表示されないようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--s9Wpg_gT--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:hhatto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:neovim%252Bpyls%252Bflake8%25E3%2581%25A7%25E3%2583%2586%25E3%2582%25AD%25E3%2582%25B9%25E3%2583%2588%25E9%25A0%2598%25E5%259F%259F%25E3%2581%25AB%25E8%25AD%25A6%25E5%2591%258A%25E5%2586%2585%25E5%25AE%25B9%25E3%2581%258C%25E8%25A1%25A8%25E7%25A4%25BA%25E3%2581%2595%25E3%2582%258C%25E3%2581%25AA%25E3%2581%2584%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTA5MWI2OTY5ZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/omochice/articles/35e339fdfb5241",
          "author": "Omochice",
          "description": "denopsでPaiza IOのwebAPIを実行するプラグインを作った\n\n手元に特定の言語の実行環境がなくてもクラウドでコードを実行できるwebAPI(paiza.io)をvim上から実行するプラグインを作った。\ndenopsについては以下を参照。\n\n\n 使い方\n\n インストール\n私がdein.vimを使ってるのでdeinの例で。\n\n      \n        \n        call dein#add(\"vim-denops/denops.vim\")\ncall dein#add(\"Omochice/dps-paiza-io-vim\")\n\n\n      \n      \n 実行\n...",
          "link": "https://zenn.dev/omochice/articles/35e339fdfb5241",
          "publishedOn": "2021-07-12T03:16:14.000Z",
          "wordCount": 28,
          "title": "denopsでPaiza IOのwebAPIを実行するプラグインを作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--25TfZ9Fk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Omochice%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:denops%25E3%2581%25A7Paiza%2520IO%25E3%2581%25AEwebAPI%25E3%2582%2592%25E5%25AE%259F%25E8%25A1%258C%25E3%2581%2599%25E3%2582%258B%25E3%2583%2597%25E3%2583%25A9%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hydnJRWTl2ZXFCSnpScVZjSzMzN1g3Z3duZmQydm9ZeVhfNFYxRmc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kawagh/articles/library2snippets",
          "author": "kawagh",
          "description": "はじめに\n\n筆者は競技プログラミングで使用頻度の高い処理を関数やクラスとしてライブラリ化しています。\nそのライブラリをコンテスト中に素早く確実に使用するためにスニペット(snippet)化しました。\nライブラリからsnippet化への作業をライブラリ更新の度に変更を手動で反映させるのは面倒かつ不確実なのでその作業を自動化するシェルスクリプトを作成しました。\n本記事ではsnippet化に伴い行った作業やスクリプト、感じたことをまとめておきます。\n\n\n 依存関係\n\nvim\ncoc.nvim(https://github.com/neoclide/coc.nvim)\ncoc-snippet...",
          "link": "https://zenn.dev/kawagh/articles/library2snippets",
          "publishedOn": "2021-07-10T00:12:52.000Z",
          "wordCount": 210,
          "title": "競プロライブラリのスニペット化作業の自動化",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--58y1BoXa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kawagh%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25AB%25B6%25E3%2583%2597%25E3%2583%25AD%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2596%25E3%2583%25A9%25E3%2583%25AA%25E3%2581%25AE%25E3%2582%25B9%25E3%2583%258B%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E5%258C%2596%25E4%25BD%259C%25E6%25A5%25AD%25E3%2581%25AE%25E8%2587%25AA%25E5%258B%2595%25E5%258C%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvay5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uki00a/articles/implemented-pomodoro-timer-using-denops",
          "author": "uki00a",
          "description": "はじめに\ndenops.vimを使って、Vim/Neovim上でポモドーロテクニックを実践するためのプラグインを作成してみました。\nhttps://github.com/uki00a/denops-pomodoro.vim/\nこの記事ではdenops-pomodoro.vimの使い方やdenops.vimを使ってプラグインを実装する上でのノウハウなどについて紹介します。\n\n denops.vimとは?\ndenops.vimとはDenoを使ってVimやNeovimのプラグインを書くためのエコシステムです。\nより詳しくは以下の記事を参照いただければと思います。\nhttps://zenn....",
          "link": "https://zenn.dev/uki00a/articles/implemented-pomodoro-timer-using-denops",
          "publishedOn": "2021-07-04T08:56:51.000Z",
          "wordCount": 201,
          "title": "denops.vimを使ってポモドーロタイマーを実装してみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--Q9Qhj1Bw--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:uki00a%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:denops.vim%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2583%259D%25E3%2583%25A2%25E3%2583%2589%25E3%2583%25BC%25E3%2583%25AD%25E3%2582%25BF%25E3%2582%25A4%25E3%2583%259E%25E3%2583%25BC%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOGUzODk3MWRmOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kouta/articles/ab2d9df961238e",
          "author": "koutarn",
          "description": "ここはどこだ\n\n「あれ、なんの作業をしてたっけ?」\n彼の名前はkoutarn、しがないタッチタイピング虚無僧。\n今日も元気にお経を唱えながらコーディングをしていたのですが、\n度重なるデスマーチのせいで軽く記憶を無くしてしまったようです。\n「vimで作業をしていたんだけど基本的な操作方法以外思いだせない…」\nおっと、彼はvimという 素晴しいエディタ で作業をしていたようですね。\nご都合主義なこの状況から彼と一緒にvimの操作方法を思い出してみましょう。\n\n この記事の対象の方\n✅ この記事は以下の人を想定して書いています。\n\n\nもの忘れが激しい人\nvimって便利なんだけど覚える事が多...",
          "link": "https://zenn.dev/kouta/articles/ab2d9df961238e",
          "publishedOn": "2021-07-01T16:12:11.000Z",
          "wordCount": 379,
          "title": "もしもvimを使っているときに記憶喪失になったら…",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZRCd1Dxh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:koutarn%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%2582%25E3%2581%2597%25E3%2582%2582vim%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%25E3%2581%25A8%25E3%2581%258D%25E3%2581%25AB%25E8%25A8%2598%25E6%2586%25B6%25E5%2596%25AA%25E5%25A4%25B1%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%25E3%2582%2589%25E2%2580%25A6%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNWJhZThjY2ViMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/u1tnk/articles/303ed2cd4fff6c",
          "author": "yuichi tanaka",
          "description": "自ブログから転載 https://u1tnk.github.io/blog/2021/06/28/wsl2_clipboard_config/\n\n 概要\nvim、tmux、windws側のcopy/pasteを全て連携させる。\nWSL2移行前に使っていたVIrtualBox環境からの移行で、結局の所ssh+x転送をやめた結果 xselが使えなくなったのでwindowsのexeを直接叩けばOKだった…というだけ。\n\n windows側のクリップボードを双方向で使えるアプリをインストール\nhttps://github.com/equalsraf/win32yank  を利用。\nwindows...",
          "link": "https://zenn.dev/u1tnk/articles/303ed2cd4fff6c",
          "publishedOn": "2021-06-28T06:38:47.000Z",
          "wordCount": 70,
          "title": "WSL2でvim/tmuxでクリップボード共有できるようにする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--l3UClVe7--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuichi%2520tanaka%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:WSL2%25E3%2581%25A7vim%252Ftmux%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E5%2585%25B1%25E6%259C%2589%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hyWGZVOTktXzY1eFFqQ0dfZEFTUlhFX2RtN1dEcmFoQmhxX1dfMEE9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/lunarxlark/articles/how-to-use-vi-in-sqlplus",
          "author": "lunarxlark",
          "description": "SQL> DEFINE _EDITOR = vi\nSQL> edit\nSQL> /   -- 実行\n\n\n      \n      glogin.sqlに設定することでDEFINE _EDITOR = viを省略できる",
          "link": "https://zenn.dev/lunarxlark/articles/how-to-use-vi-in-sqlplus",
          "publishedOn": "2021-06-26T04:01:08.000Z",
          "wordCount": 20,
          "title": "SQL*Plusでviを使う",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--DxIX2WH8--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lunarxlark%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:SQL%252APlus%25E3%2581%25A7vi%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%2586%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWE1YWYxNDFlMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/lunarxlark/articles/from-denite-to-fzf",
          "author": "lunarxlark",
          "description": "denite.nvimとfzf.vimって比較記事?\n\n違います。断捨離した結果、fzf.vimで事足りてしまったという記事です。\ndenite.nvimとfzf.vimは、一見やれることが似ているように見えますが提供しているインタフェースが違います。\ndenite.nvimの方が拡張性/汎用性が高いです。Pythonスクリプトを呼び出せますし。\n\nどうしてやめたん？\n\nPython3とpipの環境整備に疲れたというのが理由で完全に力不足なだけです。\nそもそも使いこなせていなかったっていうのも大きい。自分に必要な機能が何か見直したら次のがあれば十分っぽい。\n\nコマンドの結果の一覧表示(...",
          "link": "https://zenn.dev/lunarxlark/articles/from-denite-to-fzf",
          "publishedOn": "2021-06-26T04:01:02.000Z",
          "wordCount": 138,
          "title": "From denite.nvim To fzf.vim",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--rNKc3BZy--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lunarxlark%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:From%2520denite.nvim%2520To%2520fzf.vim%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWE1YWYxNDFlMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/lunarxlark/articles/2021_vim_gopls",
          "author": "lunarxlark",
          "description": "goplsが出てから, vimでも定義ジャンプやシンボル検索、ドキュメント参照等が行えるようになった。\nたまにVSCodeを触りvimでの作業を改善できないか考える中で、自身の設定が古いことに気付いた。また、ググってもなかなか出てこなかったのでメモとして記述する。\ncf. GitHub dotfiles\nいきなりだが、vimrcとvim-lsp-settings/settings.jsonを抜粋して貼り付ける。\n以前、GoではLspCodeAction, LspCodeLens等をサポートしていなかったが、今では使えるようになっている。\nキーマップに設定している関数は全てGoで使用出来る...",
          "link": "https://zenn.dev/lunarxlark/articles/2021_vim_gopls",
          "publishedOn": "2021-06-26T03:16:35.000Z",
          "wordCount": 255,
          "title": "2021年版 vim + goplsの設定",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--2jrN75bq--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:lunarxlark%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:2021%25E5%25B9%25B4%25E7%2589%2588%2520vim%2520%252B%2520gopls%25E3%2581%25AE%25E8%25A8%25AD%25E5%25AE%259A%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWE1YWYxNDFlMi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    },
    {
      "title": "Zennの「Vue.js」のフィード",
      "feedUrl": "https://zenn.dev/topics/vue/feed",
      "siteUrl": "https://zenn.dev/topics/vue",
      "articles": [
        {
          "id": "https://zenn.dev/sakots/articles/fb6529ee401fd3",
          "author": "sakots",
          "description": "やあ、さこつです。\nこれは最初の記事だよ！　お手柔らかに。\n\n 今作ってるやつ\n\nこのお絵かき掲示板はSQLiteとさらにBladeを（以下略\nGithub\n\nphpとBladeでつくったお絵描き掲示板です。データベースにSQLiteを使用。\n\n なぜまた新しく作るのか\n\n 新技術のへの渇望\nとにかくいろいろできたほうが仕事が多い。んで、ReactとVueでどっちからやるか比べてたんですけども、どうもJSXに慣れるまで時間がかかりそうだったのでVueから勉強することに決定。\n\n というわけで\nGithubにページだけ作りました。こんごともよろしく。\nveita\n\nにゃー",
          "link": "https://zenn.dev/sakots/articles/fb6529ee401fd3",
          "publishedOn": "2021-07-23T17:48:15.000Z",
          "wordCount": 22,
          "title": "Vue3で掲示板（BBS）を作ろうという試み",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qZdiimEB--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:sakots%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue3%25E3%2581%25A7%25E6%258E%25B2%25E7%25A4%25BA%25E6%259D%25BF%25EF%25BC%2588BBS%25EF%25BC%2589%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258D%25E3%2581%2586%25E3%2581%25A8%25E3%2581%2584%25E3%2581%2586%25E8%25A9%25A6%25E3%2581%25BF%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lXQ3MycUNwUnFXdFJNZFFmRC1jR0ROSUVVVHpqZGJQWmdwUkxldHc9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yusuke_akiyama/articles/1c786c10a22fa8",
          "author": "Yusuke Akiyama",
          "description": "Tailwindcssとは、ユーティリティファーストのCSSフレームワークです。\nhttps://tailwindcss.com/\nユーティリティファーストなのでCSS設計など考慮しなくてもいいので、個人的に好きです！\n\n Tailwindcssのカードデザイン\ncodepenに残しておいたのでHTMLのコードはそこから拾って使ってみてください。\n\n\n できなかったこと\n\n当然ですがクリック時の「ripple efect」（波紋のアニメーション）の表現ができないのは残念ですね...。\nボタンを押した後のアクションなどの指定をしたかったのですが、設定ファイルに記述が必要でCDNでは無理そ...",
          "link": "https://zenn.dev/yusuke_akiyama/articles/1c786c10a22fa8",
          "publishedOn": "2021-07-23T12:23:07.000Z",
          "wordCount": 27,
          "title": "TailwindcssでMaterial UI風のカードデザイン作ってみました",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--B1KtBiC6--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Yusuke%2520Akiyama%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Tailwindcss%25E3%2581%25A7Material%2520UI%25E9%25A2%25A8%25E3%2581%25AE%25E3%2582%25AB%25E3%2583%25BC%25E3%2583%2589%25E3%2583%2587%25E3%2582%25B6%25E3%2582%25A4%25E3%2583%25B3%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%25BE%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2p6ZFpmbTBUMzdyZEhHZUFCTVpGWndPek9Wd2tLQjRET0cweThXR3c9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/0f463859b6b462",
          "author": "おしうみなおき",
          "description": "僕の場合はLaravel×Vueを使っており本来であれば、Laravelの方でsocialiteというパッケージを使用してgoogle oauth認証を行うのが一般的なのですが、\n諸事情でVue側でgoogle oauth認証を行いアクセストークンを使用してから、バックエンドにリクエストを送るという方法をしたかったのです。\nそこで今回はvue側でgoogle認証を実装する方法をメモとして残しておきます。\n\n 1-1. Google Cloud Platformにアクセスし、プロジェクトを作成する\nGoogle Cloud Platformにアクセスしてプロジェクトを作成してください。\nこ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/0f463859b6b462",
          "publishedOn": "2021-07-23T00:19:37.000Z",
          "wordCount": 125,
          "title": "VueからGoogle OAuthを使用してログインする",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--UpVZZVA4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%258B%25E3%2582%2589Google%2520OAuth%25E3%2582%2592%25E4%25BD%25BF%25E7%2594%25A8%25E3%2581%2597%25E3%2581%25A6%25E3%2583%25AD%25E3%2582%25B0%25E3%2582%25A4%25E3%2583%25B3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/b509c1d9b08816",
          "author": "gamine🍑",
          "description": "概要\nmutation 処理で、親子コンポーネントでデータのやりとりをする時。\n例えば、親コンポーネントの中に\n\n      \n        \n        XXX - XXXX\n\n\n      \n      みたいな郵便番号の Input box が連なっている子コンポーネントがある時を考える。\n郵便番号自体はサーバから XXX-XXXX と、一つのまとまりで送られてくる。\n仮に郵便番号の Input box がハイフンつなぎでふたつあるとする。ふたつあるので、どこかでデータをふたつに整形するる必要がある。\nさてさて fetch、 親、 子、どこで整形するのが正しいのだろうか？...",
          "link": "https://zenn.dev/gamin/articles/b509c1d9b08816",
          "publishedOn": "2021-07-22T03:35:55.000Z",
          "wordCount": 52,
          "title": "データの整形は末端で行うようにしている",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--i7RBx_TF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:%25E3%2583%2587%25E3%2583%25BC%25E3%2582%25BF%25E3%2581%25AE%25E6%2595%25B4%25E5%25BD%25A2%25E3%2581%25AF%25E6%259C%25AB%25E7%25AB%25AF%25E3%2581%25A7%25E8%25A1%258C%25E3%2581%2586%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%2597%25E3%2581%25A6%25E3%2581%2584%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yukihirop/articles/20920804228834",
          "author": "yukihirop",
          "description": "はじめに\nこの記事はvue-i18nの翻訳ファイルをコンポーネント毎に管理したいという思いで書いた前回の記事の改良版です。\nhttps://zenn.dev/yukihirop/articles/b36c43014355fd\n前回のやり方が「ほぼタラバガニ」なら今回のやり方は「タラバガニ」です。🦀\n前回のやり方には以下の問題がありました。\n\n      \n        \n        - $etという$tを拡張したグローバルなプロパティーをVueプラグインで用意しなくちゃいけなかった\n- 生成物にファイル構造が分かってしまう情報が出てしまう\n - 翻訳のルートキーをSFCへの相対...",
          "link": "https://zenn.dev/yukihirop/articles/20920804228834",
          "publishedOn": "2021-07-18T05:34:39.000Z",
          "wordCount": 397,
          "title": "vue-i18nの翻訳をyamlファイルかつコンポーネント(SFC)毎にする普通ではない方法[改良版]",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--4JjmdK_m--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yukihirop%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:vue-i18n%25E3%2581%25AE%25E7%25BF%25BB%25E8%25A8%25B3%25E3%2582%2592yaml%25E3%2583%2595%25E3%2582%25A1%25E3%2582%25A4%25E3%2583%25AB%25E3%2581%258B%25E3%2581%25A4%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%2528SFC%2529%25E6%25AF%258E%25E3%2581%25AB%25E3%2581%2599%25E3%2582%258B%25E6%2599%25AE%25E9%2580%259A%25E3%2581%25A7%25E3%2581%25AF%25E3%2581%25AA%25E3%2581%2584%25E6%2596%25B9%25E6%25B3%2595%255B%25E6%2594%25B9%25E8%2589%25AF%25E7%2589%2588%255D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOWYxNzdlMjYzMC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/nappa/articles/e7759c7e65df9a",
          "author": "nappa",
          "description": "ども、今月スタートアップ企業に転職した nappa です。現在新規事業の開発に携わっています。\n今日は転職後2週間でフロントエンドの環境を大工事 & React 導入した話を書きます。\n\n 面接まで\n面接では「新規事業では Vue.js を使っている」と言われて、ある程度フロントエンドの環境が整ってるだろうと思っていました。サーバサイドは Rails を使っているとのことだったので、技術的には前職の経験もあるので、大丈夫だろうと思っていました。\n\n 入社後、フタを開けてみたら...\n入社後、ソースコードを拝見して度肝を抜かれました。\n当初、面接から入社まで Vue.js を使って...",
          "link": "https://zenn.dev/nappa/articles/e7759c7e65df9a",
          "publishedOn": "2021-07-17T11:46:33.000Z",
          "wordCount": 136,
          "title": "転職後2週間でフロントエンドの開発環境を大工事して、React を導入した話",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--JAHoEoUl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:nappa%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E8%25BB%25A2%25E8%2581%25B7%25E5%25BE%258C2%25E9%2580%25B1%25E9%2596%2593%25E3%2581%25A7%25E3%2583%2595%25E3%2583%25AD%25E3%2583%25B3%25E3%2583%2588%25E3%2582%25A8%25E3%2583%25B3%25E3%2583%2589%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E5%25A4%25A7%25E5%25B7%25A5%25E4%25BA%258B%25E3%2581%2597%25E3%2581%25A6%25E3%2580%2581React%2520%25E3%2582%2592%25E5%25B0%258E%25E5%2585%25A5%25E3%2581%2597%25E3%2581%259F%25E8%25A9%25B1%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTgzZjQ1NjcwYy5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/8c99581ca5bdd0",
          "author": "おしうみなおき",
          "description": "vue.jsには算出プロパティを意味する「computed」と関数を意味する「methods」があります。\n少しオブジェクト指向を知っている人ならプロパティ とメソッドは全然別物だということが分かりますが、Vue.jsのcomputedでは計算ができてしまうので、実際にできることととしてはほとんど変わらないのです。\nでは、どういうときにプロパティを使って、どういうときにメソッドを使えば良いのでしょうか？\n\n computedとmethodsの大きな違いはキャッシュ機能があるかどうか\ncomputedにはキャッシュ機能がありページをリロードしてもキャッシュした値を表示するため、データが変わ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/8c99581ca5bdd0",
          "publishedOn": "2021-07-16T02:14:23.000Z",
          "wordCount": 95,
          "title": "vue.jsのcomputedとmethodsの使い分け",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--V-x4f4Gz--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue.js%25E3%2581%25AEcomputed%25E3%2581%25A8methods%25E3%2581%25AE%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "author": "博ノ助",
          "description": "ほんと適当ですみません。\n\n Install\n\n      \n        \n        $ npm install vue-chartjs@2 chart.js@2\n\n\n      \n      なんかこのバージョンじゃないとだめだった。よくわかんないけど両方2にした。\nvue-chartjsの導入を忘れないこと。\n\n      \n        \n        $ npm install @nuxtjs/moment\n\n\n      \n      時間の管理しやすさのためにMoment.jsを。入らなくてもいいかも。\n\n      \n        \n        $ np...",
          "link": "https://zenn.dev/cyber_hacnosuke/articles/4ccb3451de8a9c",
          "publishedOn": "2021-07-15T13:00:42.000Z",
          "wordCount": 269,
          "title": "Chart.jsをNuxt.jsで使って時間の折線を作ったので個人的にメモした",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--k9JKkQCd--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E5%258D%259A%25E3%2583%258E%25E5%258A%25A9%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Chart.js%25E3%2582%2592Nuxt.js%25E3%2581%25A7%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E6%2599%2582%25E9%2596%2593%25E3%2581%25AE%25E6%258A%2598%25E7%25B7%259A%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E5%2580%258B%25E4%25BA%25BA%25E7%259A%2584%25E3%2581%25AB%25E3%2583%25A1%25E3%2583%25A2%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNmNjNzg4YzUzOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "author": "syuri",
          "description": "ドラムロールとは・・・\n数字がじゃかじゃか回るやつです。\n今回は数字が画面内に入ってきたら、数字のドラムロールが開始されるというアニメーションをプラグインを使わずに実装したいと思います。(Nuxt＋Typescriptで開発しています。)\n\n\n 目次\n最初に考えた方法\nもうちょっと賢い方法\n最終型を見たい方はもうちょっと賢い方法から見てください。\n\n 最初に考えた方法\nまずはコードから。\n\n      \n        \n        <div data-destination=\"2000\"　class=\"number\">0</div>\n\n\n      \n   ...",
          "link": "https://zenn.dev/syuri/articles/ea7117bfb35a09",
          "publishedOn": "2021-07-13T13:58:19.000Z",
          "wordCount": 626,
          "title": "Vueでドラムロールを実装する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZEgqWODG--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:syuri%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue%25E3%2581%25A7%25E3%2583%2589%25E3%2583%25A9%25E3%2583%25A0%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2Rhcmsvcy5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kai/articles/try-nuxt-vite",
          "author": "カイ",
          "description": "最近話題となっている Vite を Nuxt で試してみました。\nVite とは簡単に言ってしまうと、速い、フロントエンドのビルドツールです。\n調べてみると、Nuxt Vite というのがあるんですね。\nそちらで試したことを書いていきます。\n\n Nuxt に Vite を導入する\n\n Nuxt のプロジェクトを作成\n\n      \n        \n        $ yarn create nuxt-app vite-nuxt\n\n\n      \n      vite-nuxtのところは任意の名前で大丈夫です。\nVite を試したいだけなので、とりあえず最小限の構成にしました。\ntarg...",
          "link": "https://zenn.dev/kai/articles/try-nuxt-vite",
          "publishedOn": "2021-07-13T13:36:11.000Z",
          "wordCount": 111,
          "title": "ViteをNuxtで試した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--gLF2MdI9--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2582%25AB%25E3%2582%25A4%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vite%25E3%2582%2592Nuxt%25E3%2581%25A7%25E8%25A9%25A6%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMTllM2UwYWYxOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kendai/articles/b6a3467eafb7db",
          "author": "Kendai",
          "description": "先日、誰でも最短1分でYouTubeの切り抜きを作れるウェブサービスを公開しました。\n私はプログラミングの勉強を始めて1年半の初学者ですが、個人開発でサービスを公開するまでに、数多くの失敗と苦労をしてきました(そして今もしてます笑)。後ほど詳しく書きますが、以下のような経験をしました。\n\nハッキングを受けデータを盗まれる\nα版をリリースするも作り直しを決意する\n巻き返しのため海外フリーランサーを雇うも無駄金となる\n公開前に本家が同じ機能を発表し諦めかける\nβ版をリリースするも使われない\n\n同じようにプログラミングの勉強をし始めたばかりの方や、個人開発でいつかはサービスを公開したいと考えて...",
          "link": "https://zenn.dev/kendai/articles/b6a3467eafb7db",
          "publishedOn": "2021-07-13T03:19:32.000Z",
          "wordCount": 133,
          "title": "１００万円失いながらハッキングを乗り越え誰でも１分で切り抜きを作れるサービスを公開するまでの失敗と学び",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--GOZbN5Zh--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Kendai%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_60_bold:%25EF%25BC%2591%25EF%25BC%2590%25EF%25BC%2590%25E4%25B8%2587%25E5%2586%2586%25E5%25A4%25B1%25E3%2581%2584%25E3%2581%25AA%25E3%2581%258C%25E3%2582%2589%25E3%2583%258F%25E3%2583%2583%25E3%2582%25AD%25E3%2583%25B3%25E3%2582%25B0%25E3%2582%2592%25E4%25B9%2597%25E3%2582%258A%25E8%25B6%258A%25E3%2581%2588%25E8%25AA%25B0%25E3%2581%25A7%25E3%2582%2582%25EF%25BC%2591%25E5%2588%2586%25E3%2581%25A7%25E5%2588%2587%25E3%2582%258A%25E6%258A%259C%25E3%2581%258D%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258C%25E3%2582%258B%25E3%2582%25B5%25E3%2583%25BC%25E3%2583%2593%25E3%2582%25B9%25E3%2582%2592%25E5%2585%25AC%25E9%2596%258B%25E3%2581%2599%25E3%2582%258B%25E3%2581%25BE%25E3%2581%25A7%25E3%2581%25AE%25E5%25A4%25B1%25E6%2595%2597%25E3%2581%25A8%25E5%25AD%25A6%25E3%2581%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNjBiOTJmMTEyNi5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/fjsh/articles/aa17332a126162",
          "author": "Sho Fujimoto",
          "description": "Vue3 を使ってフォーム操作のサンプルを作ります。\n\n プロジェクトの作成\n\n      \n        \n        $ vue create form-handling\n\n? Please pick a preset: Manually select features\n? Check the features needed for your project: Choose Vue version, TS, Linter\n? Choose a version of Vue.js that you want to start the project with 3.x\n? Use ...",
          "link": "https://zenn.dev/fjsh/articles/aa17332a126162",
          "publishedOn": "2021-07-12T16:21:10.000Z",
          "wordCount": 579,
          "title": "Vue3 + Composition API でフォーム操作",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--v0-4WOsX--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Sho%2520Fujimoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue3%2520%252B%2520Composition%2520API%2520%25E3%2581%25A7%25E3%2583%2595%25E3%2582%25A9%25E3%2583%25BC%25E3%2583%25A0%25E6%2593%258D%25E4%25BD%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZTk1ODEzMjk0NC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/af1723805deef4",
          "author": "おしうみなおき",
          "description": "vue-clipboardを使えば、vue.jsでクリップボードにコピーがめちゃくちゃ簡単に実現することができます！\n\n VueClipboard2をインストールする\n普通にインストールしていきます\n\n      \n        \n        npm install --save vue-clipboard2\n\n\n      \n      \n VueClipboard2をインポートする\n\n      \n        \n        import VueClipboard from 'vue-clipboard2'\nVue.use(VueClipboard)\n\n\n      \n ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/af1723805deef4",
          "publishedOn": "2021-07-11T23:35:18.000Z",
          "wordCount": 78,
          "title": "vue-clipboard2でクリップボードにコピーを簡単に実現する（laravel×vue.js）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ZUCRBYkk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:vue-clipboard2%25E3%2581%25A7%25E3%2582%25AF%25E3%2583%25AA%25E3%2583%2583%25E3%2583%2597%25E3%2583%259C%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%2594%25E3%2583%25BC%25E3%2582%2592%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E5%25AE%259F%25E7%258F%25BE%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588laravel%25C3%2597vue.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ymkn8crz/articles/25c7962dd20d54",
          "author": "ymkn8crz",
          "description": "以前実装に使ったVueのライブラリについてメモ。\nスライドアップダウンメニュー、ドロップダウンメニュー、アコーディオンメニューなど言い方がいろいろあるやつ。\n\n 今回の仕様\n「詳しくはこちら」と書いてある赤色ヘッダーをクリックすると、\n\nスライドがアニメーションで開き、詳細を表示する。周りの要素もスライドに合わせて移動する。\n\nもう一度クリックすると元に戻る。\n\n vue-slide-up-down\nVue.jsの開発で、スライド機能を実装するならvue-slide-up-downを使うと簡単に実装できた。\nhttps://github.com/danieldiekmeier/vue-s...",
          "link": "https://zenn.dev/ymkn8crz/articles/25c7962dd20d54",
          "publishedOn": "2021-07-10T15:20:44.000Z",
          "wordCount": 271,
          "title": "【Vue.js】スライドアップダウン・ドロップダウン・アコーディオン",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--C1pLbYOA--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ymkn8crz%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2580%2590Vue.js%25E3%2580%2591%25E3%2582%25B9%25E3%2583%25A9%25E3%2582%25A4%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2583%25E3%2583%2597%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25BB%25E3%2583%2589%25E3%2583%25AD%25E3%2583%2583%25E3%2583%2597%25E3%2583%2580%25E3%2582%25A6%25E3%2583%25B3%25E3%2583%25BB%25E3%2582%25A2%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2587%25E3%2582%25A3%25E3%2582%25AA%25E3%2583%25B3%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fODJlZmMzNWNmZS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/lemonadern/articles/6194cc19b71d61",
          "author": "Taishi",
          "description": "チーム開発でVueを使っていると、突然$hoge(hogeは任意の文字列)とかいう変数や関数に遭遇することがある。\n中途半端にVueを知っていると、\n「知らない機能だな、$emit()みたいなやつかな？」\nと思ってGoogle検索をするも、何も結果が得られない...\n「じゃあ普通に関数とかかな？」\nと思ってコード内を検索しても、定義箇所が見当たらない...　　\nという状況に陥ることがある。\nかなり困惑したので調べた。\n\n $hogeとは？\nVueの場合、$hogeというのはすべてのコンポーネントからアクセスできるデータやメゾッドを示している可能性が高い。\nもしファイル内で宣言もなく、im...",
          "link": "https://zenn.dev/lemonadern/articles/6194cc19b71d61",
          "publishedOn": "2021-07-10T07:43:20.000Z",
          "wordCount": 43,
          "title": "Vueで「$」から始まる謎のモノに困惑した",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--L505w2oc--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Taishi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25E3%2581%25A7%25E3%2580%258C%2524%25E3%2580%258D%25E3%2581%258B%25E3%2582%2589%25E5%25A7%258B%25E3%2581%25BE%25E3%2582%258B%25E8%25AC%258E%25E3%2581%25AE%25E3%2583%25A2%25E3%2583%258E%25E3%2581%25AB%25E5%259B%25B0%25E6%2583%2591%25E3%2581%2597%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fOTgwMmRmNmYzNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "author": "gamine🍑",
          "description": "これまでの経緯\njest で Unit Test 描けるようになった。\n次のステップ行ってみよう。\n「「 Component Test だ！」」\n\n 環境とか\n\nJest\nVue.js Composition API\n\n\n 環境を整える\n必要なものを import する。\n\n      \n        \n        import { createLocalVue, shallowMount } from '@vue/test-utils'\nimport VueCompositionApi from '@vue/composition-api'\nimport CalendarTe...",
          "link": "https://zenn.dev/gamin/articles/796f8b643c8401",
          "publishedOn": "2021-07-10T02:21:24.000Z",
          "wordCount": 295,
          "title": "Composition API で @vue/test-utils 使ってみた",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--PNTJLfiF--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Composition%2520API%2520%25E3%2581%25A7%2520%2540vue%252Ftest-utils%2520%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E3%2581%25BF%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/3c829d8669e188",
          "author": "おしうみなおき",
          "description": "vue-toastedは処理成功したときの「処理が完了しました」やエラーが発生したときの「エラーが発生しました」の実装がかんたんにできるライブラリです。\nそもそも、 真ん中の下や右上あたりからすっと通知が出てきて、すっと隠れるやつを「トースター」っていうんですね。\nではさっそく使ってみます。\n\n vue-toastedをインストールする\nささっとインストールしちゃいます。\n\n      \n        \n        npm install vue-toasted --save\n\n\n      \n      \n app.jsでインポートする\nこのあたりはライブラリを使うときのルーティ...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/3c829d8669e188",
          "publishedOn": "2021-07-08T23:56:57.000Z",
          "wordCount": 98,
          "title": "vue-toastedで処理成功時・エラー時の通知を楽に実装する（laravel×vue.js）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--E9s359o2--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:vue-toasted%25E3%2581%25A7%25E5%2587%25A6%25E7%2590%2586%25E6%2588%2590%25E5%258A%259F%25E6%2599%2582%25E3%2583%25BB%25E3%2582%25A8%25E3%2583%25A9%25E3%2583%25BC%25E6%2599%2582%25E3%2581%25AE%25E9%2580%259A%25E7%259F%25A5%25E3%2582%2592%25E6%25A5%25BD%25E3%2581%25AB%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588laravel%25C3%2597vue.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/9cb55513c40848",
          "author": "おしうみなおき",
          "description": "今回は vue-js-modalで超簡単にモーダルを表示させる方法について紹介したいと思います。\nではさっそくいってみましょう💨\n\n vue-js-modalをインストール\nまずはライブラリをインストールします\n\n      \n        \n        npm install vue-js-modal --save\n\n\n      \n      僕の場合はバージョン1.3.xじゃないとインストールできなかったので、 npm install vue-js-modal@1.3 --save  という指定をしました。\nどんなバージョンがあるかはこちらで確認できます\n\n vue-js-m...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/9cb55513c40848",
          "publishedOn": "2021-07-07T00:06:49.000Z",
          "wordCount": 104,
          "title": "vue-js-modalで超簡単にモーダルを実装する（laravel×vue）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--XI5dWOTE--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:vue-js-modal%25E3%2581%25A7%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E3%2581%25AB%25E3%2583%25A2%25E3%2583%25BC%25E3%2583%2580%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588laravel%25C3%2597vue%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/toshinobu/articles/233aa9b1b65115",
          "author": "toshinobu",
          "description": "Nuxtでi18n化対応\n昨今、というかだいぶ前からグローバリゼーションが進んできていますが、それにつれアプリ多言語化が必要な場面が増えてきたかと思います。\n規模やコンテクストにもよると思いますが、現在ではほとんどのアプリで多言語化が必要ではないでしょうか？\n\n そもそもi18nとは\nそもそもi18nってなんぞ？って疑問に思われたかもしれないですが、私も最初はそうでした笑\ni18nとはInternationalizationつまり国際化の略です。\n最初のIと最後のnの間に18文字あるからi18nなんですね。k8sといい、これ初見じゃ絶対わからないでしょ\n(余談ですが、こうゆう略し方を...",
          "link": "https://zenn.dev/toshinobu/articles/233aa9b1b65115",
          "publishedOn": "2021-07-06T00:21:30.000Z",
          "wordCount": 330,
          "title": "Nuxtでi18n化対応",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--qL2I4_Ct--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:toshinobu%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Nuxt%25E3%2581%25A7i18n%25E5%258C%2596%25E5%25AF%25BE%25E5%25BF%259C%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hMeEh5bjU4bWZtSllLbl8zMEw2VVIyWG1XS3FMSDJMcWJBUWRZZ3c9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dfukui/articles/e8ff9f66ae094c",
          "author": "dfukui",
          "description": "はじめに\nCloud9 + Vue.jsを使って管理画面を作成するチュートリアルとなります。\n\n 管理画面テンプレートの導入\nCloud9のターミナルで以下実行します。\nCloud9の基本的な操作方法は以下を参考にしてください。\nhttps://26gram.com/how-to-use-cloud9\n\n Core UI のダウンロード\n\n      \n        \n        # リポジトリのクローン\ngit clone https://github.com/coreui/coreui-free-vue-admin-template.git CoreUI-Vue\n\n# ダウ...",
          "link": "https://zenn.dev/dfukui/articles/e8ff9f66ae094c",
          "publishedOn": "2021-07-05T01:45:08.000Z",
          "wordCount": 1205,
          "title": "Vue.jsを使って管理画面を作る",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--QCQgfhER--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dfukui%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:Vue.js%25E3%2582%2592%25E4%25BD%25BF%25E3%2581%25A3%25E3%2581%25A6%25E7%25AE%25A1%25E7%2590%2586%25E7%2594%25BB%25E9%259D%25A2%25E3%2582%2592%25E4%25BD%259C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EvQUFUWEFKekFEQnk4TWZ4MGlLeUZqLUtaM3Nna0ItVmM4SE1aaDlSdTBOV3Y9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/naoki_oshiumi/articles/776b9052f47d52",
          "author": "おしうみなおき",
          "description": "Vue.jsで無限スクロールを実装したい場合は vue-infinite-scroll というライブラリを使用することをおすすめします。\n超簡単に実装できます\n公式ページはこちら\n\n ライブラリのインストール\nライブラリをインストールします\n\n      \n        \n        npm install vue-infinite-loading -S\n\n\n      \n      \n infinite-loadingコンポーネントを設置する\nライブラリをインストールしたらinfinite-loadingコンポーネントが使えるようになっているので、設置します。\n@infinite...",
          "link": "https://zenn.dev/naoki_oshiumi/articles/776b9052f47d52",
          "publishedOn": "2021-07-04T23:58:01.000Z",
          "wordCount": 193,
          "title": "vue-infinite-scrollで超簡単無限スクロールを実装する（vue.js）",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--kXWiGs_4--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%25E3%2581%258A%25E3%2581%2597%25E3%2581%2586%25E3%2581%25BF%25E3%2581%25AA%25E3%2581%258A%25E3%2581%258D%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:vue-infinite-scroll%25E3%2581%25A7%25E8%25B6%2585%25E7%25B0%25A1%25E5%258D%2598%25E7%2584%25A1%25E9%2599%2590%25E3%2582%25B9%25E3%2582%25AF%25E3%2583%25AD%25E3%2583%25BC%25E3%2583%25AB%25E3%2582%2592%25E5%25AE%259F%25E8%25A3%2585%25E3%2581%2599%25E3%2582%258B%25EF%25BC%2588vue.js%25EF%25BC%2589%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fNDRmOWU0YmY2ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuneco/articles/petite-vue-hello",
          "author": "yuki matsumoto",
          "description": "petite-vueは軽量・簡易版のVue.js\n2021/7/2にVue.js作者のEvan Youさんの新作、petite-vueがリリースされました。\nざっくりした概要は『petite-vue 最速 使い方』など、早速日本語でまとめてくださっている方がいるので、そちらを参照いただくと良いと思います。\n（ただし、当面は破壊的な変更や機能追加が頻繁に入ると思われるので、日本語の記事と併せて公式もチェックするのが良いと思います）\n\n 習うより慣れろ。ゲーム作って「完全に理解」してみた\n公式のREADMEやサンプルが結構丁寧なので、眺めてみるだけでなんとなく理解できた気になってきます。...",
          "link": "https://zenn.dev/yuneco/articles/petite-vue-hello",
          "publishedOn": "2021-07-04T17:58:47.000Z",
          "wordCount": 467,
          "title": "ゲームを作ってpetite-vueを完全に理解する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--e4jJfPj_--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:yuki%2520matsumoto%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E3%2582%25B2%25E3%2583%25BC%25E3%2583%25A0%25E3%2582%2592%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%25A6petite-vue%25E3%2582%2592%25E5%25AE%258C%25E5%2585%25A8%25E3%2581%25AB%25E7%2590%2586%25E8%25A7%25A3%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzI1ODE2MjI1ZC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/chida/articles/8f16e42364398c",
          "author": "chida",
          "description": "Dockerは事前にMacにインストールされていることを前提とします。\n\n 手順\nVue.jsの開発環境を構築して起動するまでの手順です。\n\nNode.jsのバージョンを確認\ndockerhubを確認\nDockerfileの作成\ndocker-compose.ymlの作成\nコンテナの起動\nコンテナ内の作業\n\n\n Node.jsのバージョンを確認\nNode.jsを利用するため、必要なバージョンを確認します。様々なバージョンの中でも、公式サイトを見て推奨版であるLTSを確認します。\nhttps://nodejs.org/en/\nLTSとはLong-term Supportの略で、長期の保守運...",
          "link": "https://zenn.dev/chida/articles/8f16e42364398c",
          "publishedOn": "2021-07-04T09:56:17.000Z",
          "wordCount": 185,
          "title": "docker-composeでVue.jsの開発環境を構築する",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--_Y2w0rpH--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:chida%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:docker-compose%25E3%2581%25A7Vue.js%25E3%2581%25AE%25E9%2596%258B%25E7%2599%25BA%25E7%2592%25B0%25E5%25A2%2583%25E3%2582%2592%25E6%25A7%258B%25E7%25AF%2589%25E3%2581%2599%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2owaDZCVkFGckw0ME1VT2pXVDFENG9xd2FDTU02dmFNSVNoT3F1PXM5Ni1j%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/silloi/articles/ecfab241f3fea9",
          "author": "silloi",
          "description": "2021年7月3日（日本時間）、Vueの創始者Evan Youが新たなパッケージをリリースしました。\nhttps://github.com/vuejs/petite-vue\n\n petite-vue\npetite-vue（プティットゥ・ヴュー「プチVue」の意）は先進的な機能を備えた、超軽量なVueの下位互換です。スタンダードなVueと同等のテンプレート構文・リアクティビティモデルを有していますが、かつてサーバーフレームワークで所々に書かれていたような、ちょっとしたインタラクションを置き換えられるよう特化しています。\n\n5.7KB以下\nDOMベース（仮想DOMを使用しない）\n@vue/r...",
          "link": "https://zenn.dev/silloi/articles/ecfab241f3fea9",
          "publishedOn": "2021-07-03T07:40:54.000Z",
          "wordCount": 397,
          "title": "petite-vue 最速 使い方",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--g01DhcMv--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:silloi%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_80_bold:petite-vue%2520%25E6%259C%2580%25E9%2580%259F%2520%25E4%25BD%25BF%25E3%2581%2584%25E6%2596%25B9%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYTMxMzkzYjgwNS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/ytr0903/articles/eacee1dee6b055",
          "author": "ykoizumi0903",
          "description": "この記事は、昨日会社のテックブログに寄稿した記事\nhttps://tech.andpad.co.jp/entry/2021/07/01/170000\nに入りきらなかった情報の補足です。\n元の記事では、Vue + JSX + Nuxt Composition APIという組み合わせで開発を行う際の、環境設定・導入方法、メリットとデメリット、そしてJSXに限らないComposition APIのTipsまでいろいろ書いていますので、興味のある方は先にそちらの記事をご覧ください【PR】！\n\nさて、冒頭の記事ではVue + JSX（TSX）の組み合わせでの開発のメリデメを挙げる中で、\n現状のVu...",
          "link": "https://zenn.dev/ytr0903/articles/eacee1dee6b055",
          "publishedOn": "2021-07-02T11:46:58.000Z",
          "wordCount": 132,
          "title": "Vue 2 × TSX で完璧な型サポートを手に入れる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--zFxN9enk--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:ykoizumi0903%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%25202%2520%25C3%2597%2520TSX%2520%25E3%2581%25A7%25E5%25AE%258C%25E7%2592%25A7%25E3%2581%25AA%25E5%259E%258B%25E3%2582%25B5%25E3%2583%259D%25E3%2583%25BC%25E3%2583%2588%25E3%2582%2592%25E6%2589%258B%25E3%2581%25AB%25E5%2585%25A5%25E3%2582%258C%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsveS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/yuki__k/articles/7ec08743230e49",
          "author": "@yuki",
          "description": "まずはmethods!\nまずはボタンをクリックして呼び出した時の挙動。ボタンをクリックした時のみ呼び出されます。\n当たり前だよね。問題は後者よ😩\n\n      \n        index.html\n        <div id=\"app\">\n  <button @click=\"method\">クリック</button>\n</div>\n\n\n      \n      \n      \n        index.js\n        const app = {\n  methods: {\n    method() {\n      conso...",
          "link": "https://zenn.dev/yuki__k/articles/7ec08743230e49",
          "publishedOn": "2021-06-30T13:53:11.000Z",
          "wordCount": 95,
          "title": "Vueのmethods、computedの挙動・使い分けに混乱した記憶があったので整理してみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--oFqvtBMe--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:%2540yuki%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:Vue%25E3%2581%25AEmethods%25E3%2580%2581computed%25E3%2581%25AE%25E6%258C%2599%25E5%258B%2595%25E3%2583%25BB%25E4%25BD%25BF%25E3%2581%2584%25E5%2588%2586%25E3%2581%2591%25E3%2581%25AB%25E6%25B7%25B7%25E4%25B9%25B1%25E3%2581%2597%25E3%2581%259F%25E8%25A8%2598%25E6%2586%25B6%25E3%2581%258C%25E3%2581%2582%25E3%2581%25A3%25E3%2581%259F%25E3%2581%25AE%25E3%2581%25A7%25E6%2595%25B4%25E7%2590%2586%25E3%2581%2597%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fMzZhZmE4MmNjOC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/dialbird/articles/0f79de871fe543",
          "author": "dialbird",
          "description": "「あー。このパターンのコード、何度も書いてるな〜」と思っているそこのVSCodeユーザーさん。\nエンジニアらしく「パパッと」コードテンプレートを登録して、VSCodeから召喚できるようにしませんか？\n\n「ただ、設定とか調べるのがちょっと...」という方！\n今この方法を知って、普段から使えるようになるだけで、どんどんコーディングのスピードを加速していけるようになります！\nこちらも5分コースです。\n\n プラグインのインストール\nまずはこのプラグインをインストールしましょう！\nhttps://marketplace.visualstudio.com/items?itemName=inu1255...",
          "link": "https://zenn.dev/dialbird/articles/0f79de871fe543",
          "publishedOn": "2021-06-30T12:18:04.000Z",
          "wordCount": 26,
          "title": "【早めにつけたいVSCode習慣】何度もよく使うコードのテンプレートはスムーズにコードスニペットへ！",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--ujbNd1IC--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:dialbird%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_65_bold:%25E3%2580%2590%25E6%2597%25A9%25E3%2582%2581%25E3%2581%25AB%25E3%2581%25A4%25E3%2581%2591%25E3%2581%259F%25E3%2581%2584VSCode%25E7%25BF%2592%25E6%2585%25A3%25E3%2580%2591%25E4%25BD%2595%25E5%25BA%25A6%25E3%2582%2582%25E3%2582%2588%25E3%2581%258F%25E4%25BD%25BF%25E3%2581%2586%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2581%25AE%25E3%2583%2586%25E3%2583%25B3%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%2588%25E3%2581%25AF%25E3%2582%25B9%25E3%2583%25A0%25E3%2583%25BC%25E3%2582%25BA%25E3%2581%25AB%25E3%2582%25B3%25E3%2583%25BC%25E3%2583%2589%25E3%2582%25B9%25E3%2583%258B%25E3%2583%259A%25E3%2583%2583%25E3%2583%2588%25E3%2581%25B8%25EF%25BC%2581%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2lYZl96c2pGMDVnZlVCaUJYR1NwVlB3aXFYZlJKTElqWFlHYkVPdGc9czgwLWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/goemon/articles/738ef819f68998",
          "author": "Goemon",
          "description": "始めに\n2020年1月から受託開発会社に異業種から転職してから1年半が経ち、ある程度の経験をつけてきたもののECのデモアプリは作ったことがありますが、自分でオリジナルアプリを作ってこなかったので今回、個人で運用することも視野にアプリを作ることにしました。\n\n アプリの概要\n\n なぜこのアプリを作ろうと思ったか\n自分自身、インスタグラムやRetty,食べログなどから美味しい店を探すことが多く、探すこと自体に苦を感じることはないですが、一方探すことに時間がかかりすぎ、結局目当ての店が見つからない、もしくは多すぎてなかなか決められないということがありました。自分で探すよりも勝手にピックアッ...",
          "link": "https://zenn.dev/goemon/articles/738ef819f68998",
          "publishedOn": "2021-06-29T01:09:01.000Z",
          "wordCount": 58,
          "title": "美味しい店レコメンドアプリをLaravel × Vue.js のSPAで作った",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--KVbBcjNu--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:Goemon%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E7%25BE%258E%25E5%2591%25B3%25E3%2581%2597%25E3%2581%2584%25E5%25BA%2597%25E3%2583%25AC%25E3%2582%25B3%25E3%2583%25A1%25E3%2583%25B3%25E3%2583%2589%25E3%2582%25A2%25E3%2583%2597%25E3%2583%25AA%25E3%2582%2592Laravel%2520%25C3%2597%2520Vue.js%2520%25E3%2581%25AESPA%25E3%2581%25A7%25E4%25BD%259C%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2hySmh1MkFjWEZMbXZzWWVFRWtoU3gwZ3NYdHJmektMMm9tVV9VblE9czk2LWM=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/uta_mory/articles/f8bad2ffa86d99",
          "author": "utamori",
          "description": "今までは、プロジェクトを作りたいディレクトリに何かファイルがあるとエラーになった\n\n      \n        \n        projects/test-pj\n> touch Makefile\n\n\n      \n      \n      \n        \n        projects/test-pj\n> npx create-nuxt-app .\n\n\ncreate-nuxt-app v3.7.0\nCould not create project in test-pj because the directory is not empty.\n\n\n      \n    ...",
          "link": "https://zenn.dev/uta_mory/articles/f8bad2ffa86d99",
          "publishedOn": "2021-06-28T10:24:38.000Z",
          "wordCount": 135,
          "title": "create-nuxt-appで既存のディレクトリを上書きできるようになった",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--wzB7J9HV--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:utamori%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:create-nuxt-app%25E3%2581%25A7%25E6%2597%25A2%25E5%25AD%2598%25E3%2581%25AE%25E3%2583%2587%25E3%2582%25A3%25E3%2583%25AC%25E3%2582%25AF%25E3%2583%2588%25E3%2583%25AA%25E3%2582%2592%25E4%25B8%258A%25E6%259B%25B8%25E3%2581%258D%25E3%2581%25A7%25E3%2581%258D%25E3%2582%258B%25E3%2582%2588%25E3%2581%2586%25E3%2581%25AB%25E3%2581%25AA%25E3%2581%25A3%25E3%2581%259F%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly96ZW5uLWRldi5naXRodWIuaW8vZGVmYXVsdC1hdmF0YXJzL2RhcmsvdS5zdmc=%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/kata_n/articles/233ee8e03c5cb1",
          "author": "kata-n",
          "description": "Vue.jsでTypeScriptを使う時、いくつか選択肢があるのを知って整理したくなったので最小限の構成で同じ機能のものを作成し見比べて見ました。\nVueのバージョンは２.x系です。\nなお、Vueの3系では、クラスコンポーネント以外にComposition APIといった新しい書き方が主流になりつつありますが、2.x系を使用したプロジェクトはまだ沢山ある、現在携わっているプロジェクトもクラスコンポーネントを使用している為、TypeScriptの理解を深めるためにもVue.extendとクラスコンポーネントの比較をしています。\n\n 検証する\n\nボタンをクリックすると、数字がカウントアップ...",
          "link": "https://zenn.dev/kata_n/articles/233ee8e03c5cb1",
          "publishedOn": "2021-06-27T07:52:56.000Z",
          "wordCount": 556,
          "title": "最小限の構成でVue.extendとクラスコンポーネントを比べてみる",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--1JTvOUxa--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:kata-n%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:%25E6%259C%2580%25E5%25B0%258F%25E9%2599%2590%25E3%2581%25AE%25E6%25A7%258B%25E6%2588%2590%25E3%2581%25A7Vue.extend%25E3%2581%25A8%25E3%2582%25AF%25E3%2583%25A9%25E3%2582%25B9%25E3%2582%25B3%25E3%2583%25B3%25E3%2583%259D%25E3%2583%25BC%25E3%2583%258D%25E3%2583%25B3%25E3%2583%2588%25E3%2582%2592%25E6%25AF%2594%25E3%2581%25B9%25E3%2581%25A6%25E3%2581%25BF%25E3%2582%258B%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDU4MTg1MWM4MC5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/gamin/articles/58bf5f1b9e8ea2",
          "author": "gamine🍑",
          "description": "概要\nuseMutation を使いたい!使おう！怒られる！なんで！\n\n      \n        \n        TypeError: Cannot read property '$root' of null\n    at getAppTracking (loadingTracking.js?b1f0:5)\n    at getCurrentTracking (loadingTracking.js?b1f0:25)\n    at track (loadingTracking.js?b1f0:50)\n    at Object.trackMutation (loadingTrac...",
          "link": "https://zenn.dev/gamin/articles/58bf5f1b9e8ea2",
          "publishedOn": "2021-06-27T04:09:40.000Z",
          "wordCount": 115,
          "title": "Vue Apollo の useMutation でつまづいたところ",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--G4d3qsIl--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:gamine%2520%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:Vue%2520Apollo%2520%25E3%2581%25AE%2520useMutation%2520%25E3%2581%25A7%25E3%2581%25A4%25E3%2581%25BE%25E3%2581%25A5%25E3%2581%2584%25E3%2581%259F%25E3%2581%25A8%25E3%2581%2593%25E3%2582%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fZDE0MDRhMWYwOS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        },
        {
          "id": "https://zenn.dev/tatsuhiko/articles/d7cedc5a1a3f5a",
          "author": "tatsuhiko",
          "description": "前提\n\nVeturを利用している\njsconfig.jsonを書いている\nNuxtかVueで開発している\n\n\n 参考にしたサイト\nずっと理由がわからず、VS Codeくそやん！とか思ってしまいましたがどうやらVS Codeは悪くないようです。\nVetur Intellisense slow and incomplete if project has jsconfig #547\n\n\n 結論\njsconfigの「include」には、veturに適用する必要のあるフォルダーのみを含める。\nプロジェクトフォルダのjsconfig.jsonを\n\n      \n        \n       ...",
          "link": "https://zenn.dev/tatsuhiko/articles/d7cedc5a1a3f5a",
          "publishedOn": "2021-06-26T09:20:12.000Z",
          "wordCount": 102,
          "title": "VS CodeでVueのIntellisense(入力補完)が遅いとき",
          "enclosure": {
            "url": "https://res.cloudinary.com/dlhzyuewr/image/upload/s--XaO6O-7a--/co_rgb:222%2Cg_south_west%2Cl_text:notosansjp-medium.otf_37_bold:tatsuhiko%2Cx_203%2Cy_98/c_fit%2Cco_rgb:222%2Cg_north_west%2Cl_text:notosansjp-medium.otf_70_bold:VS%2520Code%25E3%2581%25A7Vue%25E3%2581%25AEIntellisense%2528%25E5%2585%25A5%25E5%258A%259B%25E8%25A3%259C%25E5%25AE%258C%2529%25E3%2581%258C%25E9%2581%2585%25E3%2581%2584%25E3%2581%25A8%25E3%2581%258D%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3plbm4tdXNlci11cGxvYWQvYXZhdGFyL2ljb25fYzY4MmU0MzhkMS5qcGVn%2Cr_max%2Cw_90%2Cx_87%2Cy_72/v1609308637/og/new_txlqub.png",
            "length": "0",
            "type": "image/png"
          }
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}